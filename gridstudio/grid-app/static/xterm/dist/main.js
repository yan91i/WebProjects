/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./xterm.js/xterm */ \"./xterm.js/xterm.js\");\n/* harmony import */ var _xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _xterm_js_addons_attach_attach__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xterm.js/addons/attach/attach */ \"./xterm.js/addons/attach/attach.js\");\n/* harmony import */ var _xterm_js_addons_attach_attach__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_xterm_js_addons_attach_attach__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _xterm_js_addons_fit_fit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./xterm.js/addons/fit/fit */ \"./xterm.js/addons/fit/fit.js\");\n/* harmony import */ var _xterm_js_addons_fit_fit__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_xterm_js_addons_fit_fit__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _xterm_js_addons_fullscreen_fullscreen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./xterm.js/addons/fullscreen/fullscreen */ \"./xterm.js/addons/fullscreen/fullscreen.js\");\n/* harmony import */ var _xterm_js_addons_fullscreen_fullscreen__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_xterm_js_addons_fullscreen_fullscreen__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _xterm_js_addons_search_search__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./xterm.js/addons/search/search */ \"./xterm.js/addons/search/search.js\");\n/* harmony import */ var _xterm_js_addons_search_search__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_xterm_js_addons_search_search__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _xterm_js_addons_winptyCompat_winptyCompat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./xterm.js/addons/winptyCompat/winptyCompat */ \"./xterm.js/addons/winptyCompat/winptyCompat.js\");\n/* harmony import */ var _xterm_js_addons_winptyCompat_winptyCompat__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_xterm_js_addons_winptyCompat_winptyCompat__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n\n\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__[\"applyAddon\"](_xterm_js_addons_attach_attach__WEBPACK_IMPORTED_MODULE_1__);\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__[\"applyAddon\"](_xterm_js_addons_fit_fit__WEBPACK_IMPORTED_MODULE_2__);\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__[\"applyAddon\"](_xterm_js_addons_fullscreen_fullscreen__WEBPACK_IMPORTED_MODULE_3__);\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__[\"applyAddon\"](_xterm_js_addons_search_search__WEBPACK_IMPORTED_MODULE_4__);\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__[\"applyAddon\"](_xterm_js_addons_winptyCompat_winptyCompat__WEBPACK_IMPORTED_MODULE_5__);\n\n(function(){\n\n    var TermManager = function(app){\n\n      var terminalContainer = document.getElementById('terminal-container')\n    \n      var protocol,\n        socketURL,\n        socket,\n        pid;\n    \n      var _this = this;\n      var term;\n    \n      this.app = app;\n    \n      this.init = function(){\n        this.createTerminal();\n      }\n            \n      this.isFocused = function(){\n        return this.term.isFocused;\n      }\n    \n      this.runRealTerminal = function(){\n        term.attach(socket);\n        term._initialized = true;\n      }\n    \n      this.createTerminal = function(){\n    \n        // Clean terminal\n        while (terminalContainer.children.length) {\n          terminalContainer.removeChild(terminalContainer.children[0]);\n        }\n        term = new _xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__({\n          cursorBlink: true,\n          scrollback: 1000,\n          tabStopWidth: 8\n        });\n        this.term = term;\n        \n        window.term = term;  // Expose `term` to window for debugging purposes\n        term.on('resize', function (size) {\n          if (!pid) {\n            return;\n          }\n          var cols = size.cols,\n              rows = size.rows,\n              url = '/terminals/' + pid + '/size?cols=' + cols + '&rows=' + rows;\n    \n          fetch(url, {method: 'POST', credentials: \"same-origin\"});\n        });\n        \n        protocol = (location.protocol === 'https:') ? 'wss://' : 'ws://';\n        \n        // use host from current url\n        var host = location.host;\n    \n        socketURL = protocol + host + location.pathname + 'terminals/';\n        var fetchUrl = location.pathname;\n    \n        term.open(terminalContainer);\n        term.winptyCompatInit();\n        term.fit();\n        // term.focus();\n    \n        var paramFetchUrl = fetchUrl + 'terminals?cols=' + term.cols + '&rows=' + term.rows;\n    \n        fetch(paramFetchUrl, {method: 'POST', credentials: \"same-origin\"}).then(function (res) {\n    \n          res.text().then(function (processId) {\n            pid = processId;\n            socketURL += processId;\n            socket = new WebSocket(socketURL);\n            socket.onopen = _this.runRealTerminal;\n            socket.onclose = function(e){\n              console.log(e);\n            };\n            socket.onerror = function(e){\n              console.log(e);\n            };\n          });\n        });\n\n      }\n\n   }\n\n   window.TermManager = TermManager;\n\n})();\n\n\n\n\n//# sourceURL=webpack:///./main.js?");

/***/ }),

/***/ "./xterm.js/addons/attach/attach.js":
/*!******************************************!*\
  !*** ./xterm.js/addons/attach/attach.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction attach(term, socket, bidirectional, buffered) {\n    bidirectional = (typeof bidirectional == 'undefined') ? true : bidirectional;\n    term.socket = socket;\n    term._flushBuffer = function () {\n        term.write(term._attachSocketBuffer);\n        term._attachSocketBuffer = null;\n    };\n    term._pushToBuffer = function (data) {\n        if (term._attachSocketBuffer) {\n            term._attachSocketBuffer += data;\n        }\n        else {\n            term._attachSocketBuffer = data;\n            setTimeout(term._flushBuffer, 10);\n        }\n    };\n    var myTextDecoder;\n    term._getMessage = function (ev) {\n        var str;\n        if (typeof ev.data === \"object\") {\n            if (ev.data instanceof ArrayBuffer) {\n                if (!myTextDecoder) {\n                    myTextDecoder = new TextDecoder();\n                }\n                str = myTextDecoder.decode(ev.data);\n            }\n            else {\n                throw \"TODO: handle Blob?\";\n            }\n        }\n        if (buffered) {\n            term._pushToBuffer(str || ev.data);\n        }\n        else {\n            term.write(str || ev.data);\n        }\n    };\n    term._sendData = function (data) {\n        if (socket.readyState !== 1) {\n            return;\n        }\n        socket.send(data);\n    };\n    socket.addEventListener('message', term._getMessage);\n    if (bidirectional) {\n        term.on('data', term._sendData);\n    }\n    socket.addEventListener('close', term.detach.bind(term, socket));\n    socket.addEventListener('error', term.detach.bind(term, socket));\n}\nexports.attach = attach;\n;\nfunction detach(term, socket) {\n    term.off('data', term._sendData);\n    socket = (typeof socket == 'undefined') ? term.socket : socket;\n    if (socket) {\n        socket.removeEventListener('message', term._getMessage);\n    }\n    delete term.socket;\n}\nexports.detach = detach;\n;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.attach = function (socket, bidirectional, buffered) {\n        return attach(this, socket, bidirectional, buffered);\n    };\n    terminalConstructor.prototype.detach = function (socket) {\n        return detach(this, socket);\n    };\n}\nexports.apply = apply;\n\n//# sourceMappingURL=attach.js.map\n\n\n//# sourceURL=webpack:///./xterm.js/addons/attach/attach.js?");

/***/ }),

/***/ "./xterm.js/addons/fit/fit.js":
/*!************************************!*\
  !*** ./xterm.js/addons/fit/fit.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction proposeGeometry(term) {\n    if (!term.element.parentElement) {\n        return null;\n    }\n    var parentElementStyle = window.getComputedStyle(term.element.parentElement);\n    var parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    var parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')) - 17);\n    var elementStyle = window.getComputedStyle(term.element);\n    var elementPaddingVer = parseInt(elementStyle.getPropertyValue('padding-top')) + parseInt(elementStyle.getPropertyValue('padding-bottom'));\n    var elementPaddingHor = parseInt(elementStyle.getPropertyValue('padding-right')) + parseInt(elementStyle.getPropertyValue('padding-left'));\n    var availableHeight = parentElementHeight - elementPaddingVer;\n    var availableWidth = parentElementWidth - elementPaddingHor;\n    var geometry = {\n        cols: Math.floor(availableWidth / term.renderer.dimensions.actualCellWidth),\n        rows: Math.floor(availableHeight / term.renderer.dimensions.actualCellHeight)\n    };\n    return geometry;\n}\nexports.proposeGeometry = proposeGeometry;\n;\nfunction fit(term) {\n    var geometry = proposeGeometry(term);\n    if (geometry) {\n        if (term.rows !== geometry.rows || term.cols !== geometry.cols) {\n            term.renderer.clear();\n            term.resize(geometry.cols, geometry.rows);\n        }\n    }\n}\nexports.fit = fit;\n;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.proposeGeometry = function () {\n        return proposeGeometry(this);\n    };\n    terminalConstructor.prototype.fit = function () {\n        return fit(this);\n    };\n}\nexports.apply = apply;\n\n//# sourceMappingURL=fit.js.map\n\n\n//# sourceURL=webpack:///./xterm.js/addons/fit/fit.js?");

/***/ }),

/***/ "./xterm.js/addons/fullscreen/fullscreen.js":
/*!**************************************************!*\
  !*** ./xterm.js/addons/fullscreen/fullscreen.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction toggleFullScreen(term, fullscreen) {\n    var fn;\n    if (typeof fullscreen == 'undefined') {\n        fn = (term.element.classList.contains('fullscreen')) ? 'remove' : 'add';\n    }\n    else if (!fullscreen) {\n        fn = 'remove';\n    }\n    else {\n        fn = 'add';\n    }\n    term.element.classList[fn]('fullscreen');\n}\nexports.toggleFullScreen = toggleFullScreen;\n;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.toggleFullScreen = function (fullscreen) {\n        return toggleFullScreen(this, fullscreen);\n    };\n}\nexports.apply = apply;\n\n//# sourceMappingURL=fullscreen.js.map\n\n\n//# sourceURL=webpack:///./xterm.js/addons/fullscreen/fullscreen.js?");

/***/ }),

/***/ "./xterm.js/addons/search/SearchHelper.js":
/*!************************************************!*\
  !*** ./xterm.js/addons/search/SearchHelper.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SearchHelper = (function () {\n    function SearchHelper(_terminal) {\n        this._terminal = _terminal;\n    }\n    SearchHelper.prototype.findNext = function (term) {\n        if (!term || term.length === 0) {\n            return false;\n        }\n        var result;\n        var startRow = this._terminal.buffer.ydisp;\n        if (this._terminal.selectionManager.selectionEnd) {\n            startRow = this._terminal.selectionManager.selectionEnd[1];\n        }\n        for (var y = startRow + 1; y < this._terminal.buffer.ybase + this._terminal.rows; y++) {\n            result = this._findInLine(term, y);\n            if (result) {\n                break;\n            }\n        }\n        if (!result) {\n            for (var y = 0; y < startRow; y++) {\n                result = this._findInLine(term, y);\n                if (result) {\n                    break;\n                }\n            }\n        }\n        return this._selectResult(result);\n    };\n    SearchHelper.prototype.findPrevious = function (term) {\n        if (!term || term.length === 0) {\n            return false;\n        }\n        var result;\n        var startRow = this._terminal.buffer.ydisp;\n        if (this._terminal.selectionManager.selectionStart) {\n            startRow = this._terminal.selectionManager.selectionStart[1];\n        }\n        for (var y = startRow - 1; y >= 0; y--) {\n            result = this._findInLine(term, y);\n            if (result) {\n                break;\n            }\n        }\n        if (!result) {\n            for (var y = this._terminal.buffer.ybase + this._terminal.rows - 1; y > startRow; y--) {\n                result = this._findInLine(term, y);\n                if (result) {\n                    break;\n                }\n            }\n        }\n        return this._selectResult(result);\n    };\n    SearchHelper.prototype._findInLine = function (term, y) {\n        var lowerStringLine = this._terminal.buffer.translateBufferLineToString(y, true).toLowerCase();\n        var lowerTerm = term.toLowerCase();\n        var searchIndex = lowerStringLine.indexOf(lowerTerm);\n        if (searchIndex >= 0) {\n            return {\n                term: term,\n                col: searchIndex,\n                row: y\n            };\n        }\n    };\n    SearchHelper.prototype._selectResult = function (result) {\n        if (!result) {\n            return false;\n        }\n        this._terminal.selectionManager.setSelection(result.col, result.row, result.term.length);\n        this._terminal.scrollLines(result.row - this._terminal.buffer.ydisp, false);\n        return true;\n    };\n    return SearchHelper;\n}());\nexports.SearchHelper = SearchHelper;\n\n//# sourceMappingURL=SearchHelper.js.map\n\n\n//# sourceURL=webpack:///./xterm.js/addons/search/SearchHelper.js?");

/***/ }),

/***/ "./xterm.js/addons/search/search.js":
/*!******************************************!*\
  !*** ./xterm.js/addons/search/search.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SearchHelper_1 = __webpack_require__(/*! ./SearchHelper */ \"./xterm.js/addons/search/SearchHelper.js\");\nfunction findNext(terminal, term) {\n    if (!terminal._searchHelper) {\n        terminal.searchHelper = new SearchHelper_1.SearchHelper(terminal);\n    }\n    return terminal.searchHelper.findNext(term);\n}\nexports.findNext = findNext;\n;\nfunction findPrevious(terminal, term) {\n    if (!terminal._searchHelper) {\n        terminal.searchHelper = new SearchHelper_1.SearchHelper(terminal);\n    }\n    return terminal.searchHelper.findPrevious(term);\n}\nexports.findPrevious = findPrevious;\n;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.findNext = function (term) {\n        return findNext(this, term);\n    };\n    terminalConstructor.prototype.findPrevious = function (term) {\n        return findPrevious(this, term);\n    };\n}\nexports.apply = apply;\n//# sourceMappingURL=search.js.map\n\n\n//# sourceURL=webpack:///./xterm.js/addons/search/search.js?");

/***/ }),

/***/ "./xterm.js/addons/winptyCompat/winptyCompat.js":
/*!******************************************************!*\
  !*** ./xterm.js/addons/winptyCompat/winptyCompat.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction winptyCompatInit(terminal) {\n    var isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].indexOf(navigator.platform) >= 0;\n    if (!isWindows) {\n        return;\n    }\n    terminal.on('linefeed', function () {\n        var line = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y - 1);\n        var lastChar = line[terminal.cols - 1];\n        if (lastChar[3] !== 32) {\n            var nextLine = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y);\n            nextLine.isWrapped = true;\n        }\n    });\n}\nexports.winptyCompatInit = winptyCompatInit;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.winptyCompatInit = function () {\n        winptyCompatInit(this);\n    };\n}\nexports.apply = apply;\n\n//# sourceMappingURL=winptyCompat.js.map\n\n\n//# sourceURL=webpack:///./xterm.js/addons/winptyCompat/winptyCompat.js?");

/***/ }),

/***/ "./xterm.js/xterm.js":
/*!***************************!*\
  !*** ./xterm.js/xterm.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var require;var require;(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CircularList_1 = require(\"./utils/CircularList\");\nexports.CHAR_DATA_ATTR_INDEX = 0;\nexports.CHAR_DATA_CHAR_INDEX = 1;\nexports.CHAR_DATA_WIDTH_INDEX = 2;\nexports.CHAR_DATA_CODE_INDEX = 3;\nexports.MAX_BUFFER_SIZE = 4294967295;\nvar Buffer = (function () {\n    function Buffer(_terminal, _hasScrollback) {\n        this._terminal = _terminal;\n        this._hasScrollback = _hasScrollback;\n        this.clear();\n    }\n    Object.defineProperty(Buffer.prototype, \"lines\", {\n        get: function () {\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Buffer.prototype, \"hasScrollback\", {\n        get: function () {\n            return this._hasScrollback && this.lines.maxLength > this._terminal.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Buffer.prototype, \"isCursorInViewport\", {\n        get: function () {\n            var absoluteY = this.ybase + this.y;\n            var relativeY = absoluteY - this.ydisp;\n            return (relativeY >= 0 && relativeY < this._terminal.rows);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Buffer.prototype._getCorrectBufferLength = function (rows) {\n        if (!this._hasScrollback) {\n            return rows;\n        }\n        var correctBufferLength = rows + this._terminal.options.scrollback;\n        return correctBufferLength > exports.MAX_BUFFER_SIZE ? exports.MAX_BUFFER_SIZE : correctBufferLength;\n    };\n    Buffer.prototype.fillViewportRows = function () {\n        if (this._lines.length === 0) {\n            var i = this._terminal.rows;\n            while (i--) {\n                this.lines.push(this._terminal.blankLine());\n            }\n        }\n    };\n    Buffer.prototype.clear = function () {\n        this.ydisp = 0;\n        this.ybase = 0;\n        this.y = 0;\n        this.x = 0;\n        this._lines = new CircularList_1.CircularList(this._getCorrectBufferLength(this._terminal.rows));\n        this.scrollTop = 0;\n        this.scrollBottom = this._terminal.rows - 1;\n        this.setupTabStops();\n    };\n    Buffer.prototype.resize = function (newCols, newRows) {\n        var newMaxLength = this._getCorrectBufferLength(newRows);\n        if (newMaxLength > this._lines.maxLength) {\n            this._lines.maxLength = newMaxLength;\n        }\n        if (this._lines.length > 0) {\n            if (this._terminal.cols < newCols) {\n                var ch = [this._terminal.defAttr, ' ', 1, 32];\n                for (var i = 0; i < this._lines.length; i++) {\n                    if (this._lines.get(i) === undefined) {\n                        this._lines.set(i, this._terminal.blankLine(undefined, undefined, newCols));\n                    }\n                    while (this._lines.get(i).length < newCols) {\n                        this._lines.get(i).push(ch);\n                    }\n                }\n            }\n            var addToY = 0;\n            if (this._terminal.rows < newRows) {\n                for (var y = this._terminal.rows; y < newRows; y++) {\n                    if (this._lines.length < newRows + this.ybase) {\n                        if (this.ybase > 0 && this._lines.length <= this.ybase + this.y + addToY + 1) {\n                            this.ybase--;\n                            addToY++;\n                            if (this.ydisp > 0) {\n                                this.ydisp--;\n                            }\n                        }\n                        else {\n                            this._lines.push(this._terminal.blankLine(undefined, undefined, newCols));\n                        }\n                    }\n                }\n            }\n            else {\n                for (var y = this._terminal.rows; y > newRows; y--) {\n                    if (this._lines.length > newRows + this.ybase) {\n                        if (this._lines.length > this.ybase + this.y + 1) {\n                            this._lines.pop();\n                        }\n                        else {\n                            this.ybase++;\n                            this.ydisp++;\n                        }\n                    }\n                }\n            }\n            if (newMaxLength < this._lines.maxLength) {\n                var amountToTrim = this._lines.length - newMaxLength;\n                if (amountToTrim > 0) {\n                    this._lines.trimStart(amountToTrim);\n                    this.ybase = Math.max(this.ybase - amountToTrim, 0);\n                    this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n                }\n                this._lines.maxLength = newMaxLength;\n            }\n            if (this.y >= newRows) {\n                this.y = newRows - 1;\n            }\n            if (addToY) {\n                this.y += addToY;\n            }\n            if (this.x >= newCols) {\n                this.x = newCols - 1;\n            }\n            this.scrollTop = 0;\n        }\n        this.scrollBottom = newRows - 1;\n    };\n    Buffer.prototype.translateBufferLineToString = function (lineIndex, trimRight, startCol, endCol) {\n        if (startCol === void 0) { startCol = 0; }\n        if (endCol === void 0) { endCol = null; }\n        var lineString = '';\n        var line = this.lines.get(lineIndex);\n        if (!line) {\n            return '';\n        }\n        var startIndex = startCol;\n        endCol = endCol || line.length;\n        var endIndex = endCol;\n        for (var i = 0; i < line.length; i++) {\n            var char = line[i];\n            lineString += char[exports.CHAR_DATA_CHAR_INDEX];\n            if (char[exports.CHAR_DATA_WIDTH_INDEX] === 0) {\n                if (startCol >= i) {\n                    startIndex--;\n                }\n                if (endCol >= i) {\n                    endIndex--;\n                }\n            }\n            else {\n                if (char[exports.CHAR_DATA_CHAR_INDEX].length > 1) {\n                    if (startCol > i) {\n                        startIndex += char[exports.CHAR_DATA_CHAR_INDEX].length - 1;\n                    }\n                    if (endCol > i) {\n                        endIndex += char[exports.CHAR_DATA_CHAR_INDEX].length - 1;\n                    }\n                }\n            }\n        }\n        if (trimRight) {\n            var rightWhitespaceIndex = lineString.search(/\\s+$/);\n            if (rightWhitespaceIndex !== -1) {\n                endIndex = Math.min(endIndex, rightWhitespaceIndex);\n            }\n            if (endIndex <= startIndex) {\n                return '';\n            }\n        }\n        return lineString.substring(startIndex, endIndex);\n    };\n    Buffer.prototype.setupTabStops = function (i) {\n        if (i != null) {\n            if (!this.tabs[i]) {\n                i = this.prevStop(i);\n            }\n        }\n        else {\n            this.tabs = {};\n            i = 0;\n        }\n        for (; i < this._terminal.cols; i += this._terminal.options.tabStopWidth) {\n            this.tabs[i] = true;\n        }\n    };\n    Buffer.prototype.prevStop = function (x) {\n        if (x == null) {\n            x = this.x;\n        }\n        while (!this.tabs[--x] && x > 0)\n            ;\n        return x >= this._terminal.cols ? this._terminal.cols - 1 : x < 0 ? 0 : x;\n    };\n    Buffer.prototype.nextStop = function (x) {\n        if (x == null) {\n            x = this.x;\n        }\n        while (!this.tabs[++x] && x < this._terminal.cols)\n            ;\n        return x >= this._terminal.cols ? this._terminal.cols - 1 : x < 0 ? 0 : x;\n    };\n    return Buffer;\n}());\nexports.Buffer = Buffer;\n\n\n\n},{\"./utils/CircularList\":30}],2:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Buffer_1 = require(\"./Buffer\");\nvar EventEmitter_1 = require(\"./EventEmitter\");\nvar BufferSet = (function (_super) {\n    __extends(BufferSet, _super);\n    function BufferSet(_terminal) {\n        var _this = _super.call(this) || this;\n        _this._terminal = _terminal;\n        _this._normal = new Buffer_1.Buffer(_this._terminal, true);\n        _this._normal.fillViewportRows();\n        _this._alt = new Buffer_1.Buffer(_this._terminal, false);\n        _this._activeBuffer = _this._normal;\n        _this.setupTabStops();\n        return _this;\n    }\n    Object.defineProperty(BufferSet.prototype, \"alt\", {\n        get: function () {\n            return this._alt;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BufferSet.prototype, \"active\", {\n        get: function () {\n            return this._activeBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BufferSet.prototype, \"normal\", {\n        get: function () {\n            return this._normal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BufferSet.prototype.activateNormalBuffer = function () {\n        this._alt.clear();\n        this._activeBuffer = this._normal;\n        this.emit('activate', this._normal);\n    };\n    BufferSet.prototype.activateAltBuffer = function () {\n        this._alt.fillViewportRows();\n        this._activeBuffer = this._alt;\n        this.emit('activate', this._alt);\n    };\n    BufferSet.prototype.resize = function (newCols, newRows) {\n        this._normal.resize(newCols, newRows);\n        this._alt.resize(newCols, newRows);\n    };\n    BufferSet.prototype.setupTabStops = function (i) {\n        this._normal.setupTabStops(i);\n        this._alt.setupTabStops(i);\n    };\n    return BufferSet;\n}(EventEmitter_1.EventEmitter));\nexports.BufferSet = BufferSet;\n\n\n\n},{\"./Buffer\":1,\"./EventEmitter\":7}],3:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wcwidth = (function (opts) {\n    var COMBINING_BMP = [\n        [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n        [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n        [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n        [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n        [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n        [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n        [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n        [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n        [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n        [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n        [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n        [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n        [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n        [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n        [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n        [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n        [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n        [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n        [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n        [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n        [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n        [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n        [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n        [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n        [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n        [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n        [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n        [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n        [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n        [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n        [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n        [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n        [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n        [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n        [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n        [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n        [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n        [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n        [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n        [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n        [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n        [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n        [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB],\n    ];\n    var COMBINING_HIGH = [\n        [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n        [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n        [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n        [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n        [0xE0100, 0xE01EF]\n    ];\n    function bisearch(ucs, data) {\n        var min = 0;\n        var max = data.length - 1;\n        var mid;\n        if (ucs < data[0][0] || ucs > data[max][1])\n            return false;\n        while (max >= min) {\n            mid = (min + max) >> 1;\n            if (ucs > data[mid][1])\n                min = mid + 1;\n            else if (ucs < data[mid][0])\n                max = mid - 1;\n            else\n                return true;\n        }\n        return false;\n    }\n    function wcwidthBMP(ucs) {\n        if (ucs === 0)\n            return opts.nul;\n        if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0))\n            return opts.control;\n        if (bisearch(ucs, COMBINING_BMP))\n            return 0;\n        if (isWideBMP(ucs)) {\n            return 2;\n        }\n        return 1;\n    }\n    function isWideBMP(ucs) {\n        return (ucs >= 0x1100 && (ucs <= 0x115f ||\n            ucs === 0x2329 ||\n            ucs === 0x232a ||\n            (ucs >= 0x2e80 && ucs <= 0xa4cf && ucs !== 0x303f) ||\n            (ucs >= 0xac00 && ucs <= 0xd7a3) ||\n            (ucs >= 0xf900 && ucs <= 0xfaff) ||\n            (ucs >= 0xfe10 && ucs <= 0xfe19) ||\n            (ucs >= 0xfe30 && ucs <= 0xfe6f) ||\n            (ucs >= 0xff00 && ucs <= 0xff60) ||\n            (ucs >= 0xffe0 && ucs <= 0xffe6)));\n    }\n    function wcwidthHigh(ucs) {\n        if (bisearch(ucs, COMBINING_HIGH))\n            return 0;\n        if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n            return 2;\n        }\n        return 1;\n    }\n    var control = opts.control | 0;\n    var table = null;\n    function init_table() {\n        var CODEPOINTS = 65536;\n        var BITWIDTH = 2;\n        var ITEMSIZE = 32;\n        var CONTAINERSIZE = CODEPOINTS * BITWIDTH / ITEMSIZE;\n        var CODEPOINTS_PER_ITEM = ITEMSIZE / BITWIDTH;\n        table = (typeof Uint32Array === 'undefined')\n            ? new Array(CONTAINERSIZE)\n            : new Uint32Array(CONTAINERSIZE);\n        for (var i = 0; i < CONTAINERSIZE; ++i) {\n            var num = 0;\n            var pos = CODEPOINTS_PER_ITEM;\n            while (pos--)\n                num = (num << 2) | wcwidthBMP(CODEPOINTS_PER_ITEM * i + pos);\n            table[i] = num;\n        }\n        return table;\n    }\n    return function (num) {\n        num = num | 0;\n        if (num < 32)\n            return control | 0;\n        if (num < 127)\n            return 1;\n        var t = table || init_table();\n        if (num < 65536)\n            return t[num >> 4] >> ((num & 15) << 1) & 3;\n        return wcwidthHigh(num);\n    };\n})({ nul: 0, control: 0 });\n\n\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CHARSETS = {};\nexports.DEFAULT_CHARSET = exports.CHARSETS['B'];\nexports.CHARSETS['0'] = {\n    '`': '\\u25c6',\n    'a': '\\u2592',\n    'b': '\\u0009',\n    'c': '\\u000c',\n    'd': '\\u000d',\n    'e': '\\u000a',\n    'f': '\\u00b0',\n    'g': '\\u00b1',\n    'h': '\\u2424',\n    'i': '\\u000b',\n    'j': '\\u2518',\n    'k': '\\u2510',\n    'l': '\\u250c',\n    'm': '\\u2514',\n    'n': '\\u253c',\n    'o': '\\u23ba',\n    'p': '\\u23bb',\n    'q': '\\u2500',\n    'r': '\\u23bc',\n    's': '\\u23bd',\n    't': '\\u251c',\n    'u': '\\u2524',\n    'v': '\\u2534',\n    'w': '\\u252c',\n    'x': '\\u2502',\n    'y': '\\u2264',\n    'z': '\\u2265',\n    '{': '\\u03c0',\n    '|': '\\u2260',\n    '}': '\\u00a3',\n    '~': '\\u00b7'\n};\nexports.CHARSETS['A'] = {\n    '#': '£'\n};\nexports.CHARSETS['B'] = null;\nexports.CHARSETS['4'] = {\n    '#': '£',\n    '@': '¾',\n    '[': 'ij',\n    '\\\\': '½',\n    ']': '|',\n    '{': '¨',\n    '|': 'f',\n    '}': '¼',\n    '~': '´'\n};\nexports.CHARSETS['C'] =\n    exports.CHARSETS['5'] = {\n        '[': 'Ä',\n        '\\\\': 'Ö',\n        ']': 'Å',\n        '^': 'Ü',\n        '`': 'é',\n        '{': 'ä',\n        '|': 'ö',\n        '}': 'å',\n        '~': 'ü'\n    };\nexports.CHARSETS['R'] = {\n    '#': '£',\n    '@': 'à',\n    '[': '°',\n    '\\\\': 'ç',\n    ']': '§',\n    '{': 'é',\n    '|': 'ù',\n    '}': 'è',\n    '~': '¨'\n};\nexports.CHARSETS['Q'] = {\n    '@': 'à',\n    '[': 'â',\n    '\\\\': 'ç',\n    ']': 'ê',\n    '^': 'î',\n    '`': 'ô',\n    '{': 'é',\n    '|': 'ù',\n    '}': 'è',\n    '~': 'û'\n};\nexports.CHARSETS['K'] = {\n    '@': '§',\n    '[': 'Ä',\n    '\\\\': 'Ö',\n    ']': 'Ü',\n    '{': 'ä',\n    '|': 'ö',\n    '}': 'ü',\n    '~': 'ß'\n};\nexports.CHARSETS['Y'] = {\n    '#': '£',\n    '@': '§',\n    '[': '°',\n    '\\\\': 'ç',\n    ']': 'é',\n    '`': 'ù',\n    '{': 'à',\n    '|': 'ò',\n    '}': 'è',\n    '~': 'ì'\n};\nexports.CHARSETS['E'] =\n    exports.CHARSETS['6'] = {\n        '@': 'Ä',\n        '[': 'Æ',\n        '\\\\': 'Ø',\n        ']': 'Å',\n        '^': 'Ü',\n        '`': 'ä',\n        '{': 'æ',\n        '|': 'ø',\n        '}': 'å',\n        '~': 'ü'\n    };\nexports.CHARSETS['Z'] = {\n    '#': '£',\n    '@': '§',\n    '[': '¡',\n    '\\\\': 'Ñ',\n    ']': '¿',\n    '{': '°',\n    '|': 'ñ',\n    '}': 'ç'\n};\nexports.CHARSETS['H'] =\n    exports.CHARSETS['7'] = {\n        '@': 'É',\n        '[': 'Ä',\n        '\\\\': 'Ö',\n        ']': 'Å',\n        '^': 'Ü',\n        '`': 'é',\n        '{': 'ä',\n        '|': 'ö',\n        '}': 'å',\n        '~': 'ü'\n    };\nexports.CHARSETS['='] = {\n    '#': 'ù',\n    '@': 'à',\n    '[': 'é',\n    '\\\\': 'ç',\n    ']': 'ê',\n    '^': 'î',\n    '_': 'è',\n    '`': 'ô',\n    '{': 'ä',\n    '|': 'ö',\n    '}': 'ü',\n    '~': 'û'\n};\n\n\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CompositionHelper = (function () {\n    function CompositionHelper(textarea, compositionView, terminal) {\n        this.textarea = textarea;\n        this.compositionView = compositionView;\n        this.terminal = terminal;\n        this.isComposing = false;\n        this.isSendingComposition = false;\n        this.compositionPosition = { start: null, end: null };\n    }\n    CompositionHelper.prototype.compositionstart = function () {\n        this.isComposing = true;\n        this.compositionPosition.start = this.textarea.value.length;\n        this.compositionView.textContent = '';\n        this.compositionView.classList.add('active');\n    };\n    CompositionHelper.prototype.compositionupdate = function (ev) {\n        var _this = this;\n        this.compositionView.textContent = ev.data;\n        this.updateCompositionElements();\n        setTimeout(function () {\n            _this.compositionPosition.end = _this.textarea.value.length;\n        }, 0);\n    };\n    CompositionHelper.prototype.compositionend = function () {\n        this.finalizeComposition(true);\n    };\n    CompositionHelper.prototype.keydown = function (ev) {\n        if (this.isComposing || this.isSendingComposition) {\n            if (ev.keyCode === 229) {\n                return false;\n            }\n            else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n                return false;\n            }\n            else {\n                this.finalizeComposition(false);\n            }\n        }\n        if (ev.keyCode === 229) {\n            this.handleAnyTextareaChanges();\n            return false;\n        }\n        return true;\n    };\n    CompositionHelper.prototype.finalizeComposition = function (waitForPropogation) {\n        var _this = this;\n        this.compositionView.classList.remove('active');\n        this.isComposing = false;\n        this.clearTextareaPosition();\n        if (!waitForPropogation) {\n            this.isSendingComposition = false;\n            var input = this.textarea.value.substring(this.compositionPosition.start, this.compositionPosition.end);\n            this.terminal.handler(input);\n        }\n        else {\n            var currentCompositionPosition_1 = {\n                start: this.compositionPosition.start,\n                end: this.compositionPosition.end,\n            };\n            this.isSendingComposition = true;\n            setTimeout(function () {\n                if (_this.isSendingComposition) {\n                    _this.isSendingComposition = false;\n                    var input = void 0;\n                    if (_this.isComposing) {\n                        input = _this.textarea.value.substring(currentCompositionPosition_1.start, currentCompositionPosition_1.end);\n                    }\n                    else {\n                        input = _this.textarea.value.substring(currentCompositionPosition_1.start);\n                    }\n                    _this.terminal.handler(input);\n                }\n            }, 0);\n        }\n    };\n    CompositionHelper.prototype.handleAnyTextareaChanges = function () {\n        var _this = this;\n        var oldValue = this.textarea.value;\n        setTimeout(function () {\n            if (!_this.isComposing) {\n                var newValue = _this.textarea.value;\n                var diff = newValue.replace(oldValue, '');\n                if (diff.length > 0) {\n                    _this.terminal.handler(diff);\n                }\n            }\n        }, 0);\n    };\n    CompositionHelper.prototype.updateCompositionElements = function (dontRecurse) {\n        var _this = this;\n        if (!this.isComposing) {\n            return;\n        }\n        if (this.terminal.buffer.isCursorInViewport) {\n            var cellHeight = Math.ceil(this.terminal.charMeasure.height * this.terminal.options.lineHeight);\n            var cursorTop = this.terminal.buffer.y * cellHeight;\n            var cursorLeft = this.terminal.buffer.x * this.terminal.charMeasure.width;\n            this.compositionView.style.left = cursorLeft + 'px';\n            this.compositionView.style.top = cursorTop + 'px';\n            this.compositionView.style.height = cellHeight + 'px';\n            this.compositionView.style.lineHeight = cellHeight + 'px';\n            var compositionViewBounds = this.compositionView.getBoundingClientRect();\n            this.textarea.style.left = cursorLeft + 'px';\n            this.textarea.style.top = cursorTop + 'px';\n            this.textarea.style.width = compositionViewBounds.width + 'px';\n            this.textarea.style.height = compositionViewBounds.height + 'px';\n            this.textarea.style.lineHeight = compositionViewBounds.height + 'px';\n        }\n        if (!dontRecurse) {\n            setTimeout(function () { return _this.updateCompositionElements(true); }, 0);\n        }\n    };\n    ;\n    CompositionHelper.prototype.clearTextareaPosition = function () {\n        this.textarea.style.left = '';\n        this.textarea.style.top = '';\n    };\n    ;\n    return CompositionHelper;\n}());\nexports.CompositionHelper = CompositionHelper;\n\n\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar C0;\n(function (C0) {\n    C0.NUL = '\\x00';\n    C0.SOH = '\\x01';\n    C0.STX = '\\x02';\n    C0.ETX = '\\x03';\n    C0.EOT = '\\x04';\n    C0.ENQ = '\\x05';\n    C0.ACK = '\\x06';\n    C0.BEL = '\\x07';\n    C0.BS = '\\x08';\n    C0.HT = '\\x09';\n    C0.LF = '\\x0a';\n    C0.VT = '\\x0b';\n    C0.FF = '\\x0c';\n    C0.CR = '\\x0d';\n    C0.SO = '\\x0e';\n    C0.SI = '\\x0f';\n    C0.DLE = '\\x10';\n    C0.DC1 = '\\x11';\n    C0.DC2 = '\\x12';\n    C0.DC3 = '\\x13';\n    C0.DC4 = '\\x14';\n    C0.NAK = '\\x15';\n    C0.SYN = '\\x16';\n    C0.ETB = '\\x17';\n    C0.CAN = '\\x18';\n    C0.EM = '\\x19';\n    C0.SUB = '\\x1a';\n    C0.ESC = '\\x1b';\n    C0.FS = '\\x1c';\n    C0.GS = '\\x1d';\n    C0.RS = '\\x1e';\n    C0.US = '\\x1f';\n    C0.SP = '\\x20';\n    C0.DEL = '\\x7f';\n})(C0 = exports.C0 || (exports.C0 = {}));\n;\n\n\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EventEmitter = (function () {\n    function EventEmitter() {\n        this._events = this._events || {};\n    }\n    EventEmitter.prototype.on = function (type, listener) {\n        this._events[type] = this._events[type] || [];\n        this._events[type].push(listener);\n    };\n    EventEmitter.prototype.off = function (type, listener) {\n        if (!this._events[type]) {\n            return;\n        }\n        var obj = this._events[type];\n        var i = obj.length;\n        while (i--) {\n            if (obj[i] === listener || obj[i].listener === listener) {\n                obj.splice(i, 1);\n                return;\n            }\n        }\n    };\n    EventEmitter.prototype.removeAllListeners = function (type) {\n        if (this._events[type]) {\n            delete this._events[type];\n        }\n    };\n    EventEmitter.prototype.once = function (type, listener) {\n        function on() {\n            var args = Array.prototype.slice.call(arguments);\n            this.off(type, on);\n            listener.apply(this, args);\n        }\n        on.listener = listener;\n        this.on(type, on);\n    };\n    EventEmitter.prototype.emit = function (type) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (!this._events[type]) {\n            return;\n        }\n        var obj = this._events[type];\n        for (var i = 0; i < obj.length; i++) {\n            obj[i].apply(this, args);\n        }\n    };\n    EventEmitter.prototype.listeners = function (type) {\n        return this._events[type] || [];\n    };\n    EventEmitter.prototype.destroy = function () {\n        this._events = {};\n    };\n    return EventEmitter;\n}());\nexports.EventEmitter = EventEmitter;\n\n\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EscapeSequences_1 = require(\"./EscapeSequences\");\nvar Charsets_1 = require(\"./Charsets\");\nvar Buffer_1 = require(\"./Buffer\");\nvar Types_1 = require(\"./renderer/Types\");\nvar CharWidth_1 = require(\"./CharWidth\");\nvar InputHandler = (function () {\n    function InputHandler(_terminal) {\n        this._terminal = _terminal;\n    }\n    InputHandler.prototype.addChar = function (char, code) {\n        if (char >= ' ') {\n            var ch_width = CharWidth_1.wcwidth(code);\n            if (this._terminal.charset && this._terminal.charset[char]) {\n                char = this._terminal.charset[char];\n            }\n            var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n            if (!ch_width && this._terminal.buffer.x) {\n                if (this._terminal.buffer.lines.get(row)[this._terminal.buffer.x - 1]) {\n                    if (!this._terminal.buffer.lines.get(row)[this._terminal.buffer.x - 1][Buffer_1.CHAR_DATA_WIDTH_INDEX]) {\n                        if (this._terminal.buffer.lines.get(row)[this._terminal.buffer.x - 2]) {\n                            this._terminal.buffer.lines.get(row)[this._terminal.buffer.x - 2][Buffer_1.CHAR_DATA_CHAR_INDEX] += char;\n                            this._terminal.buffer.lines.get(row)[this._terminal.buffer.x - 2][3] = char.charCodeAt(0);\n                        }\n                    }\n                    else {\n                        this._terminal.buffer.lines.get(row)[this._terminal.buffer.x - 1][Buffer_1.CHAR_DATA_CHAR_INDEX] += char;\n                        this._terminal.buffer.lines.get(row)[this._terminal.buffer.x - 1][3] = char.charCodeAt(0);\n                    }\n                    this._terminal.updateRange(this._terminal.buffer.y);\n                }\n                return;\n            }\n            if (this._terminal.buffer.x + ch_width - 1 >= this._terminal.cols) {\n                if (this._terminal.wraparoundMode) {\n                    this._terminal.buffer.x = 0;\n                    this._terminal.buffer.y++;\n                    if (this._terminal.buffer.y > this._terminal.buffer.scrollBottom) {\n                        this._terminal.buffer.y--;\n                        this._terminal.scroll(true);\n                    }\n                    else {\n                        this._terminal.buffer.lines.get(this._terminal.buffer.y).isWrapped = true;\n                    }\n                }\n                else {\n                    if (ch_width === 2)\n                        return;\n                }\n            }\n            row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n            if (this._terminal.insertMode) {\n                for (var moves = 0; moves < ch_width; ++moves) {\n                    var removed = this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).pop();\n                    if (removed[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0\n                        && this._terminal.buffer.lines.get(row)[this._terminal.cols - 2]\n                        && this._terminal.buffer.lines.get(row)[this._terminal.cols - 2][Buffer_1.CHAR_DATA_WIDTH_INDEX] === 2) {\n                        this._terminal.buffer.lines.get(row)[this._terminal.cols - 2] = [this._terminal.curAttr, ' ', 1, ' '.charCodeAt(0)];\n                    }\n                    this._terminal.buffer.lines.get(row).splice(this._terminal.buffer.x, 0, [this._terminal.curAttr, ' ', 1, ' '.charCodeAt(0)]);\n                }\n            }\n            this._terminal.buffer.lines.get(row)[this._terminal.buffer.x] = [this._terminal.curAttr, char, ch_width, char.charCodeAt(0)];\n            this._terminal.buffer.x++;\n            this._terminal.updateRange(this._terminal.buffer.y);\n            if (ch_width === 2) {\n                this._terminal.buffer.lines.get(row)[this._terminal.buffer.x] = [this._terminal.curAttr, '', 0, undefined];\n                this._terminal.buffer.x++;\n            }\n        }\n    };\n    InputHandler.prototype.bell = function () {\n        this._terminal.bell();\n    };\n    InputHandler.prototype.lineFeed = function () {\n        if (this._terminal.convertEol) {\n            this._terminal.buffer.x = 0;\n        }\n        this._terminal.buffer.y++;\n        if (this._terminal.buffer.y > this._terminal.buffer.scrollBottom) {\n            this._terminal.buffer.y--;\n            this._terminal.scroll();\n        }\n        if (this._terminal.buffer.x >= this._terminal.cols) {\n            this._terminal.buffer.x--;\n        }\n        this._terminal.emit('linefeed');\n    };\n    InputHandler.prototype.carriageReturn = function () {\n        this._terminal.buffer.x = 0;\n    };\n    InputHandler.prototype.backspace = function () {\n        if (this._terminal.buffer.x > 0) {\n            this._terminal.buffer.x--;\n        }\n    };\n    InputHandler.prototype.tab = function () {\n        this._terminal.buffer.x = this._terminal.buffer.nextStop();\n    };\n    InputHandler.prototype.shiftOut = function () {\n        this._terminal.setgLevel(1);\n    };\n    InputHandler.prototype.shiftIn = function () {\n        this._terminal.setgLevel(0);\n    };\n    InputHandler.prototype.insertChars = function (params) {\n        var param = params[0];\n        if (param < 1)\n            param = 1;\n        var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n        var j = this._terminal.buffer.x;\n        var ch = [this._terminal.eraseAttr(), ' ', 1, 32];\n        while (param-- && j < this._terminal.cols) {\n            this._terminal.buffer.lines.get(row).splice(j++, 0, ch);\n            this._terminal.buffer.lines.get(row).pop();\n        }\n    };\n    InputHandler.prototype.cursorUp = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.y -= param;\n        if (this._terminal.buffer.y < 0) {\n            this._terminal.buffer.y = 0;\n        }\n    };\n    InputHandler.prototype.cursorDown = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.y += param;\n        if (this._terminal.buffer.y >= this._terminal.rows) {\n            this._terminal.buffer.y = this._terminal.rows - 1;\n        }\n        if (this._terminal.buffer.x >= this._terminal.cols) {\n            this._terminal.buffer.x--;\n        }\n    };\n    InputHandler.prototype.cursorForward = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.x += param;\n        if (this._terminal.buffer.x >= this._terminal.cols) {\n            this._terminal.buffer.x = this._terminal.cols - 1;\n        }\n    };\n    InputHandler.prototype.cursorBackward = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        if (this._terminal.buffer.x >= this._terminal.cols) {\n            this._terminal.buffer.x--;\n        }\n        this._terminal.buffer.x -= param;\n        if (this._terminal.buffer.x < 0) {\n            this._terminal.buffer.x = 0;\n        }\n    };\n    InputHandler.prototype.cursorNextLine = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.y += param;\n        if (this._terminal.buffer.y >= this._terminal.rows) {\n            this._terminal.buffer.y = this._terminal.rows - 1;\n        }\n        this._terminal.buffer.x = 0;\n    };\n    InputHandler.prototype.cursorPrecedingLine = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.y -= param;\n        if (this._terminal.buffer.y < 0) {\n            this._terminal.buffer.y = 0;\n        }\n        this._terminal.buffer.x = 0;\n    };\n    InputHandler.prototype.cursorCharAbsolute = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.x = param - 1;\n    };\n    InputHandler.prototype.cursorPosition = function (params) {\n        var col;\n        var row = params[0] - 1;\n        if (params.length >= 2) {\n            col = params[1] - 1;\n        }\n        else {\n            col = 0;\n        }\n        if (row < 0) {\n            row = 0;\n        }\n        else if (row >= this._terminal.rows) {\n            row = this._terminal.rows - 1;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col >= this._terminal.cols) {\n            col = this._terminal.cols - 1;\n        }\n        this._terminal.buffer.x = col;\n        this._terminal.buffer.y = row;\n    };\n    InputHandler.prototype.cursorForwardTab = function (params) {\n        var param = params[0] || 1;\n        while (param--) {\n            this._terminal.buffer.x = this._terminal.buffer.nextStop();\n        }\n    };\n    InputHandler.prototype.eraseInDisplay = function (params) {\n        var j;\n        switch (params[0]) {\n            case 0:\n                this._terminal.eraseRight(this._terminal.buffer.x, this._terminal.buffer.y);\n                j = this._terminal.buffer.y + 1;\n                for (; j < this._terminal.rows; j++) {\n                    this._terminal.eraseLine(j);\n                }\n                break;\n            case 1:\n                this._terminal.eraseLeft(this._terminal.buffer.x, this._terminal.buffer.y);\n                j = this._terminal.buffer.y;\n                while (j--) {\n                    this._terminal.eraseLine(j);\n                }\n                break;\n            case 2:\n                j = this._terminal.rows;\n                while (j--)\n                    this._terminal.eraseLine(j);\n                break;\n            case 3:\n                var scrollBackSize = this._terminal.buffer.lines.length - this._terminal.rows;\n                if (scrollBackSize > 0) {\n                    this._terminal.buffer.lines.trimStart(scrollBackSize);\n                    this._terminal.buffer.ybase = Math.max(this._terminal.buffer.ybase - scrollBackSize, 0);\n                    this._terminal.buffer.ydisp = Math.max(this._terminal.buffer.ydisp - scrollBackSize, 0);\n                    this._terminal.emit('scroll', 0);\n                }\n                break;\n        }\n    };\n    InputHandler.prototype.eraseInLine = function (params) {\n        switch (params[0]) {\n            case 0:\n                this._terminal.eraseRight(this._terminal.buffer.x, this._terminal.buffer.y);\n                break;\n            case 1:\n                this._terminal.eraseLeft(this._terminal.buffer.x, this._terminal.buffer.y);\n                break;\n            case 2:\n                this._terminal.eraseLine(this._terminal.buffer.y);\n                break;\n        }\n    };\n    InputHandler.prototype.insertLines = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n        var scrollBottomRowsOffset = this._terminal.rows - 1 - this._terminal.buffer.scrollBottom;\n        var scrollBottomAbsolute = this._terminal.rows - 1 + this._terminal.buffer.ybase - scrollBottomRowsOffset + 1;\n        while (param--) {\n            this._terminal.buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n            this._terminal.buffer.lines.splice(row, 0, this._terminal.blankLine(true));\n        }\n        this._terminal.updateRange(this._terminal.buffer.y);\n        this._terminal.updateRange(this._terminal.buffer.scrollBottom);\n    };\n    InputHandler.prototype.deleteLines = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n        var j;\n        j = this._terminal.rows - 1 - this._terminal.buffer.scrollBottom;\n        j = this._terminal.rows - 1 + this._terminal.buffer.ybase - j;\n        while (param--) {\n            this._terminal.buffer.lines.splice(row, 1);\n            this._terminal.buffer.lines.splice(j, 0, this._terminal.blankLine(true));\n        }\n        this._terminal.updateRange(this._terminal.buffer.y);\n        this._terminal.updateRange(this._terminal.buffer.scrollBottom);\n    };\n    InputHandler.prototype.deleteChars = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n        var ch = [this._terminal.eraseAttr(), ' ', 1, 32];\n        while (param--) {\n            this._terminal.buffer.lines.get(row).splice(this._terminal.buffer.x, 1);\n            this._terminal.buffer.lines.get(row).push(ch);\n        }\n        this._terminal.updateRange(this._terminal.buffer.y);\n    };\n    InputHandler.prototype.scrollUp = function (params) {\n        var param = params[0] || 1;\n        while (param--) {\n            this._terminal.buffer.lines.splice(this._terminal.buffer.ybase + this._terminal.buffer.scrollTop, 1);\n            this._terminal.buffer.lines.splice(this._terminal.buffer.ybase + this._terminal.buffer.scrollBottom, 0, this._terminal.blankLine());\n        }\n        this._terminal.updateRange(this._terminal.buffer.scrollTop);\n        this._terminal.updateRange(this._terminal.buffer.scrollBottom);\n    };\n    InputHandler.prototype.scrollDown = function (params) {\n        var param = params[0] || 1;\n        while (param--) {\n            this._terminal.buffer.lines.splice(this._terminal.buffer.ybase + this._terminal.buffer.scrollBottom, 1);\n            this._terminal.buffer.lines.splice(this._terminal.buffer.ybase + this._terminal.buffer.scrollTop, 0, this._terminal.blankLine());\n        }\n        this._terminal.updateRange(this._terminal.buffer.scrollTop);\n        this._terminal.updateRange(this._terminal.buffer.scrollBottom);\n    };\n    InputHandler.prototype.eraseChars = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n        var j = this._terminal.buffer.x;\n        var ch = [this._terminal.eraseAttr(), ' ', 1, 32];\n        while (param-- && j < this._terminal.cols) {\n            this._terminal.buffer.lines.get(row)[j++] = ch;\n        }\n    };\n    InputHandler.prototype.cursorBackwardTab = function (params) {\n        var param = params[0] || 1;\n        while (param--) {\n            this._terminal.buffer.x = this._terminal.buffer.prevStop();\n        }\n    };\n    InputHandler.prototype.charPosAbsolute = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.x = param - 1;\n        if (this._terminal.buffer.x >= this._terminal.cols) {\n            this._terminal.buffer.x = this._terminal.cols - 1;\n        }\n    };\n    InputHandler.prototype.HPositionRelative = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.x += param;\n        if (this._terminal.buffer.x >= this._terminal.cols) {\n            this._terminal.buffer.x = this._terminal.cols - 1;\n        }\n    };\n    InputHandler.prototype.repeatPrecedingCharacter = function (params) {\n        var param = params[0] || 1;\n        var line = this._terminal.buffer.lines.get(this._terminal.buffer.ybase + this._terminal.buffer.y);\n        var ch = line[this._terminal.buffer.x - 1] || [this._terminal.defAttr, ' ', 1, 32];\n        while (param--) {\n            line[this._terminal.buffer.x++] = ch;\n        }\n    };\n    InputHandler.prototype.sendDeviceAttributes = function (params) {\n        if (params[0] > 0) {\n            return;\n        }\n        if (!this._terminal.prefix) {\n            if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n                this._terminal.send(EscapeSequences_1.C0.ESC + '[?1;2c');\n            }\n            else if (this._terminal.is('linux')) {\n                this._terminal.send(EscapeSequences_1.C0.ESC + '[?6c');\n            }\n        }\n        else if (this._terminal.prefix === '>') {\n            if (this._terminal.is('xterm')) {\n                this._terminal.send(EscapeSequences_1.C0.ESC + '[>0;276;0c');\n            }\n            else if (this._terminal.is('rxvt-unicode')) {\n                this._terminal.send(EscapeSequences_1.C0.ESC + '[>85;95;0c');\n            }\n            else if (this._terminal.is('linux')) {\n                this._terminal.send(params[0] + 'c');\n            }\n            else if (this._terminal.is('screen')) {\n                this._terminal.send(EscapeSequences_1.C0.ESC + '[>83;40003;0c');\n            }\n        }\n    };\n    InputHandler.prototype.linePosAbsolute = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.y = param - 1;\n        if (this._terminal.buffer.y >= this._terminal.rows) {\n            this._terminal.buffer.y = this._terminal.rows - 1;\n        }\n    };\n    InputHandler.prototype.VPositionRelative = function (params) {\n        var param = params[0];\n        if (param < 1) {\n            param = 1;\n        }\n        this._terminal.buffer.y += param;\n        if (this._terminal.buffer.y >= this._terminal.rows) {\n            this._terminal.buffer.y = this._terminal.rows - 1;\n        }\n        if (this._terminal.buffer.x >= this._terminal.cols) {\n            this._terminal.buffer.x--;\n        }\n    };\n    InputHandler.prototype.HVPosition = function (params) {\n        if (params[0] < 1)\n            params[0] = 1;\n        if (params[1] < 1)\n            params[1] = 1;\n        this._terminal.buffer.y = params[0] - 1;\n        if (this._terminal.buffer.y >= this._terminal.rows) {\n            this._terminal.buffer.y = this._terminal.rows - 1;\n        }\n        this._terminal.buffer.x = params[1] - 1;\n        if (this._terminal.buffer.x >= this._terminal.cols) {\n            this._terminal.buffer.x = this._terminal.cols - 1;\n        }\n    };\n    InputHandler.prototype.tabClear = function (params) {\n        var param = params[0];\n        if (param <= 0) {\n            delete this._terminal.buffer.tabs[this._terminal.buffer.x];\n        }\n        else if (param === 3) {\n            this._terminal.buffer.tabs = {};\n        }\n    };\n    InputHandler.prototype.setMode = function (params) {\n        if (params.length > 1) {\n            for (var i = 0; i < params.length; i++) {\n                this.setMode([params[i]]);\n            }\n            return;\n        }\n        if (!this._terminal.prefix) {\n            switch (params[0]) {\n                case 4:\n                    this._terminal.insertMode = true;\n                    break;\n                case 20:\n                    break;\n            }\n        }\n        else if (this._terminal.prefix === '?') {\n            switch (params[0]) {\n                case 1:\n                    this._terminal.applicationCursor = true;\n                    break;\n                case 2:\n                    this._terminal.setgCharset(0, Charsets_1.DEFAULT_CHARSET);\n                    this._terminal.setgCharset(1, Charsets_1.DEFAULT_CHARSET);\n                    this._terminal.setgCharset(2, Charsets_1.DEFAULT_CHARSET);\n                    this._terminal.setgCharset(3, Charsets_1.DEFAULT_CHARSET);\n                    break;\n                case 3:\n                    this._terminal.savedCols = this._terminal.cols;\n                    this._terminal.resize(132, this._terminal.rows);\n                    break;\n                case 6:\n                    this._terminal.originMode = true;\n                    break;\n                case 7:\n                    this._terminal.wraparoundMode = true;\n                    break;\n                case 12:\n                    break;\n                case 66:\n                    this._terminal.log('Serial port requested application keypad.');\n                    this._terminal.applicationKeypad = true;\n                    this._terminal.viewport.syncScrollArea();\n                    break;\n                case 9:\n                case 1000:\n                case 1002:\n                case 1003:\n                    this._terminal.x10Mouse = params[0] === 9;\n                    this._terminal.vt200Mouse = params[0] === 1000;\n                    this._terminal.normalMouse = params[0] > 1000;\n                    this._terminal.mouseEvents = true;\n                    this._terminal.element.classList.add('enable-mouse-events');\n                    this._terminal.selectionManager.disable();\n                    this._terminal.log('Binding to mouse events.');\n                    break;\n                case 1004:\n                    this._terminal.sendFocus = true;\n                    break;\n                case 1005:\n                    this._terminal.utfMouse = true;\n                    break;\n                case 1006:\n                    this._terminal.sgrMouse = true;\n                    break;\n                case 1015:\n                    this._terminal.urxvtMouse = true;\n                    break;\n                case 25:\n                    this._terminal.cursorHidden = false;\n                    break;\n                case 1049:\n                case 47:\n                case 1047:\n                    this._terminal.buffers.activateAltBuffer();\n                    this._terminal.selectionManager.setBuffer(this._terminal.buffer);\n                    this._terminal.viewport.syncScrollArea();\n                    this._terminal.showCursor();\n                    break;\n                case 2004:\n                    this._terminal.bracketedPasteMode = true;\n                    break;\n            }\n        }\n    };\n    InputHandler.prototype.resetMode = function (params) {\n        if (params.length > 1) {\n            for (var i = 0; i < params.length; i++) {\n                this.resetMode([params[i]]);\n            }\n            return;\n        }\n        if (!this._terminal.prefix) {\n            switch (params[0]) {\n                case 4:\n                    this._terminal.insertMode = false;\n                    break;\n                case 20:\n                    break;\n            }\n        }\n        else if (this._terminal.prefix === '?') {\n            switch (params[0]) {\n                case 1:\n                    this._terminal.applicationCursor = false;\n                    break;\n                case 3:\n                    if (this._terminal.cols === 132 && this._terminal.savedCols) {\n                        this._terminal.resize(this._terminal.savedCols, this._terminal.rows);\n                    }\n                    delete this._terminal.savedCols;\n                    break;\n                case 6:\n                    this._terminal.originMode = false;\n                    break;\n                case 7:\n                    this._terminal.wraparoundMode = false;\n                    break;\n                case 12:\n                    break;\n                case 66:\n                    this._terminal.log('Switching back to normal keypad.');\n                    this._terminal.applicationKeypad = false;\n                    this._terminal.viewport.syncScrollArea();\n                    break;\n                case 9:\n                case 1000:\n                case 1002:\n                case 1003:\n                    this._terminal.x10Mouse = false;\n                    this._terminal.vt200Mouse = false;\n                    this._terminal.normalMouse = false;\n                    this._terminal.mouseEvents = false;\n                    this._terminal.element.classList.remove('enable-mouse-events');\n                    this._terminal.selectionManager.enable();\n                    break;\n                case 1004:\n                    this._terminal.sendFocus = false;\n                    break;\n                case 1005:\n                    this._terminal.utfMouse = false;\n                    break;\n                case 1006:\n                    this._terminal.sgrMouse = false;\n                    break;\n                case 1015:\n                    this._terminal.urxvtMouse = false;\n                    break;\n                case 25:\n                    this._terminal.cursorHidden = true;\n                    break;\n                case 1049:\n                case 47:\n                case 1047:\n                    this._terminal.buffers.activateNormalBuffer();\n                    this._terminal.selectionManager.setBuffer(this._terminal.buffer);\n                    this._terminal.refresh(0, this._terminal.rows - 1);\n                    this._terminal.viewport.syncScrollArea();\n                    this._terminal.showCursor();\n                    break;\n                case 2004:\n                    this._terminal.bracketedPasteMode = false;\n                    break;\n            }\n        }\n    };\n    InputHandler.prototype.charAttributes = function (params) {\n        if (params.length === 1 && params[0] === 0) {\n            this._terminal.curAttr = this._terminal.defAttr;\n            return;\n        }\n        var l = params.length;\n        var flags = this._terminal.curAttr >> 18;\n        var fg = (this._terminal.curAttr >> 9) & 0x1ff;\n        var bg = this._terminal.curAttr & 0x1ff;\n        var p;\n        for (var i = 0; i < l; i++) {\n            p = params[i];\n            if (p >= 30 && p <= 37) {\n                fg = p - 30;\n            }\n            else if (p >= 40 && p <= 47) {\n                bg = p - 40;\n            }\n            else if (p >= 90 && p <= 97) {\n                p += 8;\n                fg = p - 90;\n            }\n            else if (p >= 100 && p <= 107) {\n                p += 8;\n                bg = p - 100;\n            }\n            else if (p === 0) {\n                flags = this._terminal.defAttr >> 18;\n                fg = (this._terminal.defAttr >> 9) & 0x1ff;\n                bg = this._terminal.defAttr & 0x1ff;\n            }\n            else if (p === 1) {\n                flags |= Types_1.FLAGS.BOLD;\n            }\n            else if (p === 4) {\n                flags |= Types_1.FLAGS.UNDERLINE;\n            }\n            else if (p === 5) {\n                flags |= Types_1.FLAGS.BLINK;\n            }\n            else if (p === 7) {\n                flags |= Types_1.FLAGS.INVERSE;\n            }\n            else if (p === 8) {\n                flags |= Types_1.FLAGS.INVISIBLE;\n            }\n            else if (p === 2) {\n                flags |= Types_1.FLAGS.DIM;\n            }\n            else if (p === 22) {\n                flags &= ~Types_1.FLAGS.BOLD;\n                flags &= ~Types_1.FLAGS.DIM;\n            }\n            else if (p === 24) {\n                flags &= ~Types_1.FLAGS.UNDERLINE;\n            }\n            else if (p === 25) {\n                flags &= ~Types_1.FLAGS.BLINK;\n            }\n            else if (p === 27) {\n                flags &= ~Types_1.FLAGS.INVERSE;\n            }\n            else if (p === 28) {\n                flags &= ~Types_1.FLAGS.INVISIBLE;\n            }\n            else if (p === 39) {\n                fg = (this._terminal.defAttr >> 9) & 0x1ff;\n            }\n            else if (p === 49) {\n                bg = this._terminal.defAttr & 0x1ff;\n            }\n            else if (p === 38) {\n                if (params[i + 1] === 2) {\n                    i += 2;\n                    fg = this._terminal.matchColor(params[i] & 0xff, params[i + 1] & 0xff, params[i + 2] & 0xff);\n                    if (fg === -1)\n                        fg = 0x1ff;\n                    i += 2;\n                }\n                else if (params[i + 1] === 5) {\n                    i += 2;\n                    p = params[i] & 0xff;\n                    fg = p;\n                }\n            }\n            else if (p === 48) {\n                if (params[i + 1] === 2) {\n                    i += 2;\n                    bg = this._terminal.matchColor(params[i] & 0xff, params[i + 1] & 0xff, params[i + 2] & 0xff);\n                    if (bg === -1)\n                        bg = 0x1ff;\n                    i += 2;\n                }\n                else if (params[i + 1] === 5) {\n                    i += 2;\n                    p = params[i] & 0xff;\n                    bg = p;\n                }\n            }\n            else if (p === 100) {\n                fg = (this._terminal.defAttr >> 9) & 0x1ff;\n                bg = this._terminal.defAttr & 0x1ff;\n            }\n            else {\n                this._terminal.error('Unknown SGR attribute: %d.', p);\n            }\n        }\n        this._terminal.curAttr = (flags << 18) | (fg << 9) | bg;\n    };\n    InputHandler.prototype.deviceStatus = function (params) {\n        if (!this._terminal.prefix) {\n            switch (params[0]) {\n                case 5:\n                    this._terminal.send(EscapeSequences_1.C0.ESC + '[0n');\n                    break;\n                case 6:\n                    this._terminal.send(EscapeSequences_1.C0.ESC + '['\n                        + (this._terminal.buffer.y + 1)\n                        + ';'\n                        + (this._terminal.buffer.x + 1)\n                        + 'R');\n                    break;\n            }\n        }\n        else if (this._terminal.prefix === '?') {\n            switch (params[0]) {\n                case 6:\n                    this._terminal.send(EscapeSequences_1.C0.ESC + '[?'\n                        + (this._terminal.buffer.y + 1)\n                        + ';'\n                        + (this._terminal.buffer.x + 1)\n                        + 'R');\n                    break;\n                case 15:\n                    break;\n                case 25:\n                    break;\n                case 26:\n                    break;\n                case 53:\n                    break;\n            }\n        }\n    };\n    InputHandler.prototype.softReset = function (params) {\n        this._terminal.cursorHidden = false;\n        this._terminal.insertMode = false;\n        this._terminal.originMode = false;\n        this._terminal.wraparoundMode = true;\n        this._terminal.applicationKeypad = false;\n        this._terminal.viewport.syncScrollArea();\n        this._terminal.applicationCursor = false;\n        this._terminal.buffer.scrollTop = 0;\n        this._terminal.buffer.scrollBottom = this._terminal.rows - 1;\n        this._terminal.curAttr = this._terminal.defAttr;\n        this._terminal.buffer.x = this._terminal.buffer.y = 0;\n        this._terminal.charset = null;\n        this._terminal.glevel = 0;\n        this._terminal.charsets = [null];\n    };\n    InputHandler.prototype.setCursorStyle = function (params) {\n        var param = params[0] < 1 ? 1 : params[0];\n        switch (param) {\n            case 1:\n            case 2:\n                this._terminal.setOption('cursorStyle', 'block');\n                break;\n            case 3:\n            case 4:\n                this._terminal.setOption('cursorStyle', 'underline');\n                break;\n            case 5:\n            case 6:\n                this._terminal.setOption('cursorStyle', 'bar');\n                break;\n        }\n        var isBlinking = param % 2 === 1;\n        this._terminal.setOption('cursorBlink', isBlinking);\n    };\n    InputHandler.prototype.setScrollRegion = function (params) {\n        if (this._terminal.prefix)\n            return;\n        this._terminal.buffer.scrollTop = (params[0] || 1) - 1;\n        this._terminal.buffer.scrollBottom = (params[1] && params[1] <= this._terminal.rows ? params[1] : this._terminal.rows) - 1;\n        this._terminal.buffer.x = 0;\n        this._terminal.buffer.y = 0;\n    };\n    InputHandler.prototype.saveCursor = function (params) {\n        this._terminal.buffer.savedX = this._terminal.buffer.x;\n        this._terminal.buffer.savedY = this._terminal.buffer.y;\n    };\n    InputHandler.prototype.restoreCursor = function (params) {\n        this._terminal.buffer.x = this._terminal.buffer.savedX || 0;\n        this._terminal.buffer.y = this._terminal.buffer.savedY || 0;\n    };\n    return InputHandler;\n}());\nexports.InputHandler = InputHandler;\n\n\n\n},{\"./Buffer\":1,\"./CharWidth\":3,\"./Charsets\":4,\"./EscapeSequences\":6,\"./renderer/Types\":27}],9:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Types_1 = require(\"./Types\");\nvar MouseZoneManager_1 = require(\"./input/MouseZoneManager\");\nvar EventEmitter_1 = require(\"./EventEmitter\");\nvar protocolClause = '(https?:\\\\/\\\\/)';\nvar domainCharacterSet = '[\\\\da-z\\\\.-]+';\nvar negatedDomainCharacterSet = '[^\\\\da-z\\\\.-]+';\nvar domainBodyClause = '(' + domainCharacterSet + ')';\nvar tldClause = '([a-z\\\\.]{2,6})';\nvar ipClause = '((\\\\d{1,3}\\\\.){3}\\\\d{1,3})';\nvar localHostClause = '(localhost)';\nvar portClause = '(:\\\\d{1,5})';\nvar hostClause = '((' + domainBodyClause + '\\\\.' + tldClause + ')|' + ipClause + '|' + localHostClause + ')' + portClause + '?';\nvar pathClause = '(\\\\/[\\\\/\\\\w\\\\.\\\\-%~]*)*';\nvar queryStringHashFragmentCharacterSet = '[0-9\\\\w\\\\[\\\\]\\\\(\\\\)\\\\/\\\\?\\\\!#@$%&\\'*+,:;~\\\\=\\\\.\\\\-]*';\nvar queryStringClause = '(\\\\?' + queryStringHashFragmentCharacterSet + ')?';\nvar hashFragmentClause = '(#' + queryStringHashFragmentCharacterSet + ')?';\nvar negatedPathCharacterSet = '[^\\\\/\\\\w\\\\.\\\\-%]+';\nvar bodyClause = hostClause + pathClause + queryStringClause + hashFragmentClause;\nvar start = '(?:^|' + negatedDomainCharacterSet + ')(';\nvar end = ')($|' + negatedPathCharacterSet + ')';\nvar strictUrlRegex = new RegExp(start + protocolClause + bodyClause + end);\nvar HYPERTEXT_LINK_MATCHER_ID = 0;\nvar Linkifier = (function (_super) {\n    __extends(Linkifier, _super);\n    function Linkifier(_terminal) {\n        var _this = _super.call(this) || this;\n        _this._terminal = _terminal;\n        _this._linkMatchers = [];\n        _this._nextLinkMatcherId = HYPERTEXT_LINK_MATCHER_ID;\n        _this._rowsToLinkify = {\n            start: null,\n            end: null\n        };\n        _this.registerLinkMatcher(strictUrlRegex, null, { matchIndex: 1 });\n        return _this;\n    }\n    Linkifier.prototype.attachToDom = function (mouseZoneManager) {\n        this._mouseZoneManager = mouseZoneManager;\n    };\n    Linkifier.prototype.linkifyRows = function (start, end) {\n        var _this = this;\n        if (!this._mouseZoneManager) {\n            return;\n        }\n        if (!this._rowsToLinkify.start) {\n            this._rowsToLinkify.start = start;\n            this._rowsToLinkify.end = end;\n        }\n        else {\n            this._rowsToLinkify.start = this._rowsToLinkify.start < start ? this._rowsToLinkify.start : start;\n            this._rowsToLinkify.end = this._rowsToLinkify.end > end ? this._rowsToLinkify.end : end;\n        }\n        this._mouseZoneManager.clearAll(start, end);\n        if (this._rowsTimeoutId) {\n            clearTimeout(this._rowsTimeoutId);\n        }\n        this._rowsTimeoutId = setTimeout(function () { return _this._linkifyRows(); }, Linkifier.TIME_BEFORE_LINKIFY);\n    };\n    Linkifier.prototype._linkifyRows = function () {\n        this._rowsTimeoutId = null;\n        for (var i = this._rowsToLinkify.start; i <= this._rowsToLinkify.end; i++) {\n            this._linkifyRow(i);\n        }\n        this._rowsToLinkify.start = null;\n        this._rowsToLinkify.end = null;\n    };\n    Linkifier.prototype.setHypertextLinkHandler = function (handler) {\n        this._linkMatchers[HYPERTEXT_LINK_MATCHER_ID].handler = handler;\n    };\n    Linkifier.prototype.setHypertextValidationCallback = function (callback) {\n        this._linkMatchers[HYPERTEXT_LINK_MATCHER_ID].validationCallback = callback;\n    };\n    Linkifier.prototype.registerLinkMatcher = function (regex, handler, options) {\n        if (options === void 0) { options = {}; }\n        if (this._nextLinkMatcherId !== HYPERTEXT_LINK_MATCHER_ID && !handler) {\n            throw new Error('handler must be defined');\n        }\n        var matcher = {\n            id: this._nextLinkMatcherId++,\n            regex: regex,\n            handler: handler,\n            matchIndex: options.matchIndex,\n            validationCallback: options.validationCallback,\n            hoverTooltipCallback: options.tooltipCallback,\n            hoverLeaveCallback: options.leaveCallback,\n            priority: options.priority || 0\n        };\n        this._addLinkMatcherToList(matcher);\n        return matcher.id;\n    };\n    Linkifier.prototype._addLinkMatcherToList = function (matcher) {\n        if (this._linkMatchers.length === 0) {\n            this._linkMatchers.push(matcher);\n            return;\n        }\n        for (var i = this._linkMatchers.length - 1; i >= 0; i--) {\n            if (matcher.priority <= this._linkMatchers[i].priority) {\n                this._linkMatchers.splice(i + 1, 0, matcher);\n                return;\n            }\n        }\n        this._linkMatchers.splice(0, 0, matcher);\n    };\n    Linkifier.prototype.deregisterLinkMatcher = function (matcherId) {\n        for (var i = 1; i < this._linkMatchers.length; i++) {\n            if (this._linkMatchers[i].id === matcherId) {\n                this._linkMatchers.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    Linkifier.prototype._linkifyRow = function (rowIndex) {\n        var absoluteRowIndex = this._terminal.buffer.ydisp + rowIndex;\n        if (absoluteRowIndex >= this._terminal.buffer.lines.length) {\n            return;\n        }\n        var text = this._terminal.buffer.translateBufferLineToString(absoluteRowIndex, false);\n        for (var i = 0; i < this._linkMatchers.length; i++) {\n            this._doLinkifyRow(rowIndex, text, this._linkMatchers[i]);\n        }\n    };\n    Linkifier.prototype._doLinkifyRow = function (rowIndex, text, matcher, offset) {\n        var _this = this;\n        if (offset === void 0) { offset = 0; }\n        var result = [];\n        var isHttpLinkMatcher = matcher.id === HYPERTEXT_LINK_MATCHER_ID;\n        var match = text.match(matcher.regex);\n        if (!match || match.length === 0) {\n            return;\n        }\n        var uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n        var index = text.indexOf(uri);\n        if (matcher.validationCallback) {\n            matcher.validationCallback(uri, function (isValid) {\n                if (_this._rowsTimeoutId) {\n                    return;\n                }\n                if (isValid) {\n                    _this._addLink(offset + index, rowIndex, uri, matcher);\n                }\n            });\n        }\n        else {\n            this._addLink(offset + index, rowIndex, uri, matcher);\n        }\n        var remainingStartIndex = index + uri.length;\n        var remainingText = text.substr(remainingStartIndex);\n        if (remainingText.length > 0) {\n            this._doLinkifyRow(rowIndex, remainingText, matcher, offset + remainingStartIndex);\n        }\n    };\n    Linkifier.prototype._addLink = function (x, y, uri, matcher) {\n        var _this = this;\n        this._mouseZoneManager.add(new MouseZoneManager_1.MouseZone(x + 1, x + 1 + uri.length, y + 1, function (e) {\n            if (matcher.handler) {\n                return matcher.handler(e, uri);\n            }\n            window.open(uri, '_blank');\n        }, function (e) {\n            _this.emit(Types_1.LinkHoverEventTypes.HOVER, { x: x, y: y, length: uri.length });\n            _this._terminal.element.style.cursor = 'pointer';\n        }, function (e) {\n            _this.emit(Types_1.LinkHoverEventTypes.TOOLTIP, { x: x, y: y, length: uri.length });\n            if (matcher.hoverTooltipCallback) {\n                matcher.hoverTooltipCallback(e, uri);\n            }\n        }, function () {\n            _this.emit(Types_1.LinkHoverEventTypes.LEAVE, { x: x, y: y, length: uri.length });\n            _this._terminal.element.style.cursor = '';\n            if (matcher.hoverLeaveCallback) {\n                matcher.hoverLeaveCallback();\n            }\n        }));\n    };\n    Linkifier.TIME_BEFORE_LINKIFY = 200;\n    return Linkifier;\n}(EventEmitter_1.EventEmitter));\nexports.Linkifier = Linkifier;\n\n\n\n},{\"./EventEmitter\":7,\"./Types\":14,\"./input/MouseZoneManager\":17}],10:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EscapeSequences_1 = require(\"./EscapeSequences\");\nvar Charsets_1 = require(\"./Charsets\");\nvar normalStateHandler = {};\nnormalStateHandler[EscapeSequences_1.C0.BEL] = function (parser, handler) { return handler.bell(); };\nnormalStateHandler[EscapeSequences_1.C0.LF] = function (parser, handler) { return handler.lineFeed(); };\nnormalStateHandler[EscapeSequences_1.C0.VT] = normalStateHandler[EscapeSequences_1.C0.LF];\nnormalStateHandler[EscapeSequences_1.C0.FF] = normalStateHandler[EscapeSequences_1.C0.LF];\nnormalStateHandler[EscapeSequences_1.C0.CR] = function (parser, handler) { return handler.carriageReturn(); };\nnormalStateHandler[EscapeSequences_1.C0.BS] = function (parser, handler) { return handler.backspace(); };\nnormalStateHandler[EscapeSequences_1.C0.HT] = function (parser, handler) { return handler.tab(); };\nnormalStateHandler[EscapeSequences_1.C0.SO] = function (parser, handler) { return handler.shiftOut(); };\nnormalStateHandler[EscapeSequences_1.C0.SI] = function (parser, handler) { return handler.shiftIn(); };\nnormalStateHandler[EscapeSequences_1.C0.ESC] = function (parser, handler) { return parser.setState(ParserState.ESCAPED); };\nvar escapedStateHandler = {};\nescapedStateHandler['['] = function (parser, terminal) {\n    terminal.params = [];\n    terminal.currentParam = 0;\n    parser.setState(ParserState.CSI_PARAM);\n};\nescapedStateHandler[']'] = function (parser, terminal) {\n    terminal.params = [];\n    terminal.currentParam = 0;\n    parser.setState(ParserState.OSC);\n};\nescapedStateHandler['P'] = function (parser, terminal) {\n    terminal.params = [];\n    terminal.currentParam = 0;\n    parser.setState(ParserState.DCS);\n};\nescapedStateHandler['_'] = function (parser, terminal) {\n    parser.setState(ParserState.IGNORE);\n};\nescapedStateHandler['^'] = function (parser, terminal) {\n    parser.setState(ParserState.IGNORE);\n};\nescapedStateHandler['c'] = function (parser, terminal) {\n    terminal.reset();\n};\nescapedStateHandler['E'] = function (parser, terminal) {\n    terminal.buffer.x = 0;\n    terminal.index();\n    parser.setState(ParserState.NORMAL);\n};\nescapedStateHandler['D'] = function (parser, terminal) {\n    terminal.index();\n    parser.setState(ParserState.NORMAL);\n};\nescapedStateHandler['M'] = function (parser, terminal) {\n    terminal.reverseIndex();\n    parser.setState(ParserState.NORMAL);\n};\nescapedStateHandler['%'] = function (parser, terminal) {\n    terminal.setgLevel(0);\n    terminal.setgCharset(0, Charsets_1.DEFAULT_CHARSET);\n    parser.setState(ParserState.NORMAL);\n    parser.skipNextChar();\n};\nescapedStateHandler[EscapeSequences_1.C0.CAN] = function (parser) { return parser.setState(ParserState.NORMAL); };\nvar csiParamStateHandler = {};\ncsiParamStateHandler['?'] = function (parser) { return parser.setPrefix('?'); };\ncsiParamStateHandler['>'] = function (parser) { return parser.setPrefix('>'); };\ncsiParamStateHandler['!'] = function (parser) { return parser.setPrefix('!'); };\ncsiParamStateHandler['0'] = function (parser) { return parser.setParam(parser.getParam() * 10); };\ncsiParamStateHandler['1'] = function (parser) { return parser.setParam(parser.getParam() * 10 + 1); };\ncsiParamStateHandler['2'] = function (parser) { return parser.setParam(parser.getParam() * 10 + 2); };\ncsiParamStateHandler['3'] = function (parser) { return parser.setParam(parser.getParam() * 10 + 3); };\ncsiParamStateHandler['4'] = function (parser) { return parser.setParam(parser.getParam() * 10 + 4); };\ncsiParamStateHandler['5'] = function (parser) { return parser.setParam(parser.getParam() * 10 + 5); };\ncsiParamStateHandler['6'] = function (parser) { return parser.setParam(parser.getParam() * 10 + 6); };\ncsiParamStateHandler['7'] = function (parser) { return parser.setParam(parser.getParam() * 10 + 7); };\ncsiParamStateHandler['8'] = function (parser) { return parser.setParam(parser.getParam() * 10 + 8); };\ncsiParamStateHandler['9'] = function (parser) { return parser.setParam(parser.getParam() * 10 + 9); };\ncsiParamStateHandler['$'] = function (parser) { return parser.setPostfix('$'); };\ncsiParamStateHandler['\"'] = function (parser) { return parser.setPostfix('\"'); };\ncsiParamStateHandler[' '] = function (parser) { return parser.setPostfix(' '); };\ncsiParamStateHandler['\\''] = function (parser) { return parser.setPostfix('\\''); };\ncsiParamStateHandler[';'] = function (parser) { return parser.finalizeParam(); };\ncsiParamStateHandler[EscapeSequences_1.C0.CAN] = function (parser) { return parser.setState(ParserState.NORMAL); };\nvar csiStateHandler = {};\ncsiStateHandler['@'] = function (handler, params, prefix) { return handler.insertChars(params); };\ncsiStateHandler['A'] = function (handler, params, prefix) { return handler.cursorUp(params); };\ncsiStateHandler['B'] = function (handler, params, prefix) { return handler.cursorDown(params); };\ncsiStateHandler['C'] = function (handler, params, prefix) { return handler.cursorForward(params); };\ncsiStateHandler['D'] = function (handler, params, prefix) { return handler.cursorBackward(params); };\ncsiStateHandler['E'] = function (handler, params, prefix) { return handler.cursorNextLine(params); };\ncsiStateHandler['F'] = function (handler, params, prefix) { return handler.cursorPrecedingLine(params); };\ncsiStateHandler['G'] = function (handler, params, prefix) { return handler.cursorCharAbsolute(params); };\ncsiStateHandler['H'] = function (handler, params, prefix) { return handler.cursorPosition(params); };\ncsiStateHandler['I'] = function (handler, params, prefix) { return handler.cursorForwardTab(params); };\ncsiStateHandler['J'] = function (handler, params, prefix) { return handler.eraseInDisplay(params); };\ncsiStateHandler['K'] = function (handler, params, prefix) { return handler.eraseInLine(params); };\ncsiStateHandler['L'] = function (handler, params, prefix) { return handler.insertLines(params); };\ncsiStateHandler['M'] = function (handler, params, prefix) { return handler.deleteLines(params); };\ncsiStateHandler['P'] = function (handler, params, prefix) { return handler.deleteChars(params); };\ncsiStateHandler['S'] = function (handler, params, prefix) { return handler.scrollUp(params); };\ncsiStateHandler['T'] = function (handler, params, prefix) {\n    if (params.length < 2 && !prefix) {\n        handler.scrollDown(params);\n    }\n};\ncsiStateHandler['X'] = function (handler, params, prefix) { return handler.eraseChars(params); };\ncsiStateHandler['Z'] = function (handler, params, prefix) { return handler.cursorBackwardTab(params); };\ncsiStateHandler['`'] = function (handler, params, prefix) { return handler.charPosAbsolute(params); };\ncsiStateHandler['a'] = function (handler, params, prefix) { return handler.HPositionRelative(params); };\ncsiStateHandler['b'] = function (handler, params, prefix) { return handler.repeatPrecedingCharacter(params); };\ncsiStateHandler['c'] = function (handler, params, prefix) { return handler.sendDeviceAttributes(params); };\ncsiStateHandler['d'] = function (handler, params, prefix) { return handler.linePosAbsolute(params); };\ncsiStateHandler['e'] = function (handler, params, prefix) { return handler.VPositionRelative(params); };\ncsiStateHandler['f'] = function (handler, params, prefix) { return handler.HVPosition(params); };\ncsiStateHandler['g'] = function (handler, params, prefix) { return handler.tabClear(params); };\ncsiStateHandler['h'] = function (handler, params, prefix) { return handler.setMode(params); };\ncsiStateHandler['l'] = function (handler, params, prefix) { return handler.resetMode(params); };\ncsiStateHandler['m'] = function (handler, params, prefix) { return handler.charAttributes(params); };\ncsiStateHandler['n'] = function (handler, params, prefix) { return handler.deviceStatus(params); };\ncsiStateHandler['p'] = function (handler, params, prefix) {\n    switch (prefix) {\n        case '!':\n            handler.softReset(params);\n            break;\n    }\n};\ncsiStateHandler['q'] = function (handler, params, prefix, postfix) {\n    if (postfix === ' ') {\n        handler.setCursorStyle(params);\n    }\n};\ncsiStateHandler['r'] = function (handler, params) { return handler.setScrollRegion(params); };\ncsiStateHandler['s'] = function (handler, params) { return handler.saveCursor(params); };\ncsiStateHandler['u'] = function (handler, params) { return handler.restoreCursor(params); };\ncsiStateHandler[EscapeSequences_1.C0.CAN] = function (handler, params, prefix, postfix, parser) { return parser.setState(ParserState.NORMAL); };\nvar ParserState;\n(function (ParserState) {\n    ParserState[ParserState[\"NORMAL\"] = 0] = \"NORMAL\";\n    ParserState[ParserState[\"ESCAPED\"] = 1] = \"ESCAPED\";\n    ParserState[ParserState[\"CSI_PARAM\"] = 2] = \"CSI_PARAM\";\n    ParserState[ParserState[\"CSI\"] = 3] = \"CSI\";\n    ParserState[ParserState[\"OSC\"] = 4] = \"OSC\";\n    ParserState[ParserState[\"CHARSET\"] = 5] = \"CHARSET\";\n    ParserState[ParserState[\"DCS\"] = 6] = \"DCS\";\n    ParserState[ParserState[\"IGNORE\"] = 7] = \"IGNORE\";\n})(ParserState = exports.ParserState || (exports.ParserState = {}));\nvar Parser = (function () {\n    function Parser(_inputHandler, _terminal) {\n        this._inputHandler = _inputHandler;\n        this._terminal = _terminal;\n        this._state = ParserState.NORMAL;\n    }\n    Parser.prototype.parse = function (data) {\n        var l = data.length;\n        var j;\n        var cs;\n        var ch;\n        var code;\n        var low;\n        var cursorStartX = this._terminal.buffer.x;\n        var cursorStartY = this._terminal.buffer.y;\n        if (this._terminal.debug) {\n            this._terminal.log('data: ' + data);\n        }\n        this._position = 0;\n        if (this._terminal.surrogate_high) {\n            data = this._terminal.surrogate_high + data;\n            this._terminal.surrogate_high = '';\n        }\n        for (; this._position < l; this._position++) {\n            ch = data[this._position];\n            code = data.charCodeAt(this._position);\n            if (0xD800 <= code && code <= 0xDBFF) {\n                low = data.charCodeAt(this._position + 1);\n                if (isNaN(low)) {\n                    this._terminal.surrogate_high = ch;\n                    continue;\n                }\n                code = ((code - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n                ch += data.charAt(this._position + 1);\n            }\n            if (0xDC00 <= code && code <= 0xDFFF)\n                continue;\n            switch (this._state) {\n                case ParserState.NORMAL:\n                    if (ch in normalStateHandler) {\n                        normalStateHandler[ch](this, this._inputHandler);\n                    }\n                    else {\n                        this._inputHandler.addChar(ch, code);\n                    }\n                    break;\n                case ParserState.ESCAPED:\n                    if (ch in escapedStateHandler) {\n                        escapedStateHandler[ch](this, this._terminal);\n                        break;\n                    }\n                    switch (ch) {\n                        case '(':\n                        case ')':\n                        case '*':\n                        case '+':\n                        case '-':\n                        case '.':\n                            switch (ch) {\n                                case '(':\n                                    this._terminal.gcharset = 0;\n                                    break;\n                                case ')':\n                                    this._terminal.gcharset = 1;\n                                    break;\n                                case '*':\n                                    this._terminal.gcharset = 2;\n                                    break;\n                                case '+':\n                                    this._terminal.gcharset = 3;\n                                    break;\n                                case '-':\n                                    this._terminal.gcharset = 1;\n                                    break;\n                                case '.':\n                                    this._terminal.gcharset = 2;\n                                    break;\n                            }\n                            this._state = ParserState.CHARSET;\n                            break;\n                        case '/':\n                            this._terminal.gcharset = 3;\n                            this._state = ParserState.CHARSET;\n                            this._position--;\n                            break;\n                        case 'N':\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case 'O':\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case 'n':\n                            this._terminal.setgLevel(2);\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case 'o':\n                            this._terminal.setgLevel(3);\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case '|':\n                            this._terminal.setgLevel(3);\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case '}':\n                            this._terminal.setgLevel(2);\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case '~':\n                            this._terminal.setgLevel(1);\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case '7':\n                            this._inputHandler.saveCursor();\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case '8':\n                            this._inputHandler.restoreCursor();\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case '#':\n                            this._state = ParserState.NORMAL;\n                            this._position++;\n                            break;\n                        case 'H':\n                            this._terminal.tabSet();\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case '=':\n                            this._terminal.log('Serial port requested application keypad.');\n                            this._terminal.applicationKeypad = true;\n                            if (this._terminal.viewport) {\n                                this._terminal.viewport.syncScrollArea();\n                            }\n                            this._state = ParserState.NORMAL;\n                            break;\n                        case '>':\n                            this._terminal.log('Switching back to normal keypad.');\n                            this._terminal.applicationKeypad = false;\n                            if (this._terminal.viewport) {\n                                this._terminal.viewport.syncScrollArea();\n                            }\n                            this._state = ParserState.NORMAL;\n                            break;\n                        default:\n                            this._state = ParserState.NORMAL;\n                            this._terminal.error('Unknown ESC control: %s.', ch);\n                            break;\n                    }\n                    break;\n                case ParserState.CHARSET:\n                    if (ch in Charsets_1.CHARSETS) {\n                        cs = Charsets_1.CHARSETS[ch];\n                        if (ch === '/') {\n                            this.skipNextChar();\n                        }\n                    }\n                    else {\n                        cs = Charsets_1.DEFAULT_CHARSET;\n                    }\n                    this._terminal.setgCharset(this._terminal.gcharset, cs);\n                    this._terminal.gcharset = null;\n                    this._state = ParserState.NORMAL;\n                    break;\n                case ParserState.OSC:\n                    if (ch === EscapeSequences_1.C0.ESC || ch === EscapeSequences_1.C0.BEL) {\n                        if (ch === EscapeSequences_1.C0.ESC)\n                            this._position++;\n                        this._terminal.params.push(this._terminal.currentParam);\n                        switch (this._terminal.params[0]) {\n                            case 0:\n                            case 1:\n                            case 2:\n                                if (this._terminal.params[1]) {\n                                    this._terminal.title = this._terminal.params[1];\n                                    this._terminal.handleTitle(this._terminal.title);\n                                }\n                                break;\n                            case 3:\n                                break;\n                            case 4:\n                            case 5:\n                                break;\n                            case 10:\n                            case 11:\n                            case 12:\n                            case 13:\n                            case 14:\n                            case 15:\n                            case 16:\n                            case 17:\n                            case 18:\n                            case 19:\n                                break;\n                            case 46:\n                                break;\n                            case 50:\n                                break;\n                            case 51:\n                                break;\n                            case 52:\n                                break;\n                            case 104:\n                            case 105:\n                            case 110:\n                            case 111:\n                            case 112:\n                            case 113:\n                            case 114:\n                            case 115:\n                            case 116:\n                            case 117:\n                            case 118:\n                                break;\n                        }\n                        this._terminal.params = [];\n                        this._terminal.currentParam = 0;\n                        this._state = ParserState.NORMAL;\n                    }\n                    else {\n                        if (!this._terminal.params.length) {\n                            if (ch >= '0' && ch <= '9') {\n                                this._terminal.currentParam =\n                                    this._terminal.currentParam * 10 + ch.charCodeAt(0) - 48;\n                            }\n                            else if (ch === ';') {\n                                this._terminal.params.push(this._terminal.currentParam);\n                                this._terminal.currentParam = '';\n                            }\n                        }\n                        else {\n                            this._terminal.currentParam += ch;\n                        }\n                    }\n                    break;\n                case ParserState.CSI_PARAM:\n                    if (ch in csiParamStateHandler) {\n                        csiParamStateHandler[ch](this);\n                        break;\n                    }\n                    this.finalizeParam();\n                    this._state = ParserState.CSI;\n                case ParserState.CSI:\n                    if (ch in csiStateHandler) {\n                        if (this._terminal.debug) {\n                            this._terminal.log(\"CSI \" + (this._terminal.prefix ? this._terminal.prefix : '') + \" \" + (this._terminal.params ? this._terminal.params.join(';') : '') + \" \" + (this._terminal.postfix ? this._terminal.postfix : '') + \" \" + ch);\n                        }\n                        csiStateHandler[ch](this._inputHandler, this._terminal.params, this._terminal.prefix, this._terminal.postfix, this);\n                    }\n                    else {\n                        this._terminal.error('Unknown CSI code: %s.', ch);\n                    }\n                    this._state = ParserState.NORMAL;\n                    this._terminal.prefix = '';\n                    this._terminal.postfix = '';\n                    break;\n                case ParserState.DCS:\n                    if (ch === EscapeSequences_1.C0.ESC || ch === EscapeSequences_1.C0.BEL) {\n                        if (ch === EscapeSequences_1.C0.ESC)\n                            this._position++;\n                        var pt = void 0;\n                        var valid = void 0;\n                        switch (this._terminal.prefix) {\n                            case '':\n                                break;\n                            case '$q':\n                                pt = this._terminal.currentParam;\n                                valid = false;\n                                switch (pt) {\n                                    case '\"q':\n                                        pt = '0\"q';\n                                        break;\n                                    case '\"p':\n                                        pt = '61\"p';\n                                        break;\n                                    case 'r':\n                                        pt = ''\n                                            + (this._terminal.buffer.scrollTop + 1)\n                                            + ';'\n                                            + (this._terminal.buffer.scrollBottom + 1)\n                                            + 'r';\n                                        break;\n                                    case 'm':\n                                        pt = '0m';\n                                        break;\n                                    default:\n                                        this._terminal.error('Unknown DCS Pt: %s.', pt);\n                                        pt = '';\n                                        break;\n                                }\n                                this._terminal.send(EscapeSequences_1.C0.ESC + 'P' + +valid + '$r' + pt + EscapeSequences_1.C0.ESC + '\\\\');\n                                break;\n                            case '+p':\n                                break;\n                            case '+q':\n                                pt = this._terminal.currentParam;\n                                valid = false;\n                                this._terminal.send(EscapeSequences_1.C0.ESC + 'P' + +valid + '+r' + pt + EscapeSequences_1.C0.ESC + '\\\\');\n                                break;\n                            default:\n                                this._terminal.error('Unknown DCS prefix: %s.', this._terminal.prefix);\n                                break;\n                        }\n                        this._terminal.currentParam = 0;\n                        this._terminal.prefix = '';\n                        this._state = ParserState.NORMAL;\n                    }\n                    else if (!this._terminal.currentParam) {\n                        if (!this._terminal.prefix && ch !== '$' && ch !== '+') {\n                            this._terminal.currentParam = ch;\n                        }\n                        else if (this._terminal.prefix.length === 2) {\n                            this._terminal.currentParam = ch;\n                        }\n                        else {\n                            this._terminal.prefix += ch;\n                        }\n                    }\n                    else {\n                        this._terminal.currentParam += ch;\n                    }\n                    break;\n                case ParserState.IGNORE:\n                    if (ch === EscapeSequences_1.C0.ESC || ch === EscapeSequences_1.C0.BEL) {\n                        if (ch === EscapeSequences_1.C0.ESC)\n                            this._position++;\n                        this._state = ParserState.NORMAL;\n                    }\n                    break;\n            }\n        }\n        if (this._terminal.buffer.x !== cursorStartX || this._terminal.buffer.y !== cursorStartY) {\n            this._terminal.emit('cursormove');\n        }\n        return this._state;\n    };\n    Parser.prototype.setState = function (state) {\n        this._state = state;\n    };\n    Parser.prototype.setPrefix = function (prefix) {\n        this._terminal.prefix = prefix;\n    };\n    Parser.prototype.setPostfix = function (postfix) {\n        this._terminal.postfix = postfix;\n    };\n    Parser.prototype.setParam = function (param) {\n        this._terminal.currentParam = param;\n    };\n    Parser.prototype.getParam = function () {\n        return this._terminal.currentParam;\n    };\n    Parser.prototype.finalizeParam = function () {\n        this._terminal.params.push(this._terminal.currentParam);\n        this._terminal.currentParam = 0;\n    };\n    Parser.prototype.skipNextChar = function () {\n        this._position++;\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n\n\n\n},{\"./Charsets\":4,\"./EscapeSequences\":6}],11:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MouseHelper_1 = require(\"./utils/MouseHelper\");\nvar Browser = require(\"./utils/Browser\");\nvar EventEmitter_1 = require(\"./EventEmitter\");\nvar SelectionModel_1 = require(\"./SelectionModel\");\nvar Buffer_1 = require(\"./Buffer\");\nvar DRAG_SCROLL_MAX_THRESHOLD = 50;\nvar DRAG_SCROLL_MAX_SPEED = 15;\nvar DRAG_SCROLL_INTERVAL = 50;\nvar WORD_SEPARATORS = ' ()[]{}\\'\"';\nvar NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nvar ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[SelectionMode[\"NORMAL\"] = 0] = \"NORMAL\";\n    SelectionMode[SelectionMode[\"WORD\"] = 1] = \"WORD\";\n    SelectionMode[SelectionMode[\"LINE\"] = 2] = \"LINE\";\n})(SelectionMode || (SelectionMode = {}));\nvar SelectionManager = (function (_super) {\n    __extends(SelectionManager, _super);\n    function SelectionManager(_terminal, _buffer, _charMeasure) {\n        var _this = _super.call(this) || this;\n        _this._terminal = _terminal;\n        _this._buffer = _buffer;\n        _this._charMeasure = _charMeasure;\n        _this._enabled = true;\n        _this._initListeners();\n        _this.enable();\n        _this._model = new SelectionModel_1.SelectionModel(_terminal);\n        _this._activeSelectionMode = SelectionMode.NORMAL;\n        return _this;\n    }\n    SelectionManager.prototype._initListeners = function () {\n        var _this = this;\n        this._mouseMoveListener = function (event) { return _this._onMouseMove(event); };\n        this._mouseUpListener = function (event) { return _this._onMouseUp(event); };\n        this._buffer.lines.on('trim', function (amount) { return _this._onTrim(amount); });\n    };\n    SelectionManager.prototype.disable = function () {\n        this.clearSelection();\n        this._enabled = false;\n    };\n    SelectionManager.prototype.enable = function () {\n        this._enabled = true;\n    };\n    SelectionManager.prototype.setBuffer = function (buffer) {\n        this._buffer = buffer;\n        this.clearSelection();\n    };\n    Object.defineProperty(SelectionManager.prototype, \"selectionStart\", {\n        get: function () { return this._model.finalSelectionStart; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SelectionManager.prototype, \"selectionEnd\", {\n        get: function () { return this._model.finalSelectionEnd; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SelectionManager.prototype, \"hasSelection\", {\n        get: function () {\n            var start = this._model.finalSelectionStart;\n            var end = this._model.finalSelectionEnd;\n            if (!start || !end) {\n                return false;\n            }\n            return start[0] !== end[0] || start[1] !== end[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SelectionManager.prototype, \"selectionText\", {\n        get: function () {\n            var start = this._model.finalSelectionStart;\n            var end = this._model.finalSelectionEnd;\n            if (!start || !end) {\n                return '';\n            }\n            var startRowEndCol = start[1] === end[1] ? end[0] : null;\n            var result = [];\n            result.push(this._buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n            for (var i = start[1] + 1; i <= end[1] - 1; i++) {\n                var bufferLine = this._buffer.lines.get(i);\n                var lineText = this._buffer.translateBufferLineToString(i, true);\n                if (bufferLine.isWrapped) {\n                    result[result.length - 1] += lineText;\n                }\n                else {\n                    result.push(lineText);\n                }\n            }\n            if (start[1] !== end[1]) {\n                var bufferLine = this._buffer.lines.get(end[1]);\n                var lineText = this._buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n                if (bufferLine.isWrapped) {\n                    result[result.length - 1] += lineText;\n                }\n                else {\n                    result.push(lineText);\n                }\n            }\n            var formattedResult = result.map(function (line) {\n                return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n            }).join(Browser.isMSWindows ? '\\r\\n' : '\\n');\n            return formattedResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SelectionManager.prototype.clearSelection = function () {\n        this._model.clearSelection();\n        this._removeMouseDownListeners();\n        this.refresh();\n    };\n    SelectionManager.prototype.refresh = function (isNewSelection) {\n        var _this = this;\n        if (!this._refreshAnimationFrame) {\n            this._refreshAnimationFrame = window.requestAnimationFrame(function () { return _this._refresh(); });\n        }\n        if (Browser.isLinux && isNewSelection) {\n            var selectionText = this.selectionText;\n            if (selectionText.length) {\n                this.emit('newselection', this.selectionText);\n            }\n        }\n    };\n    SelectionManager.prototype._refresh = function () {\n        this._refreshAnimationFrame = null;\n        this.emit('refresh', { start: this._model.finalSelectionStart, end: this._model.finalSelectionEnd });\n    };\n    SelectionManager.prototype.selectAll = function () {\n        this._model.isSelectAllActive = true;\n        this.refresh();\n        this._terminal.emit('selection');\n    };\n    SelectionManager.prototype._onTrim = function (amount) {\n        var needsRefresh = this._model.onTrim(amount);\n        if (needsRefresh) {\n            this.refresh();\n        }\n    };\n    SelectionManager.prototype._getMouseBufferCoords = function (event) {\n        var coords = this._terminal.mouseHelper.getCoords(event, this._terminal.element, this._charMeasure, this._terminal.options.lineHeight, this._terminal.cols, this._terminal.rows, true);\n        if (!coords) {\n            return null;\n        }\n        coords[0]--;\n        coords[1]--;\n        coords[1] += this._terminal.buffer.ydisp;\n        return coords;\n    };\n    SelectionManager.prototype._getMouseEventScrollAmount = function (event) {\n        var offset = MouseHelper_1.MouseHelper.getCoordsRelativeToElement(event, this._terminal.element)[1];\n        var terminalHeight = this._terminal.rows * Math.ceil(this._charMeasure.height * this._terminal.options.lineHeight);\n        if (offset >= 0 && offset <= terminalHeight) {\n            return 0;\n        }\n        if (offset > terminalHeight) {\n            offset -= terminalHeight;\n        }\n        offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n        offset /= DRAG_SCROLL_MAX_THRESHOLD;\n        return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n    };\n    SelectionManager.prototype.shouldForceSelection = function (event) {\n        return Browser.isMac ? event.altKey : event.shiftKey;\n    };\n    SelectionManager.prototype.onMouseDown = function (event) {\n        if (event.button === 2 && this.hasSelection) {\n            return;\n        }\n        if (event.button !== 0) {\n            return;\n        }\n        if (!this._enabled) {\n            if (!this.shouldForceSelection(event)) {\n                return;\n            }\n            event.stopPropagation();\n        }\n        event.preventDefault();\n        this._dragScrollAmount = 0;\n        if (this._enabled && event.shiftKey) {\n            this._onIncrementalClick(event);\n        }\n        else {\n            if (event.detail === 1) {\n                this._onSingleClick(event);\n            }\n            else if (event.detail === 2) {\n                this._onDoubleClick(event);\n            }\n            else if (event.detail === 3) {\n                this._onTripleClick(event);\n            }\n        }\n        this._addMouseDownListeners();\n        this.refresh(true);\n    };\n    SelectionManager.prototype._addMouseDownListeners = function () {\n        var _this = this;\n        this._terminal.element.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n        this._terminal.element.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n        this._dragScrollIntervalTimer = setInterval(function () { return _this._dragScroll(); }, DRAG_SCROLL_INTERVAL);\n    };\n    SelectionManager.prototype._removeMouseDownListeners = function () {\n        this._terminal.element.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n        this._terminal.element.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n        clearInterval(this._dragScrollIntervalTimer);\n        this._dragScrollIntervalTimer = null;\n    };\n    SelectionManager.prototype._onIncrementalClick = function (event) {\n        if (this._model.selectionStart) {\n            this._model.selectionEnd = this._getMouseBufferCoords(event);\n        }\n    };\n    SelectionManager.prototype._onSingleClick = function (event) {\n        this._model.selectionStartLength = 0;\n        this._model.isSelectAllActive = false;\n        this._activeSelectionMode = SelectionMode.NORMAL;\n        this._model.selectionStart = this._getMouseBufferCoords(event);\n        if (!this._model.selectionStart) {\n            return;\n        }\n        this._model.selectionEnd = null;\n        var line = this._buffer.lines.get(this._model.selectionStart[1]);\n        if (!line) {\n            return;\n        }\n        if (line.length >= this._model.selectionStart[0]) {\n            return;\n        }\n        var char = line[this._model.selectionStart[0]];\n        if (char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n            this._model.selectionStart[0]++;\n        }\n    };\n    SelectionManager.prototype._onDoubleClick = function (event) {\n        var coords = this._getMouseBufferCoords(event);\n        if (coords) {\n            this._activeSelectionMode = SelectionMode.WORD;\n            this._selectWordAt(coords);\n        }\n    };\n    SelectionManager.prototype._onTripleClick = function (event) {\n        var coords = this._getMouseBufferCoords(event);\n        if (coords) {\n            this._activeSelectionMode = SelectionMode.LINE;\n            this._selectLineAt(coords[1]);\n        }\n    };\n    SelectionManager.prototype._onMouseMove = function (event) {\n        event.stopImmediatePropagation();\n        var previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n        this._model.selectionEnd = this._getMouseBufferCoords(event);\n        if (!this._model.selectionEnd) {\n            this.refresh(true);\n            return;\n        }\n        if (this._activeSelectionMode === SelectionMode.LINE) {\n            if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n                this._model.selectionEnd[0] = 0;\n            }\n            else {\n                this._model.selectionEnd[0] = this._terminal.cols;\n            }\n        }\n        else if (this._activeSelectionMode === SelectionMode.WORD) {\n            this._selectToWordAt(this._model.selectionEnd);\n        }\n        this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n        if (this._dragScrollAmount > 0) {\n            this._model.selectionEnd[0] = this._terminal.cols;\n        }\n        else if (this._dragScrollAmount < 0) {\n            this._model.selectionEnd[0] = 0;\n        }\n        if (this._model.selectionEnd[1] < this._buffer.lines.length) {\n            var char = this._buffer.lines.get(this._model.selectionEnd[1])[this._model.selectionEnd[0]];\n            if (char && char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n                this._model.selectionEnd[0]++;\n            }\n        }\n        if (!previousSelectionEnd ||\n            previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n            previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n            this.refresh(true);\n        }\n    };\n    SelectionManager.prototype._dragScroll = function () {\n        if (this._dragScrollAmount) {\n            this._terminal.scrollLines(this._dragScrollAmount, false);\n            if (this._dragScrollAmount > 0) {\n                this._model.selectionEnd = [this._terminal.cols - 1, Math.min(this._terminal.buffer.ydisp + this._terminal.rows, this._terminal.buffer.lines.length - 1)];\n            }\n            else {\n                this._model.selectionEnd = [0, this._terminal.buffer.ydisp];\n            }\n            this.refresh();\n        }\n    };\n    SelectionManager.prototype._onMouseUp = function (event) {\n        this._removeMouseDownListeners();\n        if (this.hasSelection)\n            this._terminal.emit('selection');\n    };\n    SelectionManager.prototype._convertViewportColToCharacterIndex = function (bufferLine, coords) {\n        var charIndex = coords[0];\n        for (var i = 0; coords[0] >= i; i++) {\n            var char = bufferLine[i];\n            if (char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n                charIndex--;\n            }\n            else if (char[Buffer_1.CHAR_DATA_CHAR_INDEX].length > 1 && coords[0] !== i) {\n                charIndex += char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n            }\n        }\n        return charIndex;\n    };\n    SelectionManager.prototype.setSelection = function (col, row, length) {\n        this._model.clearSelection();\n        this._removeMouseDownListeners();\n        this._model.selectionStart = [col, row];\n        this._model.selectionStartLength = length;\n        this.refresh();\n    };\n    SelectionManager.prototype._getWordAt = function (coords) {\n        var bufferLine = this._buffer.lines.get(coords[1]);\n        if (!bufferLine) {\n            return null;\n        }\n        var line = this._buffer.translateBufferLineToString(coords[1], false);\n        var startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n        var endIndex = startIndex;\n        var charOffset = coords[0] - startIndex;\n        var leftWideCharCount = 0;\n        var rightWideCharCount = 0;\n        var leftLongCharOffset = 0;\n        var rightLongCharOffset = 0;\n        if (line.charAt(startIndex) === ' ') {\n            while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n                startIndex--;\n            }\n            while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n                endIndex++;\n            }\n        }\n        else {\n            var startCol = coords[0];\n            var endCol = coords[0];\n            if (bufferLine[startCol][Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n                leftWideCharCount++;\n                startCol--;\n            }\n            if (bufferLine[endCol][Buffer_1.CHAR_DATA_WIDTH_INDEX] === 2) {\n                rightWideCharCount++;\n                endCol++;\n            }\n            if (bufferLine[endCol][Buffer_1.CHAR_DATA_CHAR_INDEX].length > 1) {\n                rightLongCharOffset += bufferLine[endCol][Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                endIndex += bufferLine[endCol][Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n            }\n            while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine[startCol - 1])) {\n                var char = bufferLine[startCol - 1];\n                if (char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n                    leftWideCharCount++;\n                    startCol--;\n                }\n                else if (char[Buffer_1.CHAR_DATA_CHAR_INDEX].length > 1) {\n                    leftLongCharOffset += char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                    startIndex -= char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                }\n                startIndex--;\n                startCol--;\n            }\n            while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine[endCol + 1])) {\n                var char = bufferLine[endCol + 1];\n                if (char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 2) {\n                    rightWideCharCount++;\n                    endCol++;\n                }\n                else if (char[Buffer_1.CHAR_DATA_CHAR_INDEX].length > 1) {\n                    rightLongCharOffset += char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                    endIndex += char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                }\n                endIndex++;\n                endCol++;\n            }\n        }\n        endIndex++;\n        var start = startIndex\n            + charOffset\n            - leftWideCharCount\n            + leftLongCharOffset;\n        var length = Math.min(this._terminal.cols, endIndex\n            - startIndex\n            + leftWideCharCount\n            + rightWideCharCount\n            - leftLongCharOffset\n            - rightLongCharOffset);\n        return { start: start, length: length };\n    };\n    SelectionManager.prototype._selectWordAt = function (coords) {\n        var wordPosition = this._getWordAt(coords);\n        if (wordPosition) {\n            this._model.selectionStart = [wordPosition.start, coords[1]];\n            this._model.selectionStartLength = wordPosition.length;\n        }\n    };\n    SelectionManager.prototype._selectToWordAt = function (coords) {\n        var wordPosition = this._getWordAt(coords);\n        if (wordPosition) {\n            this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : (wordPosition.start + wordPosition.length), coords[1]];\n        }\n    };\n    SelectionManager.prototype._isCharWordSeparator = function (charData) {\n        if (charData[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n            return false;\n        }\n        return WORD_SEPARATORS.indexOf(charData[Buffer_1.CHAR_DATA_CHAR_INDEX]) >= 0;\n    };\n    SelectionManager.prototype._selectLineAt = function (line) {\n        this._model.selectionStart = [0, line];\n        this._model.selectionStartLength = this._terminal.cols;\n    };\n    return SelectionManager;\n}(EventEmitter_1.EventEmitter));\nexports.SelectionManager = SelectionManager;\n\n\n\n},{\"./Buffer\":1,\"./EventEmitter\":7,\"./SelectionModel\":12,\"./utils/Browser\":28,\"./utils/MouseHelper\":32}],12:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SelectionModel = (function () {\n    function SelectionModel(_terminal) {\n        this._terminal = _terminal;\n        this.clearSelection();\n    }\n    SelectionModel.prototype.clearSelection = function () {\n        this.selectionStart = null;\n        this.selectionEnd = null;\n        this.isSelectAllActive = false;\n        this.selectionStartLength = 0;\n    };\n    Object.defineProperty(SelectionModel.prototype, \"finalSelectionStart\", {\n        get: function () {\n            if (this.isSelectAllActive) {\n                return [0, 0];\n            }\n            if (!this.selectionEnd || !this.selectionStart) {\n                return this.selectionStart;\n            }\n            return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SelectionModel.prototype, \"finalSelectionEnd\", {\n        get: function () {\n            if (this.isSelectAllActive) {\n                return [this._terminal.cols, this._terminal.buffer.ybase + this._terminal.rows - 1];\n            }\n            if (!this.selectionStart) {\n                return null;\n            }\n            if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n                return [this.selectionStart[0] + this.selectionStartLength, this.selectionStart[1]];\n            }\n            if (this.selectionStartLength) {\n                if (this.selectionEnd[1] === this.selectionStart[1]) {\n                    return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n                }\n            }\n            return this.selectionEnd;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SelectionModel.prototype.areSelectionValuesReversed = function () {\n        var start = this.selectionStart;\n        var end = this.selectionEnd;\n        if (!start || !end) {\n            return false;\n        }\n        return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n    };\n    SelectionModel.prototype.onTrim = function (amount) {\n        if (this.selectionStart) {\n            this.selectionStart[1] -= amount;\n        }\n        if (this.selectionEnd) {\n            this.selectionEnd[1] -= amount;\n        }\n        if (this.selectionEnd && this.selectionEnd[1] < 0) {\n            this.clearSelection();\n            return true;\n        }\n        if (this.selectionStart && this.selectionStart[1] < 0) {\n            this.selectionStart[1] = 0;\n        }\n        return false;\n    };\n    return SelectionModel;\n}());\nexports.SelectionModel = SelectionModel;\n\n\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BufferSet_1 = require(\"./BufferSet\");\nvar Buffer_1 = require(\"./Buffer\");\nvar CompositionHelper_1 = require(\"./CompositionHelper\");\nvar EventEmitter_1 = require(\"./EventEmitter\");\nvar Viewport_1 = require(\"./Viewport\");\nvar Clipboard_1 = require(\"./handlers/Clipboard\");\nvar EscapeSequences_1 = require(\"./EscapeSequences\");\nvar InputHandler_1 = require(\"./InputHandler\");\nvar Parser_1 = require(\"./Parser\");\nvar Renderer_1 = require(\"./renderer/Renderer\");\nvar Linkifier_1 = require(\"./Linkifier\");\nvar SelectionManager_1 = require(\"./SelectionManager\");\nvar CharMeasure_1 = require(\"./utils/CharMeasure\");\nvar Browser = require(\"./utils/Browser\");\nvar MouseHelper_1 = require(\"./utils/MouseHelper\");\nvar Sounds_1 = require(\"./utils/Sounds\");\nvar ColorManager_1 = require(\"./renderer/ColorManager\");\nvar MouseZoneManager_1 = require(\"./input/MouseZoneManager\");\nvar CharAtlas_1 = require(\"./renderer/CharAtlas\");\nvar document = (typeof window !== 'undefined') ? window.document : null;\nvar WRITE_BUFFER_PAUSE_THRESHOLD = 5;\nvar WRITE_BATCH_SIZE = 300;\nvar DEFAULT_OPTIONS = {\n    cols: 80,\n    rows: 24,\n    convertEol: false,\n    termName: 'xterm',\n    cursorBlink: false,\n    cursorStyle: 'block',\n    bellSound: Sounds_1.BellSound,\n    bellStyle: 'none',\n    enableBold: true,\n    fontFamily: 'courier-new, courier, monospace',\n    fontSize: 15,\n    lineHeight: 1.0,\n    letterSpacing: 0,\n    scrollback: 1000,\n    screenKeys: false,\n    debug: false,\n    cancelEvents: false,\n    disableStdin: false,\n    useFlowControl: false,\n    tabStopWidth: 8,\n    theme: null\n};\nvar Terminal = (function (_super) {\n    __extends(Terminal, _super);\n    function Terminal(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this.browser = Browser;\n        _this.options = options;\n        _this.setup();\n        return _this;\n    }\n    Terminal.prototype.setup = function () {\n        var _this = this;\n        Object.keys(DEFAULT_OPTIONS).forEach(function (key) {\n            if (_this.options[key] == null) {\n                _this.options[key] = DEFAULT_OPTIONS[key];\n            }\n            _this[key] = _this.options[key];\n        });\n        this.parent = document ? document.body : null;\n        this.cols = this.options.cols;\n        this.rows = this.options.rows;\n        if (this.options.handler) {\n            this.on('data', this.options.handler);\n        }\n        this.cursorState = 0;\n        this.cursorHidden = false;\n        this.sendDataQueue = '';\n        this.customKeyEventHandler = null;\n        this.applicationKeypad = false;\n        this.applicationCursor = false;\n        this.originMode = false;\n        this.insertMode = false;\n        this.wraparoundMode = true;\n        this.bracketedPasteMode = false;\n        this.charset = null;\n        this.gcharset = null;\n        this.glevel = 0;\n        this.charsets = [null];\n        this.readable = true;\n        this.writable = true;\n        this.defAttr = (0 << 18) | (257 << 9) | (256 << 0);\n        this.curAttr = (0 << 18) | (257 << 9) | (256 << 0);\n        this.params = [];\n        this.currentParam = 0;\n        this.prefix = '';\n        this.postfix = '';\n        this.writeBuffer = [];\n        this.writeInProgress = false;\n        this.xoffSentToCatchUp = false;\n        this.writeStopped = false;\n        this.surrogate_high = '';\n        this.userScrolling = false;\n        this.inputHandler = new InputHandler_1.InputHandler(this);\n        this.parser = new Parser_1.Parser(this.inputHandler, this);\n        this.renderer = this.renderer || null;\n        this.selectionManager = this.selectionManager || null;\n        this.linkifier = this.linkifier || new Linkifier_1.Linkifier(this);\n        this._mouseZoneManager = this._mouseZoneManager || null;\n        this.buffers = new BufferSet_1.BufferSet(this);\n        this.buffer = this.buffers.active;\n        this.buffers.on('activate', function (buffer) {\n            _this.buffer = buffer;\n        });\n        if (this.selectionManager) {\n            this.selectionManager.setBuffer(this.buffer);\n        }\n    };\n    Terminal.prototype.eraseAttr = function () {\n        return (this.defAttr & ~0x1ff) | (this.curAttr & 0x1ff);\n    };\n    Terminal.prototype.focus = function () {\n        if (this.textarea) {\n            this.textarea.focus();\n        }\n    };\n    Object.defineProperty(Terminal.prototype, \"isFocused\", {\n        get: function () {\n            return document.activeElement === this.textarea;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Terminal.prototype.getOption = function (key) {\n        if (!(key in DEFAULT_OPTIONS)) {\n            throw new Error('No option with key \"' + key + '\"');\n        }\n        if (typeof this.options[key] !== 'undefined') {\n            return this.options[key];\n        }\n        return this[key];\n    };\n    Terminal.prototype.setOption = function (key, value) {\n        if (!(key in DEFAULT_OPTIONS)) {\n            throw new Error('No option with key \"' + key + '\"');\n        }\n        switch (key) {\n            case 'bellStyle':\n                if (!value) {\n                    value = 'none';\n                }\n                break;\n            case 'cursorStyle':\n                if (!value) {\n                    value = 'block';\n                }\n                break;\n            case 'lineHeight':\n                if (value < 1) {\n                    console.warn(key + \" cannot be less than 1, value: \" + value);\n                    return;\n                }\n            case 'tabStopWidth':\n                if (value < 1) {\n                    console.warn(key + \" cannot be less than 1, value: \" + value);\n                    return;\n                }\n                break;\n            case 'theme':\n                if (this.renderer) {\n                    this._setTheme(value);\n                    return;\n                }\n                break;\n            case 'scrollback':\n                value = Math.min(value, Buffer_1.MAX_BUFFER_SIZE);\n                if (value < 0) {\n                    console.warn(key + \" cannot be less than 0, value: \" + value);\n                    return;\n                }\n                if (this.options[key] !== value) {\n                    var newBufferLength = this.rows + value;\n                    if (this.buffer.lines.length > newBufferLength) {\n                        var amountToTrim = this.buffer.lines.length - newBufferLength;\n                        var needsRefresh = (this.buffer.ydisp - amountToTrim < 0);\n                        this.buffer.lines.trimStart(amountToTrim);\n                        this.buffer.ybase = Math.max(this.buffer.ybase - amountToTrim, 0);\n                        this.buffer.ydisp = Math.max(this.buffer.ydisp - amountToTrim, 0);\n                        if (needsRefresh) {\n                            this.refresh(0, this.rows - 1);\n                        }\n                    }\n                }\n                break;\n        }\n        this[key] = value;\n        this.options[key] = value;\n        switch (key) {\n            case 'fontFamily':\n            case 'fontSize':\n                this.renderer.clear();\n                this.charMeasure.measure(this.options);\n                break;\n            case 'enableBold':\n            case 'letterSpacing':\n            case 'lineHeight':\n                this.renderer.clear();\n                this.renderer.onResize(this.cols, this.rows, false);\n                this.refresh(0, this.rows - 1);\n            case 'scrollback':\n                this.buffers.resize(this.cols, this.rows);\n                this.viewport.syncScrollArea();\n                break;\n            case 'tabStopWidth':\n                this.buffers.setupTabStops();\n                break;\n            case 'bellSound':\n            case 'bellStyle':\n                this.syncBellSound();\n                break;\n        }\n        if (this.renderer) {\n            this.renderer.onOptionsChanged();\n        }\n    };\n    Terminal.prototype._onTextAreaFocus = function () {\n        if (this.sendFocus) {\n            this.send(EscapeSequences_1.C0.ESC + '[I');\n        }\n        this.element.classList.add('focus');\n        this.showCursor();\n        this.emit('focus');\n    };\n    ;\n    Terminal.prototype.blur = function () {\n        return this.textarea.blur();\n    };\n    Terminal.prototype._onTextAreaBlur = function () {\n        this.refresh(this.buffer.y, this.buffer.y);\n        if (this.sendFocus) {\n            this.send(EscapeSequences_1.C0.ESC + '[O');\n        }\n        this.element.classList.remove('focus');\n        this.emit('blur');\n    };\n    Terminal.prototype.initGlobal = function () {\n        var _this = this;\n        this.bindKeys();\n        on(this.element, 'copy', function (event) {\n            if (!_this.hasSelection()) {\n                return;\n            }\n            Clipboard_1.copyHandler(event, _this, _this.selectionManager);\n        });\n        var pasteHandlerWrapper = function (event) { return Clipboard_1.pasteHandler(event, _this); };\n        on(this.textarea, 'paste', pasteHandlerWrapper);\n        on(this.element, 'paste', pasteHandlerWrapper);\n        if (Browser.isFirefox) {\n            on(this.element, 'mousedown', function (event) {\n                if (event.button === 2) {\n                    Clipboard_1.rightClickHandler(event, _this.textarea, _this.selectionManager);\n                }\n            });\n        }\n        else {\n            on(this.element, 'contextmenu', function (event) {\n                Clipboard_1.rightClickHandler(event, _this.textarea, _this.selectionManager);\n            });\n        }\n        if (Browser.isLinux) {\n            on(this.element, 'auxclick', function (event) {\n                if (event.button === 1) {\n                    Clipboard_1.moveTextAreaUnderMouseCursor(event, _this.textarea);\n                }\n            });\n        }\n    };\n    Terminal.prototype.bindKeys = function () {\n        var _this = this;\n        var self = this;\n        on(this.element, 'keydown', function (ev) {\n            if (document.activeElement !== this) {\n                return;\n            }\n            self._keyDown(ev);\n        }, true);\n        on(this.element, 'keypress', function (ev) {\n            if (document.activeElement !== this) {\n                return;\n            }\n            self._keyPress(ev);\n        }, true);\n        on(this.element, 'keyup', function (ev) {\n            if (!wasMondifierKeyOnlyEvent(ev)) {\n                _this.focus();\n            }\n        }, true);\n        on(this.textarea, 'keydown', function (ev) {\n            _this._keyDown(ev);\n        }, true);\n        on(this.textarea, 'keypress', function (ev) {\n            _this._keyPress(ev);\n            _this.textarea.value = '';\n        }, true);\n        on(this.textarea, 'compositionstart', function () { return _this.compositionHelper.compositionstart(); });\n        on(this.textarea, 'compositionupdate', function (e) { return _this.compositionHelper.compositionupdate(e); });\n        on(this.textarea, 'compositionend', function () { return _this.compositionHelper.compositionend(); });\n        this.on('refresh', function () { return _this.compositionHelper.updateCompositionElements(); });\n        this.on('refresh', function (data) { return _this.queueLinkification(data.start, data.end); });\n    };\n    Terminal.prototype.open = function (parent) {\n        var _this = this;\n        var i = 0;\n        var div;\n        this.parent = parent || this.parent;\n        if (!this.parent) {\n            throw new Error('Terminal requires a parent element.');\n        }\n        this.context = this.parent.ownerDocument.defaultView;\n        this.document = this.parent.ownerDocument;\n        this.body = this.document.body;\n        CharAtlas_1.initialize(this.document);\n        this.element = this.document.createElement('div');\n        this.element.classList.add('terminal');\n        this.element.classList.add('xterm');\n        this.element.setAttribute('tabindex', '0');\n        this.parent.appendChild(this.element);\n        var fragment = document.createDocumentFragment();\n        this.viewportElement = document.createElement('div');\n        this.viewportElement.classList.add('xterm-viewport');\n        fragment.appendChild(this.viewportElement);\n        this.viewportScrollArea = document.createElement('div');\n        this.viewportScrollArea.classList.add('xterm-scroll-area');\n        this.viewportElement.appendChild(this.viewportScrollArea);\n        this._mouseZoneManager = new MouseZoneManager_1.MouseZoneManager(this);\n        this.on('scroll', function () { return _this._mouseZoneManager.clearAll(); });\n        this.linkifier.attachToDom(this._mouseZoneManager);\n        this.helperContainer = document.createElement('div');\n        this.helperContainer.classList.add('xterm-helpers');\n        fragment.appendChild(this.helperContainer);\n        this.textarea = document.createElement('textarea');\n        this.textarea.classList.add('xterm-helper-textarea');\n        this.textarea.setAttribute('autocorrect', 'off');\n        this.textarea.setAttribute('autocapitalize', 'off');\n        this.textarea.setAttribute('spellcheck', 'false');\n        this.textarea.tabIndex = 0;\n        this.textarea.addEventListener('focus', function () { return _this._onTextAreaFocus(); });\n        this.textarea.addEventListener('blur', function () { return _this._onTextAreaBlur(); });\n        this.helperContainer.appendChild(this.textarea);\n        this.compositionView = document.createElement('div');\n        this.compositionView.classList.add('composition-view');\n        this.compositionHelper = new CompositionHelper_1.CompositionHelper(this.textarea, this.compositionView, this);\n        this.helperContainer.appendChild(this.compositionView);\n        this.charSizeStyleElement = document.createElement('style');\n        this.helperContainer.appendChild(this.charSizeStyleElement);\n        this.charMeasure = new CharMeasure_1.CharMeasure(document, this.helperContainer);\n        this.syncBellSound();\n        this.element.appendChild(fragment);\n        this.renderer = new Renderer_1.Renderer(this, this.options.theme);\n        this.options.theme = null;\n        this.viewport = new Viewport_1.Viewport(this, this.viewportElement, this.viewportScrollArea, this.charMeasure);\n        this.viewport.onThemeChanged(this.renderer.colorManager.colors);\n        this.on('cursormove', function () { return _this.renderer.onCursorMove(); });\n        this.on('resize', function () { return _this.renderer.onResize(_this.cols, _this.rows, false); });\n        this.on('blur', function () { return _this.renderer.onBlur(); });\n        this.on('focus', function () { return _this.renderer.onFocus(); });\n        this.charMeasure.on('charsizechanged', function () { return _this.renderer.onResize(_this.cols, _this.rows, true); });\n        this.renderer.on('resize', function (dimensions) { return _this.viewport.syncScrollArea(); });\n        this.selectionManager = new SelectionManager_1.SelectionManager(this, this.buffer, this.charMeasure);\n        this.element.addEventListener('mousedown', function (e) { return _this.selectionManager.onMouseDown(e); });\n        this.selectionManager.on('refresh', function (data) { return _this.renderer.onSelectionChanged(data.start, data.end); });\n        this.selectionManager.on('newselection', function (text) {\n            _this.textarea.value = text;\n            _this.textarea.focus();\n            _this.textarea.select();\n        });\n        this.on('scroll', function () {\n            _this.viewport.syncScrollArea();\n            _this.selectionManager.refresh();\n        });\n        this.viewportElement.addEventListener('scroll', function () { return _this.selectionManager.refresh(); });\n        this.mouseHelper = new MouseHelper_1.MouseHelper(this.renderer);\n        this.charMeasure.measure(this.options);\n        this.refresh(0, this.rows - 1);\n        this.initGlobal();\n        this.bindMouse();\n    };\n    Terminal.prototype._setTheme = function (theme) {\n        var colors = this.renderer.setTheme(theme);\n        if (this.viewport) {\n            this.viewport.onThemeChanged(colors);\n        }\n    };\n    Terminal.applyAddon = function (addon) {\n        addon.apply(Terminal);\n    };\n    Terminal.prototype.bindMouse = function () {\n        var _this = this;\n        var el = this.element;\n        var self = this;\n        var pressed = 32;\n        function sendButton(ev) {\n            var button;\n            var pos;\n            button = getButton(ev);\n            pos = self.mouseHelper.getRawByteCoords(ev, self.element, self.charMeasure, self.options.lineHeight, self.cols, self.rows);\n            if (!pos)\n                return;\n            sendEvent(button, pos);\n            switch (ev.overrideType || ev.type) {\n                case 'mousedown':\n                    pressed = button;\n                    break;\n                case 'mouseup':\n                    pressed = 32;\n                    break;\n                case 'wheel':\n                    break;\n            }\n        }\n        function sendMove(ev) {\n            var button = pressed;\n            var pos = self.mouseHelper.getRawByteCoords(ev, self.element, self.charMeasure, self.options.lineHeight, self.cols, self.rows);\n            if (!pos)\n                return;\n            button += 32;\n            sendEvent(button, pos);\n        }\n        function encode(data, ch) {\n            if (!self.utfMouse) {\n                if (ch === 255) {\n                    data.push(0);\n                    return;\n                }\n                if (ch > 127)\n                    ch = 127;\n                data.push(ch);\n            }\n            else {\n                if (ch === 2047) {\n                    data.push(0);\n                    return;\n                }\n                if (ch < 127) {\n                    data.push(ch);\n                }\n                else {\n                    if (ch > 2047)\n                        ch = 2047;\n                    data.push(0xC0 | (ch >> 6));\n                    data.push(0x80 | (ch & 0x3F));\n                }\n            }\n        }\n        function sendEvent(button, pos) {\n            if (self.vt300Mouse) {\n                button &= 3;\n                pos.x -= 32;\n                pos.y -= 32;\n                var data_1 = EscapeSequences_1.C0.ESC + '[24';\n                if (button === 0)\n                    data_1 += '1';\n                else if (button === 1)\n                    data_1 += '3';\n                else if (button === 2)\n                    data_1 += '5';\n                else if (button === 3)\n                    return;\n                else\n                    data_1 += '0';\n                data_1 += '~[' + pos.x + ',' + pos.y + ']\\r';\n                self.send(data_1);\n                return;\n            }\n            if (self.decLocator) {\n                button &= 3;\n                pos.x -= 32;\n                pos.y -= 32;\n                if (button === 0)\n                    button = 2;\n                else if (button === 1)\n                    button = 4;\n                else if (button === 2)\n                    button = 6;\n                else if (button === 3)\n                    button = 3;\n                self.send(EscapeSequences_1.C0.ESC + '['\n                    + button\n                    + ';'\n                    + (button === 3 ? 4 : 0)\n                    + ';'\n                    + pos.y\n                    + ';'\n                    + pos.x\n                    + ';'\n                    + pos.page || 0\n                    + '&w');\n                return;\n            }\n            if (self.urxvtMouse) {\n                pos.x -= 32;\n                pos.y -= 32;\n                pos.x++;\n                pos.y++;\n                self.send(EscapeSequences_1.C0.ESC + '[' + button + ';' + pos.x + ';' + pos.y + 'M');\n                return;\n            }\n            if (self.sgrMouse) {\n                pos.x -= 32;\n                pos.y -= 32;\n                self.send(EscapeSequences_1.C0.ESC + '[<'\n                    + (((button & 3) === 3 ? button & ~3 : button) - 32)\n                    + ';'\n                    + pos.x\n                    + ';'\n                    + pos.y\n                    + ((button & 3) === 3 ? 'm' : 'M'));\n                return;\n            }\n            var data = [];\n            encode(data, button);\n            encode(data, pos.x);\n            encode(data, pos.y);\n            self.send(EscapeSequences_1.C0.ESC + '[M' + String.fromCharCode.apply(String, data));\n        }\n        function getButton(ev) {\n            var button;\n            var shift;\n            var meta;\n            var ctrl;\n            var mod;\n            switch (ev.overrideType || ev.type) {\n                case 'mousedown':\n                    button = ev.button != null\n                        ? +ev.button\n                        : ev.which != null\n                            ? ev.which - 1\n                            : null;\n                    if (Browser.isMSIE) {\n                        button = button === 1 ? 0 : button === 4 ? 1 : button;\n                    }\n                    break;\n                case 'mouseup':\n                    button = 3;\n                    break;\n                case 'DOMMouseScroll':\n                    button = ev.detail < 0\n                        ? 64\n                        : 65;\n                    break;\n                case 'wheel':\n                    button = ev.wheelDeltaY > 0\n                        ? 64\n                        : 65;\n                    break;\n            }\n            shift = ev.shiftKey ? 4 : 0;\n            meta = ev.metaKey ? 8 : 0;\n            ctrl = ev.ctrlKey ? 16 : 0;\n            mod = shift | meta | ctrl;\n            if (self.vt200Mouse) {\n                mod &= ctrl;\n            }\n            else if (!self.normalMouse) {\n                mod = 0;\n            }\n            button = (32 + (mod << 2)) + button;\n            return button;\n        }\n        on(el, 'mousedown', function (ev) {\n            ev.preventDefault();\n            _this.focus();\n            if (!_this.mouseEvents || _this.selectionManager.shouldForceSelection(ev)) {\n                return;\n            }\n            sendButton(ev);\n            if (_this.vt200Mouse) {\n                ev.overrideType = 'mouseup';\n                sendButton(ev);\n                return _this.cancel(ev);\n            }\n            if (_this.normalMouse)\n                on(_this.document, 'mousemove', sendMove);\n            if (!_this.x10Mouse) {\n                var handler_1 = function (ev) {\n                    sendButton(ev);\n                    if (_this.normalMouse)\n                        off(_this.document, 'mousemove', sendMove);\n                    off(_this.document, 'mouseup', handler_1);\n                    return _this.cancel(ev);\n                };\n                on(_this.document, 'mouseup', handler_1);\n            }\n            return _this.cancel(ev);\n        });\n        on(el, 'wheel', function (ev) {\n            if (!_this.mouseEvents)\n                return;\n            if (_this.x10Mouse || _this.vt300Mouse || _this.decLocator)\n                return;\n            sendButton(ev);\n            ev.preventDefault();\n        });\n        on(el, 'wheel', function (ev) {\n            if (_this.mouseEvents)\n                return;\n            _this.viewport.onWheel(ev);\n            return _this.cancel(ev);\n        });\n        on(el, 'touchstart', function (ev) {\n            if (_this.mouseEvents)\n                return;\n            _this.viewport.onTouchStart(ev);\n            return _this.cancel(ev);\n        });\n        on(el, 'touchmove', function (ev) {\n            if (_this.mouseEvents)\n                return;\n            _this.viewport.onTouchMove(ev);\n            return _this.cancel(ev);\n        });\n    };\n    Terminal.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.readable = false;\n        this.writable = false;\n        this.handler = function () { };\n        this.write = function () { };\n        if (this.element && this.element.parentNode) {\n            this.element.parentNode.removeChild(this.element);\n        }\n    };\n    Terminal.prototype.refresh = function (start, end) {\n        if (this.renderer) {\n            this.renderer.queueRefresh(start, end);\n        }\n    };\n    Terminal.prototype.queueLinkification = function (start, end) {\n        if (this.linkifier) {\n            this.linkifier.linkifyRows(start, end);\n        }\n    };\n    Terminal.prototype.showCursor = function () {\n        if (!this.cursorState) {\n            this.cursorState = 1;\n            this.refresh(this.buffer.y, this.buffer.y);\n        }\n    };\n    Terminal.prototype.scroll = function (isWrapped) {\n        var newLine = this.blankLine(undefined, isWrapped);\n        var topRow = this.buffer.ybase + this.buffer.scrollTop;\n        var bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n        if (this.buffer.scrollTop === 0) {\n            var willBufferBeTrimmed = this.buffer.lines.length === this.buffer.lines.maxLength;\n            if (bottomRow === this.buffer.lines.length - 1) {\n                this.buffer.lines.push(newLine);\n            }\n            else {\n                this.buffer.lines.splice(bottomRow + 1, 0, newLine);\n            }\n            if (!willBufferBeTrimmed) {\n                this.buffer.ybase++;\n                if (!this.userScrolling) {\n                    this.buffer.ydisp++;\n                }\n            }\n            else {\n                if (this.userScrolling) {\n                    this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n                }\n            }\n        }\n        else {\n            var scrollRegionHeight = bottomRow - topRow + 1;\n            this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n            this.buffer.lines.set(bottomRow, newLine);\n        }\n        if (!this.userScrolling) {\n            this.buffer.ydisp = this.buffer.ybase;\n        }\n        this.updateRange(this.buffer.scrollTop);\n        this.updateRange(this.buffer.scrollBottom);\n        this.emit('scroll', this.buffer.ydisp);\n    };\n    Terminal.prototype.scrollLines = function (disp, suppressScrollEvent) {\n        if (disp < 0) {\n            if (this.buffer.ydisp === 0) {\n                return;\n            }\n            this.userScrolling = true;\n        }\n        else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n            this.userScrolling = false;\n        }\n        var oldYdisp = this.buffer.ydisp;\n        this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n        if (oldYdisp === this.buffer.ydisp) {\n            return;\n        }\n        if (!suppressScrollEvent) {\n            this.emit('scroll', this.buffer.ydisp);\n        }\n        this.refresh(0, this.rows - 1);\n    };\n    Terminal.prototype.scrollPages = function (pageCount) {\n        this.scrollLines(pageCount * (this.rows - 1));\n    };\n    Terminal.prototype.scrollToTop = function () {\n        this.scrollLines(-this.buffer.ydisp);\n    };\n    Terminal.prototype.scrollToBottom = function () {\n        this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n    };\n    Terminal.prototype.write = function (data) {\n        var _this = this;\n        this.writeBuffer.push(data);\n        if (this.options.useFlowControl && !this.xoffSentToCatchUp && this.writeBuffer.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n            this.send(EscapeSequences_1.C0.DC3);\n            this.xoffSentToCatchUp = true;\n        }\n        if (!this.writeInProgress && this.writeBuffer.length > 0) {\n            this.writeInProgress = true;\n            setTimeout(function () {\n                _this.innerWrite();\n            });\n        }\n    };\n    Terminal.prototype.innerWrite = function () {\n        var _this = this;\n        var writeBatch = this.writeBuffer.splice(0, WRITE_BATCH_SIZE);\n        while (writeBatch.length > 0) {\n            var data = writeBatch.shift();\n            if (this.xoffSentToCatchUp && writeBatch.length === 0 && this.writeBuffer.length === 0) {\n                this.send(EscapeSequences_1.C0.DC1);\n                this.xoffSentToCatchUp = false;\n            }\n            this.refreshStart = this.buffer.y;\n            this.refreshEnd = this.buffer.y;\n            var state = this.parser.parse(data);\n            this.parser.setState(state);\n            this.updateRange(this.buffer.y);\n            this.refresh(this.refreshStart, this.refreshEnd);\n        }\n        if (this.writeBuffer.length > 0) {\n            setTimeout(function () { return _this.innerWrite(); }, 0);\n        }\n        else {\n            this.writeInProgress = false;\n        }\n    };\n    Terminal.prototype.writeln = function (data) {\n        this.write(data + '\\r\\n');\n    };\n    Terminal.prototype.attachCustomKeyEventHandler = function (customKeyEventHandler) {\n        this.customKeyEventHandler = customKeyEventHandler;\n    };\n    Terminal.prototype.setHypertextLinkHandler = function (handler) {\n        if (!this.linkifier) {\n            throw new Error('Cannot attach a hypertext link handler before Terminal.open is called');\n        }\n        this.linkifier.setHypertextLinkHandler(handler);\n        this.refresh(0, this.rows - 1);\n    };\n    Terminal.prototype.setHypertextValidationCallback = function (callback) {\n        if (!this.linkifier) {\n            throw new Error('Cannot attach a hypertext validation callback before Terminal.open is called');\n        }\n        this.linkifier.setHypertextValidationCallback(callback);\n        this.refresh(0, this.rows - 1);\n    };\n    Terminal.prototype.registerLinkMatcher = function (regex, handler, options) {\n        if (this.linkifier) {\n            var matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n            this.refresh(0, this.rows - 1);\n            return matcherId;\n        }\n        return 0;\n    };\n    Terminal.prototype.deregisterLinkMatcher = function (matcherId) {\n        if (this.linkifier) {\n            if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n                this.refresh(0, this.rows - 1);\n            }\n        }\n    };\n    Terminal.prototype.hasSelection = function () {\n        return this.selectionManager ? this.selectionManager.hasSelection : false;\n    };\n    Terminal.prototype.getSelection = function () {\n        return this.selectionManager ? this.selectionManager.selectionText : '';\n    };\n    Terminal.prototype.clearSelection = function () {\n        if (this.selectionManager) {\n            this.selectionManager.clearSelection();\n        }\n    };\n    Terminal.prototype.selectAll = function () {\n        if (this.selectionManager) {\n            this.selectionManager.selectAll();\n        }\n    };\n    Terminal.prototype._keyDown = function (ev) {\n        if (this.customKeyEventHandler && this.customKeyEventHandler(ev) === false) {\n            return false;\n        }\n        if (!this.compositionHelper.keydown(ev)) {\n            if (this.buffer.ybase !== this.buffer.ydisp) {\n                this.scrollToBottom();\n            }\n            return false;\n        }\n        var result = this._evaluateKeyEscapeSequence(ev);\n        if (result.key === EscapeSequences_1.C0.DC3) {\n            this.writeStopped = true;\n        }\n        else if (result.key === EscapeSequences_1.C0.DC1) {\n            this.writeStopped = false;\n        }\n        if (result.scrollLines) {\n            this.scrollLines(result.scrollLines);\n            return this.cancel(ev, true);\n        }\n        if (isThirdLevelShift(this.browser, ev)) {\n            return true;\n        }\n        if (result.cancel) {\n            this.cancel(ev, true);\n        }\n        if (!result.key) {\n            return true;\n        }\n        this.emit('keydown', ev);\n        this.emit('key', result.key, ev);\n        this.showCursor();\n        this.handler(result.key);\n        return this.cancel(ev, true);\n    };\n    Terminal.prototype._evaluateKeyEscapeSequence = function (ev) {\n        var result = {\n            cancel: false,\n            key: undefined,\n            scrollLines: undefined\n        };\n        var modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n        switch (ev.keyCode) {\n            case 0:\n                if (ev.key === 'UIKeyInputUpArrow') {\n                    if (this.applicationCursor) {\n                        result.key = EscapeSequences_1.C0.ESC + 'OA';\n                    }\n                    else {\n                        result.key = EscapeSequences_1.C0.ESC + '[A';\n                    }\n                }\n                else if (ev.key === 'UIKeyInputLeftArrow') {\n                    if (this.applicationCursor) {\n                        result.key = EscapeSequences_1.C0.ESC + 'OD';\n                    }\n                    else {\n                        result.key = EscapeSequences_1.C0.ESC + '[D';\n                    }\n                }\n                else if (ev.key === 'UIKeyInputRightArrow') {\n                    if (this.applicationCursor) {\n                        result.key = EscapeSequences_1.C0.ESC + 'OC';\n                    }\n                    else {\n                        result.key = EscapeSequences_1.C0.ESC + '[C';\n                    }\n                }\n                else if (ev.key === 'UIKeyInputDownArrow') {\n                    if (this.applicationCursor) {\n                        result.key = EscapeSequences_1.C0.ESC + 'OB';\n                    }\n                    else {\n                        result.key = EscapeSequences_1.C0.ESC + '[B';\n                    }\n                }\n                break;\n            case 8:\n                if (ev.shiftKey) {\n                    result.key = EscapeSequences_1.C0.BS;\n                    break;\n                }\n                else if (ev.altKey) {\n                    result.key = EscapeSequences_1.C0.ESC + EscapeSequences_1.C0.DEL;\n                    break;\n                }\n                result.key = EscapeSequences_1.C0.DEL;\n                break;\n            case 9:\n                if (ev.shiftKey) {\n                    result.key = EscapeSequences_1.C0.ESC + '[Z';\n                    break;\n                }\n                result.key = EscapeSequences_1.C0.HT;\n                result.cancel = true;\n                break;\n            case 13:\n                result.key = EscapeSequences_1.C0.CR;\n                result.cancel = true;\n                break;\n            case 27:\n                result.key = EscapeSequences_1.C0.ESC;\n                result.cancel = true;\n                break;\n            case 37:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'D';\n                    if (result.key === EscapeSequences_1.C0.ESC + '[1;3D') {\n                        result.key = (this.browser.isMac) ? EscapeSequences_1.C0.ESC + 'b' : EscapeSequences_1.C0.ESC + '[1;5D';\n                    }\n                }\n                else if (this.applicationCursor) {\n                    result.key = EscapeSequences_1.C0.ESC + 'OD';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[D';\n                }\n                break;\n            case 39:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'C';\n                    if (result.key === EscapeSequences_1.C0.ESC + '[1;3C') {\n                        result.key = (this.browser.isMac) ? EscapeSequences_1.C0.ESC + 'f' : EscapeSequences_1.C0.ESC + '[1;5C';\n                    }\n                }\n                else if (this.applicationCursor) {\n                    result.key = EscapeSequences_1.C0.ESC + 'OC';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[C';\n                }\n                break;\n            case 38:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'A';\n                    if (result.key === EscapeSequences_1.C0.ESC + '[1;3A') {\n                        result.key = EscapeSequences_1.C0.ESC + '[1;5A';\n                    }\n                }\n                else if (this.applicationCursor) {\n                    result.key = EscapeSequences_1.C0.ESC + 'OA';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[A';\n                }\n                break;\n            case 40:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'B';\n                    if (result.key === EscapeSequences_1.C0.ESC + '[1;3B') {\n                        result.key = EscapeSequences_1.C0.ESC + '[1;5B';\n                    }\n                }\n                else if (this.applicationCursor) {\n                    result.key = EscapeSequences_1.C0.ESC + 'OB';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[B';\n                }\n                break;\n            case 45:\n                if (!ev.shiftKey && !ev.ctrlKey) {\n                    result.key = EscapeSequences_1.C0.ESC + '[2~';\n                }\n                break;\n            case 46:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[3;' + (modifiers + 1) + '~';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[3~';\n                }\n                break;\n            case 36:\n                if (modifiers)\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'H';\n                else if (this.applicationCursor)\n                    result.key = EscapeSequences_1.C0.ESC + 'OH';\n                else\n                    result.key = EscapeSequences_1.C0.ESC + '[H';\n                break;\n            case 35:\n                if (modifiers)\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'F';\n                else if (this.applicationCursor)\n                    result.key = EscapeSequences_1.C0.ESC + 'OF';\n                else\n                    result.key = EscapeSequences_1.C0.ESC + '[F';\n                break;\n            case 33:\n                if (ev.shiftKey) {\n                    result.scrollLines = -(this.rows - 1);\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[5~';\n                }\n                break;\n            case 34:\n                if (ev.shiftKey) {\n                    result.scrollLines = this.rows - 1;\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[6~';\n                }\n                break;\n            case 112:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'P';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + 'OP';\n                }\n                break;\n            case 113:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + 'OQ';\n                }\n                break;\n            case 114:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'R';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + 'OR';\n                }\n                break;\n            case 115:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'S';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + 'OS';\n                }\n                break;\n            case 116:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[15;' + (modifiers + 1) + '~';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[15~';\n                }\n                break;\n            case 117:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[17;' + (modifiers + 1) + '~';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[17~';\n                }\n                break;\n            case 118:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[18;' + (modifiers + 1) + '~';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[18~';\n                }\n                break;\n            case 119:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[19;' + (modifiers + 1) + '~';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[19~';\n                }\n                break;\n            case 120:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[20;' + (modifiers + 1) + '~';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[20~';\n                }\n                break;\n            case 121:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[21;' + (modifiers + 1) + '~';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[21~';\n                }\n                break;\n            case 122:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[23;' + (modifiers + 1) + '~';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[23~';\n                }\n                break;\n            case 123:\n                if (modifiers) {\n                    result.key = EscapeSequences_1.C0.ESC + '[24;' + (modifiers + 1) + '~';\n                }\n                else {\n                    result.key = EscapeSequences_1.C0.ESC + '[24~';\n                }\n                break;\n            default:\n                if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n                    if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n                        result.key = String.fromCharCode(ev.keyCode - 64);\n                    }\n                    else if (ev.keyCode === 32) {\n                        result.key = String.fromCharCode(0);\n                    }\n                    else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n                        result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n                    }\n                    else if (ev.keyCode === 56) {\n                        result.key = String.fromCharCode(127);\n                    }\n                    else if (ev.keyCode === 219) {\n                        result.key = String.fromCharCode(27);\n                    }\n                    else if (ev.keyCode === 220) {\n                        result.key = String.fromCharCode(28);\n                    }\n                    else if (ev.keyCode === 221) {\n                        result.key = String.fromCharCode(29);\n                    }\n                }\n                else if (!this.browser.isMac && ev.altKey && !ev.ctrlKey && !ev.metaKey) {\n                    if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n                        result.key = EscapeSequences_1.C0.ESC + String.fromCharCode(ev.keyCode + 32);\n                    }\n                    else if (ev.keyCode === 192) {\n                        result.key = EscapeSequences_1.C0.ESC + '`';\n                    }\n                    else if (ev.keyCode >= 48 && ev.keyCode <= 57) {\n                        result.key = EscapeSequences_1.C0.ESC + (ev.keyCode - 48);\n                    }\n                }\n                else if (this.browser.isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n                    if (ev.keyCode === 65) {\n                        this.selectAll();\n                    }\n                }\n                break;\n        }\n        return result;\n    };\n    Terminal.prototype.setgLevel = function (g) {\n        this.glevel = g;\n        this.charset = this.charsets[g];\n    };\n    Terminal.prototype.setgCharset = function (g, charset) {\n        this.charsets[g] = charset;\n        if (this.glevel === g) {\n            this.charset = charset;\n        }\n    };\n    Terminal.prototype._keyPress = function (ev) {\n        var key;\n        if (this.customKeyEventHandler && this.customKeyEventHandler(ev) === false) {\n            return false;\n        }\n        this.cancel(ev);\n        if (ev.charCode) {\n            key = ev.charCode;\n        }\n        else if (ev.which == null) {\n            key = ev.keyCode;\n        }\n        else if (ev.which !== 0 && ev.charCode !== 0) {\n            key = ev.which;\n        }\n        else {\n            return false;\n        }\n        if (!key || ((ev.altKey || ev.ctrlKey || ev.metaKey) && !isThirdLevelShift(this.browser, ev))) {\n            return false;\n        }\n        key = String.fromCharCode(key);\n        this.emit('keypress', key, ev);\n        this.emit('key', key, ev);\n        this.showCursor();\n        this.handler(key);\n        return true;\n    };\n    Terminal.prototype.send = function (data) {\n        var _this = this;\n        if (!this.sendDataQueue) {\n            setTimeout(function () {\n                _this.handler(_this.sendDataQueue);\n                _this.sendDataQueue = '';\n            }, 1);\n        }\n        this.sendDataQueue += data;\n    };\n    Terminal.prototype.bell = function () {\n        var _this = this;\n        this.emit('bell');\n        if (this.soundBell())\n            this.bellAudioElement.play();\n        if (this.visualBell()) {\n            this.element.classList.add('visual-bell-active');\n            clearTimeout(this.visualBellTimer);\n            this.visualBellTimer = window.setTimeout(function () {\n                _this.element.classList.remove('visual-bell-active');\n            }, 200);\n        }\n    };\n    Terminal.prototype.log = function (text, data) {\n        if (!this.options.debug)\n            return;\n        if (!this.context.console || !this.context.console.log)\n            return;\n        this.context.console.log(text, data);\n    };\n    Terminal.prototype.error = function (text, data) {\n        if (!this.options.debug)\n            return;\n        if (!this.context.console || !this.context.console.error)\n            return;\n        this.context.console.error(text, data);\n    };\n    Terminal.prototype.resize = function (x, y) {\n        if (isNaN(x) || isNaN(y)) {\n            return;\n        }\n        if (x === this.cols && y === this.rows) {\n            if (!this.charMeasure.width || !this.charMeasure.height) {\n                this.charMeasure.measure(this.options);\n            }\n            return;\n        }\n        if (x < 1)\n            x = 1;\n        if (y < 1)\n            y = 1;\n        this.buffers.resize(x, y);\n        this.cols = x;\n        this.rows = y;\n        this.buffers.setupTabStops(this.cols);\n        this.charMeasure.measure(this.options);\n        this.refresh(0, this.rows - 1);\n        this.emit('resize', { cols: x, rows: y });\n    };\n    Terminal.prototype.updateRange = function (y) {\n        if (y < this.refreshStart)\n            this.refreshStart = y;\n        if (y > this.refreshEnd)\n            this.refreshEnd = y;\n    };\n    Terminal.prototype.maxRange = function () {\n        this.refreshStart = 0;\n        this.refreshEnd = this.rows - 1;\n    };\n    Terminal.prototype.eraseRight = function (x, y) {\n        var line = this.buffer.lines.get(this.buffer.ybase + y);\n        if (!line) {\n            return;\n        }\n        var ch = [this.eraseAttr(), ' ', 1, 32];\n        for (; x < this.cols; x++) {\n            line[x] = ch;\n        }\n        this.updateRange(y);\n    };\n    Terminal.prototype.eraseLeft = function (x, y) {\n        var line = this.buffer.lines.get(this.buffer.ybase + y);\n        if (!line) {\n            return;\n        }\n        var ch = [this.eraseAttr(), ' ', 1, 32];\n        x++;\n        while (x--) {\n            line[x] = ch;\n        }\n        this.updateRange(y);\n    };\n    Terminal.prototype.clear = function () {\n        if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n            return;\n        }\n        this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n        this.buffer.lines.length = 1;\n        this.buffer.ydisp = 0;\n        this.buffer.ybase = 0;\n        this.buffer.y = 0;\n        for (var i = 1; i < this.rows; i++) {\n            this.buffer.lines.push(this.blankLine());\n        }\n        this.refresh(0, this.rows - 1);\n        this.emit('scroll', this.buffer.ydisp);\n    };\n    Terminal.prototype.eraseLine = function (y) {\n        this.eraseRight(0, y);\n    };\n    Terminal.prototype.blankLine = function (cur, isWrapped, cols) {\n        var attr = cur ? this.eraseAttr() : this.defAttr;\n        var ch = [attr, ' ', 1, 32];\n        var line = [];\n        if (isWrapped) {\n            line.isWrapped = isWrapped;\n        }\n        cols = cols || this.cols;\n        for (var i = 0; i < cols; i++) {\n            line[i] = ch;\n        }\n        return line;\n    };\n    Terminal.prototype.ch = function (cur) {\n        if (cur) {\n            return [this.eraseAttr(), ' ', 1, 32];\n        }\n        return [this.defAttr, ' ', 1, 32];\n    };\n    Terminal.prototype.is = function (term) {\n        return (this.options.termName + '').indexOf(term) === 0;\n    };\n    Terminal.prototype.handler = function (data) {\n        if (this.options.disableStdin) {\n            return;\n        }\n        if (this.selectionManager && this.selectionManager.hasSelection) {\n            this.selectionManager.clearSelection();\n        }\n        if (this.buffer.ybase !== this.buffer.ydisp) {\n            this.scrollToBottom();\n        }\n        this.emit('data', data);\n    };\n    Terminal.prototype.handleTitle = function (title) {\n        this.emit('title', title);\n    };\n    Terminal.prototype.index = function () {\n        this.buffer.y++;\n        if (this.buffer.y > this.buffer.scrollBottom) {\n            this.buffer.y--;\n            this.scroll();\n        }\n        if (this.buffer.x >= this.cols) {\n            this.buffer.x--;\n        }\n    };\n    Terminal.prototype.reverseIndex = function () {\n        if (this.buffer.y === this.buffer.scrollTop) {\n            var scrollRegionHeight = this.buffer.scrollBottom - this.buffer.scrollTop;\n            this.buffer.lines.shiftElements(this.buffer.y + this.buffer.ybase, scrollRegionHeight, 1);\n            this.buffer.lines.set(this.buffer.y + this.buffer.ybase, this.blankLine(true));\n            this.updateRange(this.buffer.scrollTop);\n            this.updateRange(this.buffer.scrollBottom);\n        }\n        else {\n            this.buffer.y--;\n        }\n    };\n    Terminal.prototype.reset = function () {\n        this.options.rows = this.rows;\n        this.options.cols = this.cols;\n        var customKeyEventHandler = this.customKeyEventHandler;\n        var inputHandler = this.inputHandler;\n        var buffers = this.buffers;\n        this.setup();\n        this.customKeyEventHandler = customKeyEventHandler;\n        this.inputHandler = inputHandler;\n        this.buffers = buffers;\n        this.refresh(0, this.rows - 1);\n        this.viewport.syncScrollArea();\n    };\n    Terminal.prototype.tabSet = function () {\n        this.buffer.tabs[this.buffer.x] = true;\n    };\n    Terminal.prototype.cancel = function (ev, force) {\n        if (!this.options.cancelEvents && !force) {\n            return;\n        }\n        ev.preventDefault();\n        ev.stopPropagation();\n        return false;\n    };\n    Terminal.prototype.matchColor = function (r1, g1, b1) {\n        return matchColor_(r1, g1, b1);\n    };\n    Terminal.prototype.visualBell = function () {\n        return this.options.bellStyle === 'visual' ||\n            this.options.bellStyle === 'both';\n    };\n    Terminal.prototype.soundBell = function () {\n        return this.options.bellStyle === 'sound' ||\n            this.options.bellStyle === 'both';\n    };\n    Terminal.prototype.syncBellSound = function () {\n        if (!this.element) {\n            return;\n        }\n        if (this.soundBell() && this.bellAudioElement) {\n            this.bellAudioElement.setAttribute('src', this.options.bellSound);\n        }\n        else if (this.soundBell()) {\n            this.bellAudioElement = document.createElement('audio');\n            this.bellAudioElement.setAttribute('preload', 'auto');\n            this.bellAudioElement.setAttribute('src', this.options.bellSound);\n            this.helperContainer.appendChild(this.bellAudioElement);\n        }\n        else if (this.bellAudioElement) {\n            this.helperContainer.removeChild(this.bellAudioElement);\n        }\n    };\n    return Terminal;\n}(EventEmitter_1.EventEmitter));\nexports.Terminal = Terminal;\nfunction globalOn(el, type, handler, capture) {\n    if (!Array.isArray(el)) {\n        el = [el];\n    }\n    el.forEach(function (element) {\n        element.addEventListener(type, handler, capture || false);\n    });\n}\nvar on = globalOn;\nfunction off(el, type, handler, capture) {\n    if (capture === void 0) { capture = false; }\n    el.removeEventListener(type, handler, capture);\n}\nfunction isThirdLevelShift(browser, ev) {\n    var thirdLevelKey = (browser.isMac && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isMSWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n    if (ev.type === 'keypress') {\n        return thirdLevelKey;\n    }\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n}\nfunction wasMondifierKeyOnlyEvent(ev) {\n    return ev.keyCode === 16 ||\n        ev.keyCode === 17 ||\n        ev.keyCode === 18;\n}\nvar vcolors = (function () {\n    var result = ColorManager_1.DEFAULT_ANSI_COLORS.map(function (c) {\n        c = c.substring(1);\n        return [\n            parseInt(c.substring(0, 2), 16),\n            parseInt(c.substring(2, 4), 16),\n            parseInt(c.substring(4, 6), 16)\n        ];\n    });\n    var r = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n    for (var i = 0; i < 216; i++) {\n        result.push([\n            r[(i / 36) % 6 | 0],\n            r[(i / 6) % 6 | 0],\n            r[i % 6]\n        ]);\n    }\n    var c;\n    for (var i = 0; i < 24; i++) {\n        c = 8 + i * 10;\n        result.push([c, c, c]);\n    }\n    return result;\n})();\nvar matchColorCache = {};\nfunction matchColorDistance(r1, g1, b1, r2, g2, b2) {\n    return Math.pow(30 * (r1 - r2), 2)\n        + Math.pow(59 * (g1 - g2), 2)\n        + Math.pow(11 * (b1 - b2), 2);\n}\n;\nfunction matchColor_(r1, g1, b1) {\n    var hash = (r1 << 16) | (g1 << 8) | b1;\n    if (matchColorCache[hash] != null) {\n        return matchColorCache[hash];\n    }\n    var ldiff = Infinity;\n    var li = -1;\n    var i = 0;\n    var c;\n    var r2;\n    var g2;\n    var b2;\n    var diff;\n    for (; i < vcolors.length; i++) {\n        c = vcolors[i];\n        r2 = c[0];\n        g2 = c[1];\n        b2 = c[2];\n        diff = matchColorDistance(r1, g1, b1, r2, g2, b2);\n        if (diff === 0) {\n            li = i;\n            break;\n        }\n        if (diff < ldiff) {\n            ldiff = diff;\n            li = i;\n        }\n    }\n    return matchColorCache[hash] = li;\n}\n\n\n\n},{\"./Buffer\":1,\"./BufferSet\":2,\"./CompositionHelper\":5,\"./EscapeSequences\":6,\"./EventEmitter\":7,\"./InputHandler\":8,\"./Linkifier\":9,\"./Parser\":10,\"./SelectionManager\":11,\"./Viewport\":15,\"./handlers/Clipboard\":16,\"./input/MouseZoneManager\":17,\"./renderer/CharAtlas\":19,\"./renderer/ColorManager\":20,\"./renderer/Renderer\":24,\"./utils/Browser\":28,\"./utils/CharMeasure\":29,\"./utils/MouseHelper\":32,\"./utils/Sounds\":34}],14:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkHoverEventTypes;\n(function (LinkHoverEventTypes) {\n    LinkHoverEventTypes[\"HOVER\"] = \"linkhover\";\n    LinkHoverEventTypes[\"TOOLTIP\"] = \"linktooltip\";\n    LinkHoverEventTypes[\"LEAVE\"] = \"linkleave\";\n})(LinkHoverEventTypes = exports.LinkHoverEventTypes || (exports.LinkHoverEventTypes = {}));\n;\n\n\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Viewport = (function () {\n    function Viewport(terminal, viewportElement, scrollArea, charMeasure) {\n        var _this = this;\n        this.terminal = terminal;\n        this.viewportElement = viewportElement;\n        this.scrollArea = scrollArea;\n        this.charMeasure = charMeasure;\n        this.currentRowHeight = 0;\n        this.lastRecordedBufferLength = 0;\n        this.lastRecordedViewportHeight = 0;\n        this.lastRecordedBufferHeight = 0;\n        this.viewportElement.addEventListener('scroll', this.onScroll.bind(this));\n        setTimeout(function () { return _this.syncScrollArea(); }, 0);\n    }\n    Viewport.prototype.onThemeChanged = function (colors) {\n        this.viewportElement.style.backgroundColor = colors.background;\n    };\n    Viewport.prototype.refresh = function () {\n        if (this.charMeasure.height > 0) {\n            this.currentRowHeight = this.terminal.renderer.dimensions.scaledCellHeight / window.devicePixelRatio;\n            if (this.lastRecordedViewportHeight !== this.terminal.renderer.dimensions.canvasHeight) {\n                this.lastRecordedViewportHeight = this.terminal.renderer.dimensions.canvasHeight;\n                this.viewportElement.style.height = this.lastRecordedViewportHeight + 'px';\n            }\n            var newBufferHeight = Math.round(this.currentRowHeight * this.lastRecordedBufferLength);\n            if (this.lastRecordedBufferHeight !== newBufferHeight) {\n                this.lastRecordedBufferHeight = newBufferHeight;\n                this.scrollArea.style.height = this.lastRecordedBufferHeight + 'px';\n            }\n        }\n    };\n    Viewport.prototype.syncScrollArea = function () {\n        if (this.lastRecordedBufferLength !== this.terminal.buffer.lines.length) {\n            this.lastRecordedBufferLength = this.terminal.buffer.lines.length;\n            this.refresh();\n        }\n        else if (this.lastRecordedViewportHeight !== this.terminal.renderer.dimensions.canvasHeight) {\n            this.refresh();\n        }\n        else {\n            if (this.terminal.renderer.dimensions.scaledCellHeight / window.devicePixelRatio !== this.currentRowHeight) {\n                this.refresh();\n            }\n        }\n        var scrollTop = this.terminal.buffer.ydisp * this.currentRowHeight;\n        if (this.viewportElement.scrollTop !== scrollTop) {\n            this.viewportElement.scrollTop = scrollTop;\n        }\n    };\n    Viewport.prototype.onScroll = function (ev) {\n        var newRow = Math.round(this.viewportElement.scrollTop / this.currentRowHeight);\n        var diff = newRow - this.terminal.buffer.ydisp;\n        this.terminal.scrollLines(diff, true);\n    };\n    Viewport.prototype.onWheel = function (ev) {\n        if (ev.deltaY === 0) {\n            return;\n        }\n        var multiplier = 1;\n        if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n            multiplier = this.currentRowHeight;\n        }\n        else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n            multiplier = this.currentRowHeight * this.terminal.rows;\n        }\n        this.viewportElement.scrollTop += ev.deltaY * multiplier;\n        ev.preventDefault();\n    };\n    ;\n    Viewport.prototype.onTouchStart = function (ev) {\n        this.lastTouchY = ev.touches[0].pageY;\n    };\n    ;\n    Viewport.prototype.onTouchMove = function (ev) {\n        var deltaY = this.lastTouchY - ev.touches[0].pageY;\n        this.lastTouchY = ev.touches[0].pageY;\n        if (deltaY === 0) {\n            return;\n        }\n        this.viewportElement.scrollTop += deltaY;\n        ev.preventDefault();\n    };\n    ;\n    return Viewport;\n}());\nexports.Viewport = Viewport;\n\n\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction prepareTextForTerminal(text, isMSWindows) {\n    if (isMSWindows) {\n        return text.replace(/\\r?\\n/g, '\\r');\n    }\n    return text;\n}\nexports.prepareTextForTerminal = prepareTextForTerminal;\nfunction bracketTextForPaste(text, bracketedPasteMode) {\n    if (bracketedPasteMode) {\n        return '\\x1b[200~' + text + '\\x1b[201~';\n    }\n    return text;\n}\nexports.bracketTextForPaste = bracketTextForPaste;\nfunction copyHandler(ev, term, selectionManager) {\n    if (term.browser.isMSIE) {\n        window.clipboardData.setData('Text', selectionManager.selectionText);\n    }\n    else {\n        ev.clipboardData.setData('text/plain', selectionManager.selectionText);\n    }\n    ev.preventDefault();\n}\nexports.copyHandler = copyHandler;\nfunction pasteHandler(ev, term) {\n    ev.stopPropagation();\n    var text;\n    var dispatchPaste = function (text) {\n        text = prepareTextForTerminal(text, term.browser.isMSWindows);\n        text = bracketTextForPaste(text, term.bracketedPasteMode);\n        term.handler(text);\n        term.textarea.value = '';\n        term.emit('paste', text);\n        term.cancel(ev);\n    };\n    if (term.browser.isMSIE) {\n        if (window.clipboardData) {\n            text = window.clipboardData.getData('Text');\n            dispatchPaste(text);\n        }\n    }\n    else {\n        if (ev.clipboardData) {\n            text = ev.clipboardData.getData('text/plain');\n            dispatchPaste(text);\n        }\n    }\n}\nexports.pasteHandler = pasteHandler;\nfunction moveTextAreaUnderMouseCursor(ev, textarea) {\n    textarea.style.position = 'fixed';\n    textarea.style.width = '20px';\n    textarea.style.height = '20px';\n    textarea.style.left = (ev.clientX - 10) + 'px';\n    textarea.style.top = (ev.clientY - 10) + 'px';\n    textarea.style.zIndex = '1000';\n    textarea.focus();\n    setTimeout(function () {\n        textarea.style.position = null;\n        textarea.style.width = null;\n        textarea.style.height = null;\n        textarea.style.left = null;\n        textarea.style.top = null;\n        textarea.style.zIndex = null;\n    }, 4);\n}\nexports.moveTextAreaUnderMouseCursor = moveTextAreaUnderMouseCursor;\nfunction rightClickHandler(ev, textarea, selectionManager) {\n    moveTextAreaUnderMouseCursor(ev, textarea);\n    textarea.value = selectionManager.selectionText;\n    textarea.select();\n}\nexports.rightClickHandler = rightClickHandler;\n\n\n\n},{}],17:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HOVER_DURATION = 500;\nvar MouseZoneManager = (function () {\n    function MouseZoneManager(_terminal) {\n        var _this = this;\n        this._terminal = _terminal;\n        this._zones = [];\n        this._areZonesActive = false;\n        this._tooltipTimeout = null;\n        this._currentZone = null;\n        this._lastHoverCoords = [null, null];\n        this._terminal.element.addEventListener('mousedown', function (e) { return _this._onMouseDown(e); });\n        this._mouseMoveListener = function (e) { return _this._onMouseMove(e); };\n        this._clickListener = function (e) { return _this._onClick(e); };\n    }\n    MouseZoneManager.prototype.add = function (zone) {\n        this._zones.push(zone);\n        if (this._zones.length === 1) {\n            this._activate();\n        }\n    };\n    MouseZoneManager.prototype.clearAll = function (start, end) {\n        if (this._zones.length === 0) {\n            return;\n        }\n        if (!end) {\n            start = 0;\n            end = this._terminal.rows - 1;\n        }\n        for (var i = 0; i < this._zones.length; i++) {\n            var zone = this._zones[i];\n            if (zone.y > start && zone.y <= end + 1) {\n                if (this._currentZone && this._currentZone === zone) {\n                    this._currentZone.leaveCallback();\n                    this._currentZone = null;\n                }\n                this._zones.splice(i--, 1);\n            }\n        }\n        if (this._zones.length === 0) {\n            this._deactivate();\n        }\n    };\n    MouseZoneManager.prototype._activate = function () {\n        if (!this._areZonesActive) {\n            this._areZonesActive = true;\n            this._terminal.element.addEventListener('mousemove', this._mouseMoveListener);\n            this._terminal.element.addEventListener('click', this._clickListener);\n        }\n    };\n    MouseZoneManager.prototype._deactivate = function () {\n        if (this._areZonesActive) {\n            this._areZonesActive = false;\n            this._terminal.element.removeEventListener('mousemove', this._mouseMoveListener);\n            this._terminal.element.removeEventListener('click', this._clickListener);\n        }\n    };\n    MouseZoneManager.prototype._onMouseMove = function (e) {\n        if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n            this._onHover(e);\n            this._lastHoverCoords = [e.pageX, e.pageY];\n        }\n    };\n    MouseZoneManager.prototype._onHover = function (e) {\n        var _this = this;\n        var zone = this._findZoneEventAt(e);\n        if (zone === this._currentZone) {\n            return;\n        }\n        if (this._currentZone) {\n            this._currentZone.leaveCallback();\n            this._currentZone = null;\n            if (this._tooltipTimeout) {\n                clearTimeout(this._tooltipTimeout);\n            }\n        }\n        if (!zone) {\n            return;\n        }\n        this._currentZone = zone;\n        if (zone.hoverCallback) {\n            zone.hoverCallback(e);\n        }\n        this._tooltipTimeout = setTimeout(function () { return _this._onTooltip(e); }, HOVER_DURATION);\n    };\n    MouseZoneManager.prototype._onTooltip = function (e) {\n        this._tooltipTimeout = null;\n        var zone = this._findZoneEventAt(e);\n        if (zone && zone.tooltipCallback) {\n            zone.tooltipCallback(e);\n        }\n    };\n    MouseZoneManager.prototype._onMouseDown = function (e) {\n        if (!this._areZonesActive) {\n            return;\n        }\n        var zone = this._findZoneEventAt(e);\n        if (zone) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n    };\n    MouseZoneManager.prototype._onClick = function (e) {\n        var zone = this._findZoneEventAt(e);\n        if (zone) {\n            zone.clickCallback(e);\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n    };\n    MouseZoneManager.prototype._findZoneEventAt = function (e) {\n        var coords = this._terminal.mouseHelper.getCoords(e, this._terminal.element, this._terminal.charMeasure, this._terminal.options.lineHeight, this._terminal.cols, this._terminal.rows);\n        if (!coords) {\n            return null;\n        }\n        for (var i = 0; i < this._zones.length; i++) {\n            var zone = this._zones[i];\n            if (zone.y === coords[1] && zone.x1 <= coords[0] && zone.x2 > coords[0]) {\n                return zone;\n            }\n        }\n        ;\n        return null;\n    };\n    return MouseZoneManager;\n}());\nexports.MouseZoneManager = MouseZoneManager;\nvar MouseZone = (function () {\n    function MouseZone(x1, x2, y, clickCallback, hoverCallback, tooltipCallback, leaveCallback) {\n        this.x1 = x1;\n        this.x2 = x2;\n        this.y = y;\n        this.clickCallback = clickCallback;\n        this.hoverCallback = hoverCallback;\n        this.tooltipCallback = tooltipCallback;\n        this.leaveCallback = leaveCallback;\n    }\n    return MouseZone;\n}());\nexports.MouseZone = MouseZone;\n\n\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharAtlas_1 = require(\"./CharAtlas\");\nvar Buffer_1 = require(\"../Buffer\");\nexports.INVERTED_DEFAULT_COLOR = -1;\nvar DIM_OPACITY = 0.5;\nvar BaseRenderLayer = (function () {\n    function BaseRenderLayer(container, id, zIndex, _alpha, _colors) {\n        this._alpha = _alpha;\n        this._colors = _colors;\n        this._scaledCharWidth = 0;\n        this._scaledCharHeight = 0;\n        this._scaledCellWidth = 0;\n        this._scaledCellHeight = 0;\n        this._scaledCharLeft = 0;\n        this._scaledCharTop = 0;\n        this._canvas = document.createElement('canvas');\n        this._canvas.id = \"xterm-\" + id + \"-layer\";\n        this._canvas.style.zIndex = zIndex.toString();\n        this._ctx = this._canvas.getContext('2d', { alpha: _alpha });\n        this._ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n        if (!_alpha) {\n            this.clearAll();\n        }\n        container.appendChild(this._canvas);\n    }\n    BaseRenderLayer.prototype.onOptionsChanged = function (terminal) { };\n    BaseRenderLayer.prototype.onBlur = function (terminal) { };\n    BaseRenderLayer.prototype.onFocus = function (terminal) { };\n    BaseRenderLayer.prototype.onCursorMove = function (terminal) { };\n    BaseRenderLayer.prototype.onGridChanged = function (terminal, startRow, endRow) { };\n    BaseRenderLayer.prototype.onSelectionChanged = function (terminal, start, end) { };\n    BaseRenderLayer.prototype.onThemeChanged = function (terminal, colorSet) {\n        this._refreshCharAtlas(terminal, colorSet);\n    };\n    BaseRenderLayer.prototype._refreshCharAtlas = function (terminal, colorSet) {\n        var _this = this;\n        if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n            return;\n        }\n        this._charAtlas = null;\n        var result = CharAtlas_1.acquireCharAtlas(terminal, this._colors, this._scaledCharWidth, this._scaledCharHeight);\n        if (result instanceof HTMLCanvasElement) {\n            this._charAtlas = result;\n        }\n        else {\n            result.then(function (bitmap) { return _this._charAtlas = bitmap; });\n        }\n    };\n    BaseRenderLayer.prototype.resize = function (terminal, dim, charSizeChanged) {\n        this._scaledCellWidth = dim.scaledCellWidth;\n        this._scaledCellHeight = dim.scaledCellHeight;\n        this._scaledCharWidth = dim.scaledCharWidth;\n        this._scaledCharHeight = dim.scaledCharHeight;\n        this._scaledCharLeft = dim.scaledCharLeft;\n        this._scaledCharTop = dim.scaledCharTop;\n        this._canvas.width = dim.scaledCanvasWidth;\n        this._canvas.height = dim.scaledCanvasHeight;\n        this._canvas.style.width = dim.canvasWidth + \"px\";\n        this._canvas.style.height = dim.canvasHeight + \"px\";\n        if (!this._alpha) {\n            this.clearAll();\n        }\n        if (charSizeChanged) {\n            this._refreshCharAtlas(terminal, this._colors);\n        }\n    };\n    BaseRenderLayer.prototype.fillCells = function (x, y, width, height) {\n        this._ctx.fillRect(x * this._scaledCellWidth, y * this._scaledCellHeight, width * this._scaledCellWidth, height * this._scaledCellHeight);\n    };\n    BaseRenderLayer.prototype.fillBottomLineAtCells = function (x, y, width) {\n        if (width === void 0) { width = 1; }\n        this._ctx.fillRect(x * this._scaledCellWidth, (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1, width * this._scaledCellWidth, window.devicePixelRatio);\n    };\n    BaseRenderLayer.prototype.fillLeftLineAtCell = function (x, y) {\n        this._ctx.fillRect(x * this._scaledCellWidth, y * this._scaledCellHeight, window.devicePixelRatio, this._scaledCellHeight);\n    };\n    BaseRenderLayer.prototype.strokeRectAtCell = function (x, y, width, height) {\n        this._ctx.lineWidth = window.devicePixelRatio;\n        this._ctx.strokeRect(x * this._scaledCellWidth + window.devicePixelRatio / 2, y * this._scaledCellHeight + (window.devicePixelRatio / 2), width * this._scaledCellWidth - window.devicePixelRatio, (height * this._scaledCellHeight) - window.devicePixelRatio);\n    };\n    BaseRenderLayer.prototype.clearAll = function () {\n        if (this._alpha) {\n            this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n        }\n        else {\n            this._ctx.fillStyle = this._colors.background;\n            this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n        }\n    };\n    BaseRenderLayer.prototype.clearCells = function (x, y, width, height) {\n        if (this._alpha) {\n            this._ctx.clearRect(x * this._scaledCellWidth, y * this._scaledCellHeight, width * this._scaledCellWidth, height * this._scaledCellHeight);\n        }\n        else {\n            this._ctx.fillStyle = this._colors.background;\n            this._ctx.fillRect(x * this._scaledCellWidth, y * this._scaledCellHeight, width * this._scaledCellWidth, height * this._scaledCellHeight);\n        }\n    };\n    BaseRenderLayer.prototype.fillCharTrueColor = function (terminal, charData, x, y) {\n        this._ctx.font = terminal.options.fontSize * window.devicePixelRatio + \"px \" + terminal.options.fontFamily;\n        this._ctx.textBaseline = 'top';\n        this._clipRow(terminal, y);\n        this._ctx.fillText(charData[Buffer_1.CHAR_DATA_CHAR_INDEX], x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n    };\n    BaseRenderLayer.prototype.drawChar = function (terminal, char, code, width, x, y, fg, bg, bold, dim) {\n        var colorIndex = 0;\n        if (fg < 256) {\n            colorIndex = fg + 2;\n        }\n        else {\n            if (bold && terminal.options.enableBold) {\n                colorIndex = 1;\n            }\n        }\n        var isAscii = code < 256;\n        var isBasicColor = (colorIndex > 1 && fg < 16) && (fg < 8 || bold);\n        var isDefaultColor = fg >= 256;\n        var isDefaultBackground = bg >= 256;\n        if (this._charAtlas && isAscii && (isBasicColor || isDefaultColor) && isDefaultBackground) {\n            var charAtlasCellWidth = this._scaledCharWidth + CharAtlas_1.CHAR_ATLAS_CELL_SPACING;\n            var charAtlasCellHeight = this._scaledCharHeight + CharAtlas_1.CHAR_ATLAS_CELL_SPACING;\n            if (dim) {\n                this._ctx.globalAlpha = DIM_OPACITY;\n            }\n            if (bold && !terminal.options.enableBold) {\n                if (colorIndex > 1) {\n                    colorIndex -= 8;\n                }\n            }\n            this._ctx.drawImage(this._charAtlas, code * charAtlasCellWidth, colorIndex * charAtlasCellHeight, charAtlasCellWidth, this._scaledCharHeight, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop, charAtlasCellWidth, this._scaledCharHeight);\n        }\n        else {\n            this._drawUncachedChar(terminal, char, width, fg, x, y, bold, dim);\n        }\n    };\n    BaseRenderLayer.prototype._drawUncachedChar = function (terminal, char, width, fg, x, y, bold, dim) {\n        this._ctx.save();\n        this._ctx.font = terminal.options.fontSize * window.devicePixelRatio + \"px \" + terminal.options.fontFamily;\n        if (bold && terminal.options.enableBold) {\n            this._ctx.font = \"bold \" + this._ctx.font;\n        }\n        this._ctx.textBaseline = 'top';\n        if (fg === exports.INVERTED_DEFAULT_COLOR) {\n            this._ctx.fillStyle = this._colors.background;\n        }\n        else if (fg < 256) {\n            this._ctx.fillStyle = this._colors.ansi[fg];\n        }\n        else {\n            this._ctx.fillStyle = this._colors.foreground;\n        }\n        this._clipRow(terminal, y);\n        if (dim) {\n            this._ctx.globalAlpha = DIM_OPACITY;\n        }\n        this._ctx.fillText(char, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n        this._ctx.restore();\n    };\n    BaseRenderLayer.prototype._clipRow = function (terminal, y) {\n        this._ctx.beginPath();\n        this._ctx.rect(0, y * this._scaledCellHeight, terminal.cols * this._scaledCellWidth, this._scaledCellHeight);\n        this._ctx.clip();\n    };\n    return BaseRenderLayer;\n}());\nexports.BaseRenderLayer = BaseRenderLayer;\n\n\n\n},{\"../Buffer\":1,\"./CharAtlas\":19}],19:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Browser_1 = require(\"../utils/Browser\");\nexports.CHAR_ATLAS_CELL_SPACING = 1;\nvar charAtlasCache = [];\nfunction acquireCharAtlas(terminal, colors, scaledCharWidth, scaledCharHeight) {\n    var newConfig = generateConfig(scaledCharWidth, scaledCharHeight, terminal, colors);\n    for (var i = 0; i < charAtlasCache.length; i++) {\n        var entry = charAtlasCache[i];\n        var ownedByIndex = entry.ownedBy.indexOf(terminal);\n        if (ownedByIndex >= 0) {\n            if (configEquals(entry.config, newConfig)) {\n                return entry.bitmap;\n            }\n            else {\n                if (entry.ownedBy.length === 1) {\n                    charAtlasCache.splice(i, 1);\n                }\n                else {\n                    entry.ownedBy.splice(ownedByIndex, 1);\n                }\n                break;\n            }\n        }\n    }\n    for (var i = 0; i < charAtlasCache.length; i++) {\n        var entry = charAtlasCache[i];\n        if (configEquals(entry.config, newConfig)) {\n            entry.ownedBy.push(terminal);\n            return entry.bitmap;\n        }\n    }\n    var newEntry = {\n        bitmap: generator.generate(scaledCharWidth, scaledCharHeight, terminal.options.fontSize, terminal.options.fontFamily, colors.background, colors.foreground, colors.ansi),\n        config: newConfig,\n        ownedBy: [terminal]\n    };\n    charAtlasCache.push(newEntry);\n    return newEntry.bitmap;\n}\nexports.acquireCharAtlas = acquireCharAtlas;\nfunction generateConfig(scaledCharWidth, scaledCharHeight, terminal, colors) {\n    var clonedColors = {\n        foreground: colors.foreground,\n        background: colors.background,\n        cursor: null,\n        cursorAccent: null,\n        selection: null,\n        ansi: colors.ansi.slice(0, 16)\n    };\n    return {\n        scaledCharWidth: scaledCharWidth,\n        scaledCharHeight: scaledCharHeight,\n        fontFamily: terminal.options.fontFamily,\n        fontSize: terminal.options.fontSize,\n        colors: clonedColors\n    };\n}\nfunction configEquals(a, b) {\n    for (var i = 0; i < a.colors.ansi.length; i++) {\n        if (a.colors.ansi[i] !== b.colors.ansi[i]) {\n            return false;\n        }\n    }\n    return a.fontFamily === b.fontFamily &&\n        a.fontSize === b.fontSize &&\n        a.scaledCharWidth === b.scaledCharWidth &&\n        a.scaledCharHeight === b.scaledCharHeight &&\n        a.colors.foreground === b.colors.foreground &&\n        a.colors.background === b.colors.background;\n}\nvar generator;\nfunction initialize(document) {\n    if (!generator) {\n        generator = new CharAtlasGenerator(document);\n    }\n}\nexports.initialize = initialize;\nvar CharAtlasGenerator = (function () {\n    function CharAtlasGenerator(_document) {\n        this._document = _document;\n        this._canvas = this._document.createElement('canvas');\n        this._ctx = this._canvas.getContext('2d', { alpha: false });\n        this._ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    }\n    CharAtlasGenerator.prototype.generate = function (scaledCharWidth, scaledCharHeight, fontSize, fontFamily, background, foreground, ansiColors) {\n        var cellWidth = scaledCharWidth + exports.CHAR_ATLAS_CELL_SPACING;\n        var cellHeight = scaledCharHeight + exports.CHAR_ATLAS_CELL_SPACING;\n        this._canvas.width = 255 * cellWidth;\n        this._canvas.height = (2 + 16) * cellHeight;\n        this._ctx.fillStyle = background;\n        this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n        this._ctx.save();\n        this._ctx.fillStyle = foreground;\n        this._ctx.font = fontSize * window.devicePixelRatio + \"px \" + fontFamily;\n        this._ctx.textBaseline = 'top';\n        for (var i = 0; i < 256; i++) {\n            this._ctx.save();\n            this._ctx.beginPath();\n            this._ctx.rect(i * cellWidth, 0, cellWidth, cellHeight);\n            this._ctx.clip();\n            this._ctx.fillText(String.fromCharCode(i), i * cellWidth, 0);\n            this._ctx.restore();\n        }\n        this._ctx.save();\n        this._ctx.font = \"bold \" + this._ctx.font;\n        for (var i = 0; i < 256; i++) {\n            this._ctx.save();\n            this._ctx.beginPath();\n            this._ctx.rect(i * cellWidth, cellHeight, cellWidth, cellHeight);\n            this._ctx.clip();\n            this._ctx.fillText(String.fromCharCode(i), i * cellWidth, cellHeight);\n            this._ctx.restore();\n        }\n        this._ctx.restore();\n        this._ctx.font = fontSize * window.devicePixelRatio + \"px \" + fontFamily;\n        for (var colorIndex = 0; colorIndex < 16; colorIndex++) {\n            if (colorIndex === 8) {\n                this._ctx.font = \"bold \" + this._ctx.font;\n            }\n            var y = (colorIndex + 2) * cellHeight;\n            for (var i = 0; i < 256; i++) {\n                this._ctx.save();\n                this._ctx.beginPath();\n                this._ctx.rect(i * cellWidth, y, cellWidth, cellHeight);\n                this._ctx.clip();\n                this._ctx.fillStyle = ansiColors[colorIndex];\n                this._ctx.fillText(String.fromCharCode(i), i * cellWidth, y);\n                this._ctx.restore();\n            }\n        }\n        this._ctx.restore();\n        if (!('createImageBitmap' in window) || Browser_1.isFirefox) {\n            var result = this._canvas;\n            this._canvas = this._document.createElement('canvas');\n            this._ctx = this._canvas.getContext('2d');\n            this._ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n            return result;\n        }\n        var charAtlasImageData = this._ctx.getImageData(0, 0, this._canvas.width, this._canvas.height);\n        var r = parseInt(background.substr(1, 2), 16);\n        var g = parseInt(background.substr(3, 2), 16);\n        var b = parseInt(background.substr(5, 2), 16);\n        this._clearColor(charAtlasImageData, r, g, b);\n        var promise = window.createImageBitmap(charAtlasImageData);\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n        return promise;\n    };\n    CharAtlasGenerator.prototype._clearColor = function (imageData, r, g, b) {\n        for (var offset = 0; offset < imageData.data.length; offset += 4) {\n            if (imageData.data[offset] === r &&\n                imageData.data[offset + 1] === g &&\n                imageData.data[offset + 2] === b) {\n                imageData.data[offset + 3] = 0;\n            }\n        }\n    };\n    return CharAtlasGenerator;\n}());\n\n\n\n},{\"../utils/Browser\":28}],20:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DEFAULT_FOREGROUND = '#ffffff';\nvar DEFAULT_BACKGROUND = '#000000';\nvar DEFAULT_CURSOR = '#ffffff';\nvar DEFAULT_CURSOR_ACCENT = '#000000';\nvar DEFAULT_SELECTION = 'rgba(255, 255, 255, 0.3)';\nexports.DEFAULT_ANSI_COLORS = [\n    '#2e3436',\n    '#cc0000',\n    '#4e9a06',\n    '#c4a000',\n    '#3465a4',\n    '#75507b',\n    '#06989a',\n    '#d3d7cf',\n    '#555753',\n    '#ef2929',\n    '#8ae234',\n    '#fce94f',\n    '#729fcf',\n    '#ad7fa8',\n    '#34e2e2',\n    '#eeeeec'\n];\nfunction generate256Colors(first16Colors) {\n    var colors = first16Colors.slice();\n    var v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n    for (var i = 0; i < 216; i++) {\n        var r = toPaddedHex(v[(i / 36) % 6 | 0]);\n        var g = toPaddedHex(v[(i / 6) % 6 | 0]);\n        var b = toPaddedHex(v[i % 6]);\n        colors.push(\"#\" + r + g + b);\n    }\n    for (var i = 0; i < 24; i++) {\n        var c = toPaddedHex(8 + i * 10);\n        colors.push(\"#\" + c + c + c);\n    }\n    return colors;\n}\nfunction toPaddedHex(c) {\n    var s = c.toString(16);\n    return s.length < 2 ? '0' + s : s;\n}\nvar ColorManager = (function () {\n    function ColorManager() {\n        this.colors = {\n            foreground: DEFAULT_FOREGROUND,\n            background: DEFAULT_BACKGROUND,\n            cursor: DEFAULT_CURSOR,\n            cursorAccent: DEFAULT_CURSOR_ACCENT,\n            selection: DEFAULT_SELECTION,\n            ansi: generate256Colors(exports.DEFAULT_ANSI_COLORS)\n        };\n    }\n    ColorManager.prototype.setTheme = function (theme) {\n        this.colors.foreground = theme.foreground || DEFAULT_FOREGROUND;\n        this.colors.background = this._validateColor(theme.background, DEFAULT_BACKGROUND);\n        this.colors.cursor = theme.cursor || DEFAULT_CURSOR;\n        this.colors.cursorAccent = theme.cursorAccent || DEFAULT_CURSOR_ACCENT;\n        this.colors.selection = theme.selection || DEFAULT_SELECTION;\n        this.colors.ansi[0] = theme.black || exports.DEFAULT_ANSI_COLORS[0];\n        this.colors.ansi[1] = theme.red || exports.DEFAULT_ANSI_COLORS[1];\n        this.colors.ansi[2] = theme.green || exports.DEFAULT_ANSI_COLORS[2];\n        this.colors.ansi[3] = theme.yellow || exports.DEFAULT_ANSI_COLORS[3];\n        this.colors.ansi[4] = theme.blue || exports.DEFAULT_ANSI_COLORS[4];\n        this.colors.ansi[5] = theme.magenta || exports.DEFAULT_ANSI_COLORS[5];\n        this.colors.ansi[6] = theme.cyan || exports.DEFAULT_ANSI_COLORS[6];\n        this.colors.ansi[7] = theme.white || exports.DEFAULT_ANSI_COLORS[7];\n        this.colors.ansi[8] = theme.brightBlack || exports.DEFAULT_ANSI_COLORS[8];\n        this.colors.ansi[9] = theme.brightRed || exports.DEFAULT_ANSI_COLORS[9];\n        this.colors.ansi[10] = theme.brightGreen || exports.DEFAULT_ANSI_COLORS[10];\n        this.colors.ansi[11] = theme.brightYellow || exports.DEFAULT_ANSI_COLORS[11];\n        this.colors.ansi[12] = theme.brightBlue || exports.DEFAULT_ANSI_COLORS[12];\n        this.colors.ansi[13] = theme.brightMagenta || exports.DEFAULT_ANSI_COLORS[13];\n        this.colors.ansi[14] = theme.brightCyan || exports.DEFAULT_ANSI_COLORS[14];\n        this.colors.ansi[15] = theme.brightWhite || exports.DEFAULT_ANSI_COLORS[15];\n    };\n    ColorManager.prototype._validateColor = function (color, fallback) {\n        if (!color) {\n            return fallback;\n        }\n        if (color.length === 7 && color.charAt(0) === '#') {\n            return color;\n        }\n        if (color.length === 4 && color.charAt(0) === '#') {\n            var r = color.charAt(1);\n            var g = color.charAt(2);\n            var b = color.charAt(3);\n            return \"#\" + r + r + g + g + b + b;\n        }\n        return fallback;\n    };\n    return ColorManager;\n}());\nexports.ColorManager = ColorManager;\n\n\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Buffer_1 = require(\"../Buffer\");\nvar BaseRenderLayer_1 = require(\"./BaseRenderLayer\");\nvar BLINK_INTERVAL = 600;\nvar CursorRenderLayer = (function (_super) {\n    __extends(CursorRenderLayer, _super);\n    function CursorRenderLayer(container, zIndex, colors) {\n        var _this = _super.call(this, container, 'cursor', zIndex, true, colors) || this;\n        _this._state = {\n            x: null,\n            y: null,\n            isFocused: null,\n            style: null,\n            width: null,\n        };\n        _this._cursorRenderers = {\n            'bar': _this._renderBarCursor.bind(_this),\n            'block': _this._renderBlockCursor.bind(_this),\n            'underline': _this._renderUnderlineCursor.bind(_this)\n        };\n        return _this;\n    }\n    CursorRenderLayer.prototype.resize = function (terminal, dim, charSizeChanged) {\n        _super.prototype.resize.call(this, terminal, dim, charSizeChanged);\n        this._state = {\n            x: null,\n            y: null,\n            isFocused: null,\n            style: null,\n            width: null,\n        };\n    };\n    CursorRenderLayer.prototype.reset = function (terminal) {\n        this._clearCursor();\n        if (this._cursorBlinkStateManager) {\n            this._cursorBlinkStateManager.dispose();\n            this._cursorBlinkStateManager = null;\n            this.onOptionsChanged(terminal);\n        }\n    };\n    CursorRenderLayer.prototype.onBlur = function (terminal) {\n        if (this._cursorBlinkStateManager) {\n            this._cursorBlinkStateManager.pause();\n        }\n        terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n    };\n    CursorRenderLayer.prototype.onFocus = function (terminal) {\n        if (this._cursorBlinkStateManager) {\n            this._cursorBlinkStateManager.resume(terminal);\n        }\n        else {\n            terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n        }\n    };\n    CursorRenderLayer.prototype.onOptionsChanged = function (terminal) {\n        var _this = this;\n        if (terminal.options.cursorBlink) {\n            if (!this._cursorBlinkStateManager) {\n                this._cursorBlinkStateManager = new CursorBlinkStateManager(terminal, function () {\n                    _this._render(terminal, true);\n                });\n            }\n        }\n        else {\n            if (this._cursorBlinkStateManager) {\n                this._cursorBlinkStateManager.dispose();\n                this._cursorBlinkStateManager = null;\n            }\n            terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n        }\n    };\n    CursorRenderLayer.prototype.onCursorMove = function (terminal) {\n        if (this._cursorBlinkStateManager) {\n            this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n        }\n    };\n    CursorRenderLayer.prototype.onGridChanged = function (terminal, startRow, endRow) {\n        if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n            this._render(terminal, false);\n        }\n    };\n    CursorRenderLayer.prototype._render = function (terminal, triggeredByAnimationFrame) {\n        if (!terminal.cursorState || terminal.cursorHidden) {\n            this._clearCursor();\n            return;\n        }\n        var cursorY = terminal.buffer.ybase + terminal.buffer.y;\n        var viewportRelativeCursorY = cursorY - terminal.buffer.ydisp;\n        if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n            this._clearCursor();\n            return;\n        }\n        var charData = terminal.buffer.lines.get(cursorY)[terminal.buffer.x];\n        if (!charData) {\n            return;\n        }\n        if (!terminal.isFocused) {\n            this._clearCursor();\n            this._ctx.save();\n            this._ctx.fillStyle = this._colors.cursor;\n            this._renderBlurCursor(terminal, terminal.buffer.x, viewportRelativeCursorY, charData);\n            this._ctx.restore();\n            this._state.x = terminal.buffer.x;\n            this._state.y = viewportRelativeCursorY;\n            this._state.isFocused = false;\n            this._state.style = terminal.options.cursorStyle;\n            this._state.width = charData[Buffer_1.CHAR_DATA_WIDTH_INDEX];\n            return;\n        }\n        if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n            this._clearCursor();\n            return;\n        }\n        if (this._state) {\n            if (this._state.x === terminal.buffer.x &&\n                this._state.y === viewportRelativeCursorY &&\n                this._state.isFocused === terminal.isFocused &&\n                this._state.style === terminal.options.cursorStyle &&\n                this._state.width === charData[Buffer_1.CHAR_DATA_WIDTH_INDEX]) {\n                return;\n            }\n            this._clearCursor();\n        }\n        this._ctx.save();\n        this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, terminal.buffer.x, viewportRelativeCursorY, charData);\n        this._ctx.restore();\n        this._state.x = terminal.buffer.x;\n        this._state.y = viewportRelativeCursorY;\n        this._state.isFocused = false;\n        this._state.style = terminal.options.cursorStyle;\n        this._state.width = charData[Buffer_1.CHAR_DATA_WIDTH_INDEX];\n    };\n    CursorRenderLayer.prototype._clearCursor = function () {\n        if (this._state) {\n            this.clearCells(this._state.x, this._state.y, this._state.width, 1);\n            this._state = {\n                x: null,\n                y: null,\n                isFocused: null,\n                style: null,\n                width: null,\n            };\n        }\n    };\n    CursorRenderLayer.prototype._renderBarCursor = function (terminal, x, y, charData) {\n        this._ctx.save();\n        this._ctx.fillStyle = this._colors.cursor;\n        this.fillLeftLineAtCell(x, y);\n        this._ctx.restore();\n    };\n    CursorRenderLayer.prototype._renderBlockCursor = function (terminal, x, y, charData) {\n        this._ctx.save();\n        this._ctx.fillStyle = this._colors.cursor;\n        this.fillCells(x, y, charData[Buffer_1.CHAR_DATA_WIDTH_INDEX], 1);\n        this._ctx.fillStyle = this._colors.cursorAccent;\n        this.fillCharTrueColor(terminal, charData, x, y);\n        this._ctx.restore();\n    };\n    CursorRenderLayer.prototype._renderUnderlineCursor = function (terminal, x, y, charData) {\n        this._ctx.save();\n        this._ctx.fillStyle = this._colors.cursor;\n        this.fillBottomLineAtCells(x, y);\n        this._ctx.restore();\n    };\n    CursorRenderLayer.prototype._renderBlurCursor = function (terminal, x, y, charData) {\n        this._ctx.save();\n        this._ctx.strokeStyle = this._colors.cursor;\n        this.strokeRectAtCell(x, y, charData[Buffer_1.CHAR_DATA_WIDTH_INDEX], 1);\n        this._ctx.restore();\n    };\n    return CursorRenderLayer;\n}(BaseRenderLayer_1.BaseRenderLayer));\nexports.CursorRenderLayer = CursorRenderLayer;\nvar CursorBlinkStateManager = (function () {\n    function CursorBlinkStateManager(terminal, renderCallback) {\n        this.renderCallback = renderCallback;\n        this.isCursorVisible = true;\n        if (terminal.isFocused) {\n            this._restartInterval();\n        }\n    }\n    Object.defineProperty(CursorBlinkStateManager.prototype, \"isPaused\", {\n        get: function () { return !(this._blinkStartTimeout || this._blinkInterval); },\n        enumerable: true,\n        configurable: true\n    });\n    CursorBlinkStateManager.prototype.dispose = function () {\n        if (this._blinkInterval) {\n            window.clearInterval(this._blinkInterval);\n            this._blinkInterval = null;\n        }\n        if (this._blinkStartTimeout) {\n            window.clearTimeout(this._blinkStartTimeout);\n            this._blinkStartTimeout = null;\n        }\n        if (this._animationFrame) {\n            window.cancelAnimationFrame(this._animationFrame);\n            this._animationFrame = null;\n        }\n    };\n    CursorBlinkStateManager.prototype.restartBlinkAnimation = function (terminal) {\n        var _this = this;\n        if (this.isPaused) {\n            return;\n        }\n        this._animationTimeRestarted = Date.now();\n        this.isCursorVisible = true;\n        if (!this._animationFrame) {\n            this._animationFrame = window.requestAnimationFrame(function () {\n                _this.renderCallback();\n                _this._animationFrame = null;\n            });\n        }\n    };\n    CursorBlinkStateManager.prototype._restartInterval = function (timeToStart) {\n        var _this = this;\n        if (timeToStart === void 0) { timeToStart = BLINK_INTERVAL; }\n        if (this._blinkInterval) {\n            window.clearInterval(this._blinkInterval);\n        }\n        this._blinkStartTimeout = setTimeout(function () {\n            if (_this._animationTimeRestarted) {\n                var time = BLINK_INTERVAL - (Date.now() - _this._animationTimeRestarted);\n                _this._animationTimeRestarted = null;\n                if (time > 0) {\n                    _this._restartInterval(time);\n                    return;\n                }\n            }\n            _this.isCursorVisible = false;\n            _this._animationFrame = window.requestAnimationFrame(function () {\n                _this.renderCallback();\n                _this._animationFrame = null;\n            });\n            _this._blinkInterval = setInterval(function () {\n                if (_this._animationTimeRestarted) {\n                    var time = BLINK_INTERVAL - (Date.now() - _this._animationTimeRestarted);\n                    _this._animationTimeRestarted = null;\n                    _this._restartInterval(time);\n                    return;\n                }\n                _this.isCursorVisible = !_this.isCursorVisible;\n                _this._animationFrame = window.requestAnimationFrame(function () {\n                    _this.renderCallback();\n                    _this._animationFrame = null;\n                });\n            }, BLINK_INTERVAL);\n        }, timeToStart);\n    };\n    CursorBlinkStateManager.prototype.pause = function () {\n        this.isCursorVisible = true;\n        if (this._blinkInterval) {\n            window.clearInterval(this._blinkInterval);\n            this._blinkInterval = null;\n        }\n        if (this._blinkStartTimeout) {\n            window.clearTimeout(this._blinkStartTimeout);\n            this._blinkStartTimeout = null;\n        }\n        if (this._animationFrame) {\n            window.cancelAnimationFrame(this._animationFrame);\n            this._animationFrame = null;\n        }\n    };\n    CursorBlinkStateManager.prototype.resume = function (terminal) {\n        this._animationTimeRestarted = null;\n        this._restartInterval();\n        this.restartBlinkAnimation(terminal);\n    };\n    return CursorBlinkStateManager;\n}());\n\n\n\n},{\"../Buffer\":1,\"./BaseRenderLayer\":18}],22:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GridCache = (function () {\n    function GridCache() {\n        this.cache = [];\n    }\n    GridCache.prototype.resize = function (width, height) {\n        for (var x = 0; x < width; x++) {\n            if (this.cache.length <= x) {\n                this.cache.push([]);\n            }\n            for (var y = this.cache[x].length; y < height; y++) {\n                this.cache[x].push(null);\n            }\n            this.cache[x].length = height;\n        }\n        this.cache.length = width;\n    };\n    GridCache.prototype.clear = function () {\n        for (var x = 0; x < this.cache.length; x++) {\n            for (var y = 0; y < this.cache[x].length; y++) {\n                this.cache[x][y] = null;\n            }\n        }\n    };\n    return GridCache;\n}());\nexports.GridCache = GridCache;\n\n\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseRenderLayer_1 = require(\"./BaseRenderLayer\");\nvar Types_1 = require(\"../Types\");\nvar LinkRenderLayer = (function (_super) {\n    __extends(LinkRenderLayer, _super);\n    function LinkRenderLayer(container, zIndex, colors, terminal) {\n        var _this = _super.call(this, container, 'link', zIndex, true, colors) || this;\n        _this._state = null;\n        terminal.linkifier.on(Types_1.LinkHoverEventTypes.HOVER, function (e) { return _this._onLinkHover(e); });\n        terminal.linkifier.on(Types_1.LinkHoverEventTypes.LEAVE, function (e) { return _this._onLinkLeave(e); });\n        return _this;\n    }\n    LinkRenderLayer.prototype.resize = function (terminal, dim, charSizeChanged) {\n        _super.prototype.resize.call(this, terminal, dim, charSizeChanged);\n        this._state = null;\n    };\n    LinkRenderLayer.prototype.reset = function (terminal) {\n        this._clearCurrentLink();\n    };\n    LinkRenderLayer.prototype._clearCurrentLink = function () {\n        if (this._state) {\n            this.clearCells(this._state.x, this._state.y, this._state.length, 1);\n            this._state = null;\n        }\n    };\n    LinkRenderLayer.prototype._onLinkHover = function (e) {\n        this._ctx.fillStyle = this._colors.foreground;\n        this.fillBottomLineAtCells(e.x, e.y, e.length);\n        this._state = e;\n    };\n    LinkRenderLayer.prototype._onLinkLeave = function (e) {\n        this._clearCurrentLink();\n    };\n    return LinkRenderLayer;\n}(BaseRenderLayer_1.BaseRenderLayer));\nexports.LinkRenderLayer = LinkRenderLayer;\n\n\n\n},{\"../Types\":14,\"./BaseRenderLayer\":18}],24:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TextRenderLayer_1 = require(\"./TextRenderLayer\");\nvar SelectionRenderLayer_1 = require(\"./SelectionRenderLayer\");\nvar CursorRenderLayer_1 = require(\"./CursorRenderLayer\");\nvar ColorManager_1 = require(\"./ColorManager\");\nvar LinkRenderLayer_1 = require(\"./LinkRenderLayer\");\nvar EventEmitter_1 = require(\"../EventEmitter\");\nvar ScreenDprMonitor_1 = require(\"../utils/ScreenDprMonitor\");\nvar Renderer = (function (_super) {\n    __extends(Renderer, _super);\n    function Renderer(_terminal, theme) {\n        var _this = _super.call(this) || this;\n        _this._terminal = _terminal;\n        _this._refreshRowsQueue = [];\n        _this._refreshAnimationFrame = null;\n        _this._isPaused = false;\n        _this._needsFullRefresh = false;\n        _this.colorManager = new ColorManager_1.ColorManager();\n        if (theme) {\n            _this.colorManager.setTheme(theme);\n        }\n        _this._renderLayers = [\n            new TextRenderLayer_1.TextRenderLayer(_this._terminal.element, 0, _this.colorManager.colors),\n            new SelectionRenderLayer_1.SelectionRenderLayer(_this._terminal.element, 1, _this.colorManager.colors),\n            new LinkRenderLayer_1.LinkRenderLayer(_this._terminal.element, 2, _this.colorManager.colors, _this._terminal),\n            new CursorRenderLayer_1.CursorRenderLayer(_this._terminal.element, 3, _this.colorManager.colors)\n        ];\n        _this.dimensions = {\n            scaledCharWidth: null,\n            scaledCharHeight: null,\n            scaledCellWidth: null,\n            scaledCellHeight: null,\n            scaledCharLeft: null,\n            scaledCharTop: null,\n            scaledCanvasWidth: null,\n            scaledCanvasHeight: null,\n            canvasWidth: null,\n            canvasHeight: null,\n            actualCellWidth: null,\n            actualCellHeight: null\n        };\n        _this._devicePixelRatio = window.devicePixelRatio;\n        _this._updateDimensions();\n        _this._screenDprMonitor = new ScreenDprMonitor_1.ScreenDprMonitor();\n        _this._screenDprMonitor.setListener(function () { return _this.onWindowResize(window.devicePixelRatio); });\n        if ('IntersectionObserver' in window) {\n            var observer = new IntersectionObserver(function (e) { return _this.onIntersectionChange(e[0]); }, { threshold: 0 });\n            observer.observe(_this._terminal.element);\n        }\n        return _this;\n    }\n    Renderer.prototype.onIntersectionChange = function (entry) {\n        this._isPaused = entry.intersectionRatio === 0;\n        if (!this._isPaused && this._needsFullRefresh) {\n            this._terminal.refresh(0, this._terminal.rows - 1);\n        }\n    };\n    Renderer.prototype.onWindowResize = function (devicePixelRatio) {\n        if (this._devicePixelRatio !== devicePixelRatio) {\n            this._devicePixelRatio = devicePixelRatio;\n            this.onResize(this._terminal.cols, this._terminal.rows, true);\n        }\n    };\n    Renderer.prototype.setTheme = function (theme) {\n        var _this = this;\n        this.colorManager.setTheme(theme);\n        this._renderLayers.forEach(function (l) {\n            l.onThemeChanged(_this._terminal, _this.colorManager.colors);\n            l.reset(_this._terminal);\n        });\n        if (this._isPaused) {\n            this._needsFullRefresh = true;\n        }\n        else {\n            this._terminal.refresh(0, this._terminal.rows - 1);\n        }\n        return this.colorManager.colors;\n    };\n    Renderer.prototype.onResize = function (cols, rows, didCharSizeChange) {\n        var _this = this;\n        this._updateDimensions();\n        this._renderLayers.forEach(function (l) { return l.resize(_this._terminal, _this.dimensions, didCharSizeChange); });\n        if (this._isPaused) {\n            this._needsFullRefresh = true;\n        }\n        else {\n            this._terminal.refresh(0, this._terminal.rows - 1);\n        }\n        this.emit('resize', {\n            width: this.dimensions.canvasWidth,\n            height: this.dimensions.canvasHeight\n        });\n    };\n    Renderer.prototype.onCharSizeChanged = function () {\n        this.onResize(this._terminal.cols, this._terminal.rows, true);\n    };\n    Renderer.prototype.onBlur = function () {\n        var _this = this;\n        this._runOperation(function (l) { return l.onBlur(_this._terminal); });\n    };\n    Renderer.prototype.onFocus = function () {\n        var _this = this;\n        this._runOperation(function (l) { return l.onFocus(_this._terminal); });\n    };\n    Renderer.prototype.onSelectionChanged = function (start, end) {\n        var _this = this;\n        this._runOperation(function (l) { return l.onSelectionChanged(_this._terminal, start, end); });\n    };\n    Renderer.prototype.onCursorMove = function () {\n        var _this = this;\n        this._runOperation(function (l) { return l.onCursorMove(_this._terminal); });\n    };\n    Renderer.prototype.onOptionsChanged = function () {\n        var _this = this;\n        this._runOperation(function (l) { return l.onOptionsChanged(_this._terminal); });\n    };\n    Renderer.prototype.clear = function () {\n        var _this = this;\n        this._runOperation(function (l) { return l.reset(_this._terminal); });\n    };\n    Renderer.prototype._runOperation = function (operation) {\n        if (this._isPaused) {\n            this._needsFullRefresh = true;\n        }\n        else {\n            this._renderLayers.forEach(function (l) { return operation(l); });\n        }\n    };\n    Renderer.prototype.queueRefresh = function (start, end) {\n        if (this._isPaused) {\n            this._needsFullRefresh = true;\n            return;\n        }\n        this._refreshRowsQueue.push({ start: start, end: end });\n        if (!this._refreshAnimationFrame) {\n            this._refreshAnimationFrame = window.requestAnimationFrame(this._refreshLoop.bind(this));\n        }\n    };\n    Renderer.prototype._refreshLoop = function () {\n        var _this = this;\n        var start;\n        var end;\n        if (this._refreshRowsQueue.length > 4) {\n            start = 0;\n            end = this._terminal.rows - 1;\n        }\n        else {\n            start = this._refreshRowsQueue[0].start;\n            end = this._refreshRowsQueue[0].end;\n            for (var i = 1; i < this._refreshRowsQueue.length; i++) {\n                if (this._refreshRowsQueue[i].start < start) {\n                    start = this._refreshRowsQueue[i].start;\n                }\n                if (this._refreshRowsQueue[i].end > end) {\n                    end = this._refreshRowsQueue[i].end;\n                }\n            }\n        }\n        this._refreshRowsQueue = [];\n        this._refreshAnimationFrame = null;\n        start = Math.max(start, 0);\n        end = Math.min(end, this._terminal.rows - 1);\n        this._renderLayers.forEach(function (l) { return l.onGridChanged(_this._terminal, start, end); });\n        this._terminal.emit('refresh', { start: start, end: end });\n    };\n    Renderer.prototype._updateDimensions = function () {\n        if (!this._terminal.charMeasure.width || !this._terminal.charMeasure.height) {\n            return;\n        }\n        this.dimensions.scaledCharWidth = Math.floor(this._terminal.charMeasure.width * window.devicePixelRatio);\n        this.dimensions.scaledCharHeight = Math.ceil(this._terminal.charMeasure.height * window.devicePixelRatio);\n        this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n        this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n        this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n        this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n        this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n        this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n        this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n        this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n        this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n        this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n    };\n    return Renderer;\n}(EventEmitter_1.EventEmitter));\nexports.Renderer = Renderer;\n\n\n\n},{\"../EventEmitter\":7,\"../utils/ScreenDprMonitor\":33,\"./ColorManager\":20,\"./CursorRenderLayer\":21,\"./LinkRenderLayer\":23,\"./SelectionRenderLayer\":25,\"./TextRenderLayer\":26}],25:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseRenderLayer_1 = require(\"./BaseRenderLayer\");\nvar SelectionRenderLayer = (function (_super) {\n    __extends(SelectionRenderLayer, _super);\n    function SelectionRenderLayer(container, zIndex, colors) {\n        var _this = _super.call(this, container, 'selection', zIndex, true, colors) || this;\n        _this._state = {\n            start: null,\n            end: null\n        };\n        return _this;\n    }\n    SelectionRenderLayer.prototype.resize = function (terminal, dim, charSizeChanged) {\n        _super.prototype.resize.call(this, terminal, dim, charSizeChanged);\n        this._state = {\n            start: null,\n            end: null\n        };\n    };\n    SelectionRenderLayer.prototype.reset = function (terminal) {\n        if (this._state.start && this._state.end) {\n            this._state = {\n                start: null,\n                end: null\n            };\n            this.clearAll();\n        }\n    };\n    SelectionRenderLayer.prototype.onSelectionChanged = function (terminal, start, end) {\n        if (this._state.start === start || this._state.end === end) {\n            return;\n        }\n        this.clearAll();\n        if (!start || !end) {\n            return;\n        }\n        var viewportStartRow = start[1] - terminal.buffer.ydisp;\n        var viewportEndRow = end[1] - terminal.buffer.ydisp;\n        var viewportCappedStartRow = Math.max(viewportStartRow, 0);\n        var viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n        if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n            return;\n        }\n        var startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n        var startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : terminal.cols;\n        this._ctx.fillStyle = this._colors.selection;\n        this.fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n        var middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n        this.fillCells(0, viewportCappedStartRow + 1, terminal.cols, middleRowsCount);\n        if (viewportCappedStartRow !== viewportCappedEndRow) {\n            var endCol = viewportEndRow === viewportCappedEndRow ? end[0] : terminal.cols;\n            this.fillCells(0, viewportCappedEndRow, endCol, 1);\n        }\n        this._state.start = [start[0], start[1]];\n        this._state.end = [end[0], end[1]];\n    };\n    return SelectionRenderLayer;\n}(BaseRenderLayer_1.BaseRenderLayer));\nexports.SelectionRenderLayer = SelectionRenderLayer;\n\n\n\n},{\"./BaseRenderLayer\":18}],26:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Buffer_1 = require(\"../Buffer\");\nvar Types_1 = require(\"./Types\");\nvar GridCache_1 = require(\"./GridCache\");\nvar BaseRenderLayer_1 = require(\"./BaseRenderLayer\");\nvar OVERLAP_OWNED_CHAR_DATA = [null, '', 0, -1];\nvar TextRenderLayer = (function (_super) {\n    __extends(TextRenderLayer, _super);\n    function TextRenderLayer(container, zIndex, colors) {\n        var _this = _super.call(this, container, 'text', zIndex, false, colors) || this;\n        _this._characterOverlapCache = {};\n        _this._state = new GridCache_1.GridCache();\n        return _this;\n    }\n    TextRenderLayer.prototype.resize = function (terminal, dim, charSizeChanged) {\n        _super.prototype.resize.call(this, terminal, dim, charSizeChanged);\n        var terminalFont = terminal.options.fontSize * window.devicePixelRatio + \"px \" + terminal.options.fontFamily;\n        if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n            this._characterWidth = dim.scaledCharWidth;\n            this._characterFont = terminalFont;\n            this._characterOverlapCache = {};\n        }\n        this._state.clear();\n        this._state.resize(terminal.cols, terminal.rows);\n    };\n    TextRenderLayer.prototype.reset = function (terminal) {\n        this._state.clear();\n        this.clearAll();\n    };\n    TextRenderLayer.prototype.onGridChanged = function (terminal, startRow, endRow) {\n        if (this._state.cache.length === 0) {\n            return;\n        }\n        for (var y = startRow; y <= endRow; y++) {\n            var row = y + terminal.buffer.ydisp;\n            var line = terminal.buffer.lines.get(row);\n            this.clearCells(0, y, terminal.cols, 1);\n            for (var x = 0; x < terminal.cols; x++) {\n                var charData = line[x];\n                var code = charData[Buffer_1.CHAR_DATA_CODE_INDEX];\n                var char = charData[Buffer_1.CHAR_DATA_CHAR_INDEX];\n                var attr = charData[Buffer_1.CHAR_DATA_ATTR_INDEX];\n                var width = charData[Buffer_1.CHAR_DATA_WIDTH_INDEX];\n                if (width === 0) {\n                    continue;\n                }\n                if (code === 32) {\n                    if (x > 0) {\n                        var previousChar = line[x - 1];\n                        if (this._isOverlapping(previousChar)) {\n                            continue;\n                        }\n                    }\n                }\n                var flags = attr >> 18;\n                var bg = attr & 0x1ff;\n                var isDefaultBackground = bg >= 256;\n                var isInvisible = flags & Types_1.FLAGS.INVISIBLE;\n                var isInverted = flags & Types_1.FLAGS.INVERSE;\n                if (!code || (code === 32 && isDefaultBackground && !isInverted) || isInvisible) {\n                    continue;\n                }\n                if (width !== 0 && this._isOverlapping(charData)) {\n                    if (x < line.length - 1 && line[x + 1][Buffer_1.CHAR_DATA_CODE_INDEX] === 32) {\n                        width = 2;\n                    }\n                }\n                var fg = (attr >> 9) & 0x1ff;\n                if (isInverted) {\n                    var temp = bg;\n                    bg = fg;\n                    fg = temp;\n                    if (fg === 256) {\n                        fg = BaseRenderLayer_1.INVERTED_DEFAULT_COLOR;\n                    }\n                    if (bg === 257) {\n                        bg = BaseRenderLayer_1.INVERTED_DEFAULT_COLOR;\n                    }\n                }\n                if (width === 2) {\n                }\n                if (bg < 256) {\n                    this._ctx.save();\n                    this._ctx.fillStyle = (bg === BaseRenderLayer_1.INVERTED_DEFAULT_COLOR ? this._colors.foreground : this._colors.ansi[bg]);\n                    this.fillCells(x, y, width, 1);\n                    this._ctx.restore();\n                }\n                this._ctx.save();\n                if (flags & Types_1.FLAGS.BOLD) {\n                    this._ctx.font = \"bold \" + this._ctx.font;\n                    if (fg < 8) {\n                        fg += 8;\n                    }\n                }\n                if (flags & Types_1.FLAGS.UNDERLINE) {\n                    if (fg === BaseRenderLayer_1.INVERTED_DEFAULT_COLOR) {\n                        this._ctx.fillStyle = this._colors.background;\n                    }\n                    else if (fg < 256) {\n                        this._ctx.fillStyle = this._colors.ansi[fg];\n                    }\n                    else {\n                        this._ctx.fillStyle = this._colors.foreground;\n                    }\n                    this.fillBottomLineAtCells(x, y);\n                }\n                this.drawChar(terminal, char, code, width, x, y, fg, bg, !!(flags & Types_1.FLAGS.BOLD), !!(flags & Types_1.FLAGS.DIM));\n                this._ctx.restore();\n            }\n        }\n    };\n    TextRenderLayer.prototype._isOverlapping = function (charData) {\n        if (charData[Buffer_1.CHAR_DATA_WIDTH_INDEX] !== 1) {\n            return false;\n        }\n        var code = charData[Buffer_1.CHAR_DATA_CODE_INDEX];\n        if (code < 256) {\n            return false;\n        }\n        var char = charData[Buffer_1.CHAR_DATA_CHAR_INDEX];\n        if (this._characterOverlapCache.hasOwnProperty(char)) {\n            return this._characterOverlapCache[char];\n        }\n        this._ctx.save();\n        this._ctx.font = this._characterFont;\n        var overlaps = Math.floor(this._ctx.measureText(char).width) > this._characterWidth;\n        this._ctx.restore();\n        this._characterOverlapCache[char] = overlaps;\n        return overlaps;\n    };\n    TextRenderLayer.prototype._clearChar = function (x, y) {\n        var colsToClear = 1;\n        var state = this._state.cache[x][y];\n        if (state && state[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 2) {\n            colsToClear = 2;\n        }\n        this.clearCells(x, y, colsToClear, 1);\n    };\n    return TextRenderLayer;\n}(BaseRenderLayer_1.BaseRenderLayer));\nexports.TextRenderLayer = TextRenderLayer;\n\n\n\n},{\"../Buffer\":1,\"./BaseRenderLayer\":18,\"./GridCache\":22,\"./Types\":27}],27:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FLAGS;\n(function (FLAGS) {\n    FLAGS[FLAGS[\"BOLD\"] = 1] = \"BOLD\";\n    FLAGS[FLAGS[\"UNDERLINE\"] = 2] = \"UNDERLINE\";\n    FLAGS[FLAGS[\"BLINK\"] = 4] = \"BLINK\";\n    FLAGS[FLAGS[\"INVERSE\"] = 8] = \"INVERSE\";\n    FLAGS[FLAGS[\"INVISIBLE\"] = 16] = \"INVISIBLE\";\n    FLAGS[FLAGS[\"DIM\"] = 32] = \"DIM\";\n})(FLAGS = exports.FLAGS || (exports.FLAGS = {}));\n;\n\n\n\n},{}],28:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Generic_1 = require(\"./Generic\");\nvar isNode = (typeof navigator === 'undefined') ? true : false;\nvar userAgent = (isNode) ? 'node' : navigator.userAgent;\nvar platform = (isNode) ? 'node' : navigator.platform;\nexports.isFirefox = !!~userAgent.indexOf('Firefox');\nexports.isMSIE = !!~userAgent.indexOf('MSIE') || !!~userAgent.indexOf('Trident');\nexports.isMac = Generic_1.contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexports.isIpad = platform === 'iPad';\nexports.isIphone = platform === 'iPhone';\nexports.isMSWindows = Generic_1.contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexports.isLinux = platform.indexOf('Linux') >= 0;\n\n\n\n},{\"./Generic\":31}],29:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EventEmitter_1 = require(\"../EventEmitter\");\nvar CharMeasure = (function (_super) {\n    __extends(CharMeasure, _super);\n    function CharMeasure(document, parentElement) {\n        var _this = _super.call(this) || this;\n        _this._document = document;\n        _this._parentElement = parentElement;\n        _this._measureElement = _this._document.createElement('span');\n        _this._measureElement.style.position = 'absolute';\n        _this._measureElement.style.top = '0';\n        _this._measureElement.style.left = '-9999em';\n        _this._measureElement.style.lineHeight = 'normal';\n        _this._measureElement.textContent = 'W';\n        _this._measureElement.setAttribute('aria-hidden', 'true');\n        _this._parentElement.appendChild(_this._measureElement);\n        return _this;\n    }\n    Object.defineProperty(CharMeasure.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CharMeasure.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CharMeasure.prototype.measure = function (options) {\n        this._measureElement.style.fontFamily = options.fontFamily;\n        this._measureElement.style.fontSize = options.fontSize + \"px\";\n        var geometry = this._measureElement.getBoundingClientRect();\n        if (geometry.width === 0 || geometry.height === 0) {\n            return;\n        }\n        if (this._width !== geometry.width || this._height !== geometry.height) {\n            this._width = geometry.width;\n            this._height = Math.ceil(geometry.height);\n            this.emit('charsizechanged');\n        }\n    };\n    return CharMeasure;\n}(EventEmitter_1.EventEmitter));\nexports.CharMeasure = CharMeasure;\n\n\n\n},{\"../EventEmitter\":7}],30:[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EventEmitter_1 = require(\"../EventEmitter\");\nvar CircularList = (function (_super) {\n    __extends(CircularList, _super);\n    function CircularList(_maxLength) {\n        var _this = _super.call(this) || this;\n        _this._maxLength = _maxLength;\n        _this._array = new Array(_this._maxLength);\n        _this._startIndex = 0;\n        _this._length = 0;\n        return _this;\n    }\n    Object.defineProperty(CircularList.prototype, \"maxLength\", {\n        get: function () {\n            return this._maxLength;\n        },\n        set: function (newMaxLength) {\n            if (this._maxLength === newMaxLength) {\n                return;\n            }\n            var newArray = new Array(newMaxLength);\n            for (var i = 0; i < Math.min(newMaxLength, this.length); i++) {\n                newArray[i] = this._array[this._getCyclicIndex(i)];\n            }\n            this._array = newArray;\n            this._maxLength = newMaxLength;\n            this._startIndex = 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CircularList.prototype, \"length\", {\n        get: function () {\n            return this._length;\n        },\n        set: function (newLength) {\n            if (newLength > this._length) {\n                for (var i = this._length; i < newLength; i++) {\n                    this._array[i] = undefined;\n                }\n            }\n            this._length = newLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CircularList.prototype, \"forEach\", {\n        get: function () {\n            var _this = this;\n            return function (callbackfn) {\n                var i = 0;\n                var length = _this.length;\n                for (var i_1 = 0; i_1 < length; i_1++) {\n                    callbackfn(_this.get(i_1), i_1);\n                }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CircularList.prototype.get = function (index) {\n        return this._array[this._getCyclicIndex(index)];\n    };\n    CircularList.prototype.set = function (index, value) {\n        this._array[this._getCyclicIndex(index)] = value;\n    };\n    CircularList.prototype.push = function (value) {\n        this._array[this._getCyclicIndex(this._length)] = value;\n        if (this._length === this._maxLength) {\n            this._startIndex++;\n            if (this._startIndex === this._maxLength) {\n                this._startIndex = 0;\n            }\n            this.emit('trim', 1);\n        }\n        else {\n            this._length++;\n        }\n    };\n    CircularList.prototype.pop = function () {\n        return this._array[this._getCyclicIndex(this._length-- - 1)];\n    };\n    CircularList.prototype.splice = function (start, deleteCount) {\n        var items = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            items[_i - 2] = arguments[_i];\n        }\n        if (deleteCount) {\n            for (var i = start; i < this._length - deleteCount; i++) {\n                this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n            }\n            this._length -= deleteCount;\n        }\n        if (items && items.length) {\n            for (var i = this._length - 1; i >= start; i--) {\n                this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n            }\n            for (var i = 0; i < items.length; i++) {\n                this._array[this._getCyclicIndex(start + i)] = items[i];\n            }\n            if (this._length + items.length > this.maxLength) {\n                var countToTrim = (this._length + items.length) - this.maxLength;\n                this._startIndex += countToTrim;\n                this._length = this.maxLength;\n                this.emit('trim', countToTrim);\n            }\n            else {\n                this._length += items.length;\n            }\n        }\n    };\n    CircularList.prototype.trimStart = function (count) {\n        if (count > this._length) {\n            count = this._length;\n        }\n        this._startIndex += count;\n        this._length -= count;\n        this.emit('trim', count);\n    };\n    CircularList.prototype.shiftElements = function (start, count, offset) {\n        if (count <= 0) {\n            return;\n        }\n        if (start < 0 || start >= this._length) {\n            throw new Error('start argument out of range');\n        }\n        if (start + offset < 0) {\n            throw new Error('Cannot shift elements in list beyond index 0');\n        }\n        if (offset > 0) {\n            for (var i = count - 1; i >= 0; i--) {\n                this.set(start + i + offset, this.get(start + i));\n            }\n            var expandListBy = (start + count + offset) - this._length;\n            if (expandListBy > 0) {\n                this._length += expandListBy;\n                while (this._length > this.maxLength) {\n                    this._length--;\n                    this._startIndex++;\n                    this.emit('trim', 1);\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                this.set(start + i + offset, this.get(start + i));\n            }\n        }\n    };\n    CircularList.prototype._getCyclicIndex = function (index) {\n        return (this._startIndex + index) % this.maxLength;\n    };\n    return CircularList;\n}(EventEmitter_1.EventEmitter));\nexports.CircularList = CircularList;\n\n\n\n},{\"../EventEmitter\":7}],31:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction contains(arr, el) {\n    return arr.indexOf(el) >= 0;\n}\nexports.contains = contains;\n;\n\n\n\n},{}],32:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MouseHelper = (function () {\n    function MouseHelper(_renderer) {\n        this._renderer = _renderer;\n    }\n    MouseHelper.getCoordsRelativeToElement = function (event, element) {\n        if (event.pageX == null) {\n            return null;\n        }\n        var originalElement = element;\n        var x = event.pageX;\n        var y = event.pageY;\n        while (element) {\n            x -= element.offsetLeft;\n            y -= element.offsetTop;\n            element = 'offsetParent' in element ? element.offsetParent : element.parentElement;\n        }\n        element = originalElement;\n        while (element && element !== element.ownerDocument.body) {\n            x += element.scrollLeft;\n            y += element.scrollTop;\n            element = element.parentElement;\n        }\n        return [x, y];\n    };\n    MouseHelper.prototype.getCoords = function (event, element, charMeasure, lineHeight, colCount, rowCount, isSelection) {\n        if (!charMeasure.width || !charMeasure.height) {\n            return null;\n        }\n        var coords = MouseHelper.getCoordsRelativeToElement(event, element);\n        if (!coords) {\n            return null;\n        }\n        coords[0] = Math.ceil((coords[0] + (isSelection ? this._renderer.dimensions.actualCellWidth / 2 : 0)) / this._renderer.dimensions.actualCellWidth);\n        coords[1] = Math.ceil(coords[1] / this._renderer.dimensions.actualCellHeight);\n        coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n        coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n        return coords;\n    };\n    MouseHelper.prototype.getRawByteCoords = function (event, element, charMeasure, lineHeight, colCount, rowCount) {\n        var coords = this.getCoords(event, element, charMeasure, lineHeight, colCount, rowCount);\n        var x = coords[0];\n        var y = coords[1];\n        x += 32;\n        y += 32;\n        return { x: x, y: y };\n    };\n    return MouseHelper;\n}());\nexports.MouseHelper = MouseHelper;\n\n\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ScreenDprMonitor = (function () {\n    function ScreenDprMonitor() {\n    }\n    ScreenDprMonitor.prototype.setListener = function (listener) {\n        var _this = this;\n        if (this._listener) {\n            this.clearListener();\n        }\n        this._listener = listener;\n        this._outerListener = function () {\n            _this._listener(window.devicePixelRatio, _this._currentDevicePixelRatio);\n            _this._updateDpr();\n        };\n        this._updateDpr();\n    };\n    ScreenDprMonitor.prototype._updateDpr = function () {\n        if (this._resolutionMediaMatchList) {\n            this._resolutionMediaMatchList.removeListener(this._outerListener);\n        }\n        this._currentDevicePixelRatio = window.devicePixelRatio;\n        this._resolutionMediaMatchList = window.matchMedia(\"screen and (resolution: \" + window.devicePixelRatio + \"dppx)\");\n        this._resolutionMediaMatchList.addListener(this._outerListener);\n    };\n    ScreenDprMonitor.prototype.clearListener = function () {\n        if (!this._listener) {\n            return;\n        }\n        this._resolutionMediaMatchList.removeListener(this._outerListener);\n        this._listener = null;\n        this._outerListener = null;\n    };\n    return ScreenDprMonitor;\n}());\nexports.ScreenDprMonitor = ScreenDprMonitor;\n\n\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BellSound = 'data:audio/wav;base64,UklGRigBAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQQBAADpAFgCwAMlBZoG/wdmCcoKRAypDQ8PbRDBEQQTOxRtFYcWlBePGIUZXhoiG88bcBz7HHIdzh0WHlMeZx51HmkeUx4WHs8dah0AHXwc3hs9G4saxRnyGBIYGBcQFv8U4RPAEoYRQBACD70NWwwHC6gJOwjWBloF7gOBAhABkf8b/qv8R/ve+Xf4Ife79W/0JfPZ8Z/wde9N7ijtE+wU6xvqM+lb6H7nw+YX5mrlxuQz5Mzje+Ma49fioeKD4nXiYeJy4pHitOL04j/jn+MN5IPkFOWs5U3mDefM55/ogOl36m7rdOyE7abuyu8D8Unyj/Pg9D/2qfcb+Yn6/vuK/Qj/lAAlAg==';\n\n\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Terminal_1 = require(\"./Terminal\");\nmodule.exports = Terminal_1.Terminal;\n\n\n\n},{\"./Terminal\":13}]},{},[35])(35)\n});\n//# sourceMappingURL=xterm.js.map\n\n\n//# sourceURL=webpack:///./xterm.js/xterm.js?");

/***/ })

/******/ });